### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-client-shared.Constants'
    name: Constants
    fullName: Constants
    children:
      - '@ms/sp-client-shared.Constants.aboutToExpireIntervalSeconds'
      - '@ms/sp-client-shared.Constants.apiUrl'
      - '@ms/sp-client-shared.Constants.npmPackageVersion'
      - '@ms/sp-client-shared.Constants.retriableErrorCodes'
      - '@ms/sp-client-shared.Constants.retries'
      - '@ms/sp-client-shared.Constants.tokenCacheSessionStorageId'
      - '@ms/sp-client-shared.Constants.unexpectedErrorCodeFormat'
      - '@ms/sp-client-shared.Constants.unexpectedTokenMessageFormat'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-client-shared'
  - uid: '@ms/sp-client-shared.Constants.aboutToExpireIntervalSeconds'
    name: aboutToExpireIntervalSeconds
    fullName: aboutToExpireIntervalSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If the token is about to expire, a new one will be requested.
      A token is considered "about to expire" if:
      (tokenExpirationTime - currentTime) < aboutToExpireIntervalSeconds
    syntax:
      content: static number aboutToExpireIntervalSeconds
      return:
        type:
          - number
  - uid: '@ms/sp-client-shared.Constants.apiUrl'
    name: apiUrl
    fullName: apiUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: The token will be requested from this URL
    syntax:
      content: static string apiUrl
      return:
        type:
          - string
  - uid: '@ms/sp-client-shared.Constants.npmPackageVersion'
    name: npmPackageVersion
    fullName: npmPackageVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The version is used to assure unicity in the session storage keys used
      used by the TokenUtility.
    syntax:
      content: static string npmPackageVersion
      return:
        type:
          - string
  - uid: '@ms/sp-client-shared.Constants.retriableErrorCodes'
    name: retriableErrorCodes
    fullName: retriableErrorCodes
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      If an error from this list would be encountered then the request would be
      retried

      for Constants.retries times.

      This list MUST always be kept in sync with the serverside error codes

      A better alternative would be to have the server send a boolean
      shouldRetry flag


      The serverside error codes are defined in the class
      SPDelegationTokenServiceProviderErrorCodes
    syntax:
      content: 'static number[] retriableErrorCodes'
      return:
        type:
          - 'number[]'
  - uid: '@ms/sp-client-shared.Constants.retries'
    name: retries
    fullName: retries
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Number of times to retry the server request in the case of a retriable
      error
    syntax:
      content: static number retries
      return:
        type:
          - number
  - uid: '@ms/sp-client-shared.Constants.tokenCacheSessionStorageId'
    name: tokenCacheSessionStorageId
    fullName: tokenCacheSessionStorageId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      This id is used to get / persist the token cache into session storage.
      It is passed to window.sessionStorage.setItem(id, item) / getItem(id)
    syntax:
      content: static string tokenCacheSessionStorageId
      return:
        type:
          - string
  - uid: '@ms/sp-client-shared.Constants.unexpectedErrorCodeFormat'
    name: unexpectedErrorCodeFormat
    fullName: unexpectedErrorCodeFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An exception with this message will be thrown if the error code from the
      response

      does not have the expected format described bellow
    syntax:
      content: static string unexpectedErrorCodeFormat
      return:
        type:
          - string
  - uid: '@ms/sp-client-shared.Constants.unexpectedTokenMessageFormat'
    name: unexpectedTokenMessageFormat
    fullName: unexpectedTokenMessageFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An exception with the message will be thrown if the token couldn't be
      parsed from the response
    syntax:
      content: static string unexpectedTokenMessageFormat
      return:
        type:
          - string
