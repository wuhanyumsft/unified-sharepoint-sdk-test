### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-post-build-tasks.AssembliesBundlerTask'
    name: AssembliesBundlerTask
    fullName: AssembliesBundlerTask
    children:
      - '@ms/sp-post-build-tasks.AssembliesBundlerTask.constructor'
      - '@ms/sp-post-build-tasks.AssembliesBundlerTask.executeTask'
      - '@ms/sp-post-build-tasks.AssembliesBundlerTask.isEnabled'
      - '@ms/sp-post-build-tasks.AssembliesBundlerTask.loadSchema'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @@ms/sp-post-build-tasks.PostBuildGulpTask<@@ms/sp-post-build-tasks.IAssembliesBundlerTaskConfig>
    package: '@ms/sp-post-build-tasks'
  - uid: '@ms/sp-post-build-tasks.AssembliesBundlerTask.constructor'
    name: AssembliesBundlerTask
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new AssembliesBundlerTask()
      parameters: []
  - uid: '@ms/sp-post-build-tasks.AssembliesBundlerTask.executeTask'
    name: executeTask
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function executeTask(gulp: any, completeCallback: (error?: string) =>
        void)
      parameters:
        - id: gulp
          type:
            - any
          description: ''
        - id: completeCallback
          type:
            - '(error?: string) => void'
          description: ''
  - uid: '@ms/sp-post-build-tasks.AssembliesBundlerTask.isEnabled'
    name: isEnabled
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isEnabled()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-post-build-tasks.AssembliesBundlerTask.loadSchema'
    name: loadSchema
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function loadSchema()
      parameters: []
      return:
        type:
          - Object
