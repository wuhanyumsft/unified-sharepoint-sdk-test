### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig'
    name: IAssembliesPrepareDeployTaskConfig
    fullName: IAssembliesPrepareDeployTaskConfig
    children:
      - '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.cdnBasePath'
      - '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.cdnUrlPrefix'
      - '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.debugBasePath'
      - '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.deployCdnPath'
      - >-
        @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.excludeHashFromFileNames
      - >-
        @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.localeInDirectoryName
      - >-
        @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.postProcessProductionManifestFunction
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-post-build-tasks'
  - uid: '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.cdnBasePath'
    name: cdnBasePath
    fullName: cdnBasePath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The CDN base path. This value will populate the "internalModuleBaseUrls"
      CDN manifest property.
    syntax:
      content: string cdnBasePath
      return:
        type:
          - string
  - uid: '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.cdnUrlPrefix'
    name: cdnUrlPrefix
    fullName: cdnUrlPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A prefix to prepend to all assets' URLs. For example, if this value is
      "foobar", a resulting CDN path for an asset
       called "baz.js" will be "foobar/baz.js"
    syntax:
      content: string cdnUrlPrefix
      return:
        type:
          - string
  - uid: '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.debugBasePath'
    name: debugBasePath
    fullName: debugBasePath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The debug base path, which is the value that will populate the
      "internalModuleBaseUrls" manifest property for
       debug manifests.
    syntax:
      content: string debugBasePath
      return:
        type:
          - string
  - uid: '@ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.deployCdnPath'
    name: deployCdnPath
    fullName: deployCdnPath
    children: []
    langs:
      - typeScript
    type: property
    summary: The deploy CDN path.
    syntax:
      content: string deployCdnPath
      return:
        type:
          - string
  - uid: >-
      @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.excludeHashFromFileNames
    name: excludeHashFromFileNames
    fullName: excludeHashFromFileNames
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, production builds will no longer generate file names that have a
      hash.
    syntax:
      content: boolean excludeHashFromFileNames
      return:
        type:
          - boolean
  - uid: >-
      @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.localeInDirectoryName
    name: localeInDirectoryName
    fullName: localeInDirectoryName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, production builds will place localized files in directories named
      according to the locale. For example
       an output file called "my-component.js" will be written to "<deployCdnPath>/my-component_en-us-<hash>.js" if this
       property is false and it will be written to "<deployCdnPath>/en-us/my-component-<hash>.js" if this property
       is true. Non-localized resources will be placed in the same directory regardless of whether this property is true
       or false. Defaults to false.
    syntax:
      content: boolean localeInDirectoryName
      return:
        type:
          - boolean
  - uid: >-
      @ms/sp-post-build-tasks.IAssembliesPrepareDeployTaskConfig.postProcessProductionManifestFunction
    name: postProcessProductionManifestFunction
    fullName: postProcessProductionManifestFunction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A function that takes a manifest and returns an object. If defined, it is
      called on every production manifest
       before being written to disk.
    syntax:
      content: >-
        (manifest: IClientSideComponentManifest) => Object
        postProcessProductionManifestFunction
      return:
        type:
          - '(manifest: IClientSideComponentManifest) => Object'
