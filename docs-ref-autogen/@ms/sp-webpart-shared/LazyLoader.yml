### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-webpart-shared.LazyLoader'
    name: LazyLoader
    fullName: LazyLoader
    children:
      - '@ms/sp-webpart-shared.LazyLoader.componentDidMount'
      - '@ms/sp-webpart-shared.LazyLoader.componentWillUnmount'
      - '@ms/sp-webpart-shared.LazyLoader.constructor'
      - '@ms/sp-webpart-shared.LazyLoader.render'
      - '@ms/sp-webpart-shared.LazyLoader.shouldComponentUpdate'
    langs:
      - typeScript
    type: class
    summary: >-
      LazyLoader component ensures that the only child component is rendered
      only  when

      is it going to be visible. It rather renders provided placeholder or empty
      division with provided height.
    extends:
      name: >-
        @@ms/sp-webpart-shared.LazyLoader<@@ms/sp-webpart-shared.ILazyLoaderProps>
    package: '@ms/sp-webpart-shared'
  - uid: '@ms/sp-webpart-shared.LazyLoader.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-webpart-shared.LazyLoader.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-webpart-shared.LazyLoader.constructor'
    name: LazyLoader
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new LazyLoader(props: ILazyLoaderProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-webpart-shared.ILazyLoaderProps'
          description: ''
  - uid: '@ms/sp-webpart-shared.LazyLoader.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<any>
  - uid: '@ms/sp-webpart-shared.LazyLoader.shouldComponentUpdate'
    name: shouldComponentUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function shouldComponentUpdate()
      parameters: []
      return:
        type:
          - boolean
