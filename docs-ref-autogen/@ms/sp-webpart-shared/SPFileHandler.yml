### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-webpart-shared.SPFileHandler'
    name: SPFileHandler
    fullName: SPFileHandler
    children:
      - '@ms/sp-webpart-shared.SPFileHandler.getPageName'
      - '@ms/sp-webpart-shared.SPFileHandler.readFile'
      - '@ms/sp-webpart-shared.SPFileHandler.removeExtension'
      - '@ms/sp-webpart-shared.SPFileHandler.replaceSpecialCharacters'
      - '@ms/sp-webpart-shared.SPFileHandler.constructor'
      - '@ms/sp-webpart-shared.SPFileHandler.uploadFile'
      - '@ms/sp-webpart-shared.SPFileHandler.validateFileType'
      - '@ms/sp-webpart-shared.SPFileHandler.validateMimeType'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-webpart-shared'
  - uid: '@ms/sp-webpart-shared.SPFileHandler.getPageName'
    name: getPageName
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the current page name without extension and special characters
    syntax:
      content: 'function getPageName(pathname: string)'
      parameters:
        - id: pathname
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-webpart-shared.SPFileHandler.readFile'
    name: readFile
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Read a file as dataURL for display, then this method to define the action
      on completion of the reading
    syntax:
      content: 'function readFile(file: File)'
      parameters:
        - id: file
          type:
            - File
          description: ''
      return:
        type:
          - Promise<string>
  - uid: '@ms/sp-webpart-shared.SPFileHandler.removeExtension'
    name: removeExtension
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove the extesion from a file name
    syntax:
      content: 'function removeExtension(inputString: string)'
      parameters:
        - id: inputString
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-webpart-shared.SPFileHandler.replaceSpecialCharacters'
    name: replaceSpecialCharacters
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Url safe file name without incompatible special characters
    syntax:
      content: 'static function replaceSpecialCharacters(inputString: string)'
      parameters:
        - id: inputString
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-webpart-shared.SPFileHandler.constructor'
    name: SPFileHandler
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SPFileHandler(serviceScope: ServiceScope, containerUrl?: string)'
      parameters:
        - id: serviceScope
          type:
            - ServiceScope
          description: ''
        - id: containerUrl
          type:
            - string
          description: ''
          optional: true
  - uid: '@ms/sp-webpart-shared.SPFileHandler.uploadFile'
    name: uploadFile
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upload a single file to pre-defined end point, with an optionally
      specified name

      returns a promise to define the actions on completion of each file upload
    syntax:
      content: >-
        function uploadFile(file: File, fileSrc?: string, overriddenFileName?:
        string, overriddenPageName?: string)
      parameters:
        - id: file
          type:
            - File
          description: the single file to be uploaded
        - id: fileSrc
          type:
            - string
          description: ''
          optional: true
        - id: overriddenFileName
          type:
            - string
          description: ''
          optional: true
        - id: overriddenPageName
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<@@ms/sp-webpart-shared.IFileUploadResponse>
  - uid: '@ms/sp-webpart-shared.SPFileHandler.validateFileType'
    name: validateFileType
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate the file type with a list of extensions
    syntax:
      content: >-
        function validateFileType(file: File, fileExtensions:
        ReadonlyArray<string>)
      parameters:
        - id: file
          type:
            - File
          description: ''
        - id: fileExtensions
          type:
            - ReadonlyArray<string>
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-webpart-shared.SPFileHandler.validateMimeType'
    name: validateMimeType
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate the mime type with a list of extensions
    syntax:
      content: >-
        function validateMimeType(file: Blob, fileExtensions:
        ReadonlyArray<string>)
      parameters:
        - id: file
          type:
            - Blob
          description: ''
        - id: fileExtensions
          type:
            - ReadonlyArray<string>
          description: ''
      return:
        type:
          - boolean
