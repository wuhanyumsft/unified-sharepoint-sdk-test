### YamlMime:UniversalReference
items:
  - uid: '@ms/listview-spfx-host.IListViewAdapter'
    name: IListViewAdapter
    fullName: IListViewAdapter
    children:
      - '@ms/listview-spfx-host.IListViewAdapter.addColumnAdapter'
      - '@ms/listview-spfx-host.IListViewAdapter.columnAdapters'
      - '@ms/listview-spfx-host.IListViewAdapter.createRowAdapter'
      - '@ms/listview-spfx-host.IListViewAdapter.dispose'
      - '@ms/listview-spfx-host.IListViewAdapter.loadCommandSet'
      - '@ms/listview-spfx-host.IListViewAdapter.loadFieldCustomizers'
      - '@ms/listview-spfx-host.IListViewAdapter.raiseSelectedRowsChangedEvent'
    langs:
      - typeScript
    type: interface
    summary: >-
      This object is provided by the SPFx host, obtained via
      ISpfxAdapter.createListViewAdapter().

      It corresponds to an instance of the ListView, and ensures that all SPFx
      resources are

      disposed properly when the ListView is disposed.
    package: '@ms/listview-spfx-host'
  - uid: '@ms/listview-spfx-host.IListViewAdapter.addColumnAdapter'
    name: addColumnAdapter
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Creates a new IColumnAdapter object and adds it to the columns for this
      ListView.

      The column will be disposed by IListViewAdapter.dispose().

      NOTE: This will throw a validation exception if the IColumn is missing
      required data.
    syntax:
      content: 'function addColumnAdapter(column: IColumn)'
      parameters:
        - id: column
          type:
            - '@@ms/listview-spfx-host.IColumn'
          description: ''
      return:
        type:
          - '@@ms/listview-spfx-host.IColumnAdapter'
  - uid: '@ms/listview-spfx-host.IListViewAdapter.columnAdapters'
    name: columnAdapters
    fullName: columnAdapters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The columns that were added to this ListView by calling
      addColumnAdapter().
    syntax:
      content: ReadonlyArray<IColumnAdapter> columnAdapters
      return:
        type:
          - ReadonlyArray<@@ms/listview-spfx-host.IColumnAdapter>
  - uid: '@ms/listview-spfx-host.IListViewAdapter.createRowAdapter'
    name: createRowAdapter
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Creates a new IRowAdapter associated with this ListView.  Note that the
      IListViewAdapter

      itself does not keep track of rows, since it assumes they might be part of
      a complicated

      virtual scrolling surface.

      NOTE: This will throw a validation exception if the IColumn is missing
      required data.
    syntax:
      content: 'function createRowAdapter(row: IRow)'
      parameters:
        - id: row
          type:
            - '@@ms/listview-spfx-host.IRow'
          description: ''
      return:
        type:
          - '@@ms/listview-spfx-host.IRowAdapter'
  - uid: '@ms/listview-spfx-host.IListViewAdapter.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Dispose all resources (e.g. field customizer instances) associated with
      this adapter.
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@ms/listview-spfx-host.IListViewAdapter.loadCommandSet'
    name: loadCommandSet
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Loads a CommandSet client-side extension, using this ListView as its
      context.

      NOTE: If the component fails to load, then the promise will reject.  Thus,
      the application

      must attach a "catch" handler.
    syntax:
      content: >-
        function loadCommandSet(clientSideComponentId: string,
        clientSideComponentProperties: string)
      parameters:
        - id: clientSideComponentId
          type:
            - string
          description: ''
        - id: clientSideComponentProperties
          type:
            - string
          description: ''
      return:
        type:
          - Promise<@@ms/listview-spfx-host.ICommandSetAdapter>
  - uid: '@ms/listview-spfx-host.IListViewAdapter.loadFieldCustomizers'
    name: loadFieldCustomizers
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      After all the columns have been created, the application should call
      loadFieldCustomizers()

      before it begins rendering.  The promise will resolve after all of the
      field loadFieldCustomizers

      have been loaded and initialized.

      NOTE: This promise will never reject, so there is no need for a "catch"
      handler.

      If errors occur, they will be reported via the onFieldCustomizerError()
      callback.
    syntax:
      content: function loadFieldCustomizers()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/listview-spfx-host.IListViewAdapter.raiseSelectedRowsChangedEvent'
    name: raiseSelectedRowsChangedEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: Raises an event for SPFx when the selected rows in the list are modified.
    syntax:
      content: >-
        function raiseSelectedRowsChangedEvent(selectedRows:
        ReadonlyArray<IRowAdapter>)
      parameters:
        - id: selectedRows
          type:
            - ReadonlyArray<@@ms/listview-spfx-host.IRowAdapter>
          description: |
            Read-only array of row adapters
