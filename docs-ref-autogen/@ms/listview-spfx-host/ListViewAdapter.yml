### YamlMime:UniversalReference
items:
  - uid: '@ms/listview-spfx-host.ListViewAdapter'
    name: ListViewAdapter
    fullName: ListViewAdapter
    children:
      - '@ms/listview-spfx-host.ListViewAdapter.addColumnAdapter'
      - '@ms/listview-spfx-host.ListViewAdapter.createRowAdapter'
      - '@ms/listview-spfx-host.ListViewAdapter.dispose'
      - '@ms/listview-spfx-host.ListViewAdapter.constructor'
      - '@ms/listview-spfx-host.ListViewAdapter.loadCommandSet'
      - '@ms/listview-spfx-host.ListViewAdapter.loadFieldCustomizers'
      - '@ms/listview-spfx-host.ListViewAdapter.raiseSelectedRowsChangedEvent'
      - '@ms/listview-spfx-host.ListViewAdapter.tryGetColumnAccessorByName'
    langs:
      - typeScript
    type: class
    summary: >-
      This class should be created by calling createListViewAdapter on an
      instance of ISpfxAdapter.

      This is a sealed class. Do not extend it.
    package: '@ms/listview-spfx-host'
  - uid: '@ms/listview-spfx-host.ListViewAdapter.addColumnAdapter'
    name: addColumnAdapter
    children: []
    type: method
    langs:
      - typeScript
    summary: Used by the list view application to register a new column.
    syntax:
      content: 'function addColumnAdapter(column: IColumn)'
      parameters:
        - id: column
          type:
            - '@@ms/listview-spfx-host.IColumn'
          description: ''
      return:
        type:
          - '@@ms/listview-spfx-host.IColumnAdapter'
  - uid: '@ms/listview-spfx-host.ListViewAdapter.createRowAdapter'
    name: createRowAdapter
    children: []
    type: method
    langs:
      - typeScript
    summary: Used by the list view application to register a new column.
    syntax:
      content: 'function createRowAdapter(row: IRow)'
      parameters:
        - id: row
          type:
            - '@@ms/listview-spfx-host.IRow'
          description: ''
      return:
        type:
          - '@@ms/listview-spfx-host.RowAdapter'
  - uid: '@ms/listview-spfx-host.ListViewAdapter.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@ms/listview-spfx-host.ListViewAdapter.constructor'
    name: ListViewAdapter
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ListViewAdapter(serviceScope: ServiceScope)'
      parameters:
        - id: serviceScope
          type:
            - ServiceScope
          description: ''
  - uid: '@ms/listview-spfx-host.ListViewAdapter.loadCommandSet'
    name: loadCommandSet
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function loadCommandSet(clientSideComponentId: string,
        clientSideComponentProperties: string)
      parameters:
        - id: clientSideComponentId
          type:
            - string
          description: ''
        - id: clientSideComponentProperties
          type:
            - string
          description: ''
      return:
        type:
          - Promise<@@ms/listview-spfx-host.CommandSetAdapter>
  - uid: '@ms/listview-spfx-host.ListViewAdapter.loadFieldCustomizers'
    name: loadFieldCustomizers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function loadFieldCustomizers()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/listview-spfx-host.ListViewAdapter.raiseSelectedRowsChangedEvent'
    name: raiseSelectedRowsChangedEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function raiseSelectedRowsChangedEvent(selectedRows:
        ReadonlyArray<RowAdapter>)
      parameters:
        - id: selectedRows
          type:
            - ReadonlyArray<@@ms/listview-spfx-host.RowAdapter>
          description: ''
  - uid: '@ms/listview-spfx-host.ListViewAdapter.tryGetColumnAccessorByName'
    name: tryGetColumnAccessorByName
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the ColumnAccessor corresponding to the SPField with the specified
      name.
    syntax:
      content: 'function tryGetColumnAccessorByName(internalName: string)'
      parameters:
        - id: internalName
          type:
            - string
          description: ''
