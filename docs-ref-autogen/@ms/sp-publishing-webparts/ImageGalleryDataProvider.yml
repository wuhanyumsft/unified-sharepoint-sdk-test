### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider'
    name: ImageGalleryDataProvider
    fullName: ImageGalleryDataProvider
    children:
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.createFolder'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.deleteImage'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.ensureAssetsLibrary'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getDocumentLibraries'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getFolder'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getImages'
      - >-
        @ms/sp-publishing-webparts.ImageGalleryDataProvider.getImagesFromDocumentLibrary
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.constructor'
      - '@ms/sp-publishing-webparts.ImageGalleryDataProvider.uploadImage'
    langs:
      - typeScript
    type: class
    summary: >-
      This class allows for easy switching between using Mock Data (for unit
      tests)

      and live REST API calls.
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.createFolder'
    name: createFolder
    children: []
    type: method
    langs:
      - typeScript
    summary: Attempts to create the folder for the webpart
    syntax:
      content: function createFolder()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.ICreateFolderResult>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.deleteImage'
    name: deleteImage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImage(imageUniqueId: string)'
      parameters:
        - id: imageUniqueId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.ensureAssetsLibrary'
    name: ensureAssetsLibrary
    children: []
    type: method
    langs:
      - typeScript
    summary: Attempts to load the information for the SP List/Library
    syntax:
      content: function ensureAssetsLibrary()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getDocumentLibraries'
    name: getDocumentLibraries
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDocumentLibraries()
      parameters: []
      return:
        type:
          - 'Promise<IList[]>'
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getFolder'
    name: getFolder
    children: []
    type: method
    langs:
      - typeScript
    summary: Attempts to load the folder information for the webpart
    syntax:
      content: function getFolder()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IGetFolderResult>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.getImages'
    name: getImages
    children: []
    type: method
    langs:
      - typeScript
    summary: Attempts to load the list of images from the webpart's folder
    syntax:
      content: function getImages()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IGetImagesResult>
  - uid: >-
      @ms/sp-publishing-webparts.ImageGalleryDataProvider.getImagesFromDocumentLibrary
    name: getImagesFromDocumentLibrary
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImagesFromDocumentLibrary(listId: string, filterOptions:
        IImageFilterOptions)
      parameters:
        - id: listId
          type:
            - string
          description: ''
        - id: filterOptions
          type:
            - '@@ms/sp-publishing-webparts.IImageFilterOptions'
          description: ''
      return:
        type:
          - 'Promise<@@ms/sp-publishing-webparts.IImage[]>'
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.constructor'
    name: ImageGalleryDataProvider
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an SPImageDataProvider
    syntax:
      content: >-
        new ImageGalleryDataProvider(pageContext: PageContext, traceLogger:
        _ITraceLogger, webPartId: string, serviceScope: ServiceScope,
        isMockMode: boolean)
      parameters:
        - id: pageContext
          type:
            - PageContext
          description: ''
        - id: traceLogger
          type:
            - _ITraceLogger
          description: ''
        - id: webPartId
          type:
            - string
          description: ''
        - id: serviceScope
          type:
            - ServiceScope
          description: ''
        - id: isMockMode
          type:
            - boolean
          description: |
            True if we should use Mock data, false for live REST calls
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataProvider.uploadImage'
    name: uploadImage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadImage(image: File, name: string)'
      parameters:
        - id: image
          type:
            - File
          description: ''
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IImage>
