### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.ImageView'
    name: ImageView
    fullName: ImageView
    children:
      - '@ms/sp-publishing-webparts.ImageView.componentDidMount'
      - '@ms/sp-publishing-webparts.ImageView.componentWillMount'
      - '@ms/sp-publishing-webparts.ImageView.componentWillUnmount'
      - '@ms/sp-publishing-webparts.ImageView.constructor'
      - '@ms/sp-publishing-webparts.ImageView.render'
    langs:
      - typeScript
    type: class
    summary: |-
      Renders an image according to the parameters provided in imageData
      If the isFullWidth property is set, image scales to width of container
    extends:
      name: >-
        @@ms/sp-publishing-webparts.ImageView<@@ms/sp-publishing-webparts.IImageViewProps>
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.ImageView.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.ImageView.componentWillMount'
    name: componentWillMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillMount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.ImageView.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.ImageView.constructor'
    name: ImageView
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ImageView(props: IImageViewProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-publishing-webparts.IImageViewProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.ImageView.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
