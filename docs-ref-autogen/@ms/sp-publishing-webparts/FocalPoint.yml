### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.FocalPoint'
    name: FocalPoint
    fullName: FocalPoint
    children:
      - '@ms/sp-publishing-webparts.FocalPoint.componentDidMount'
      - '@ms/sp-publishing-webparts.FocalPoint.componentDidUpdate'
      - '@ms/sp-publishing-webparts.FocalPoint.componentWillUnmount'
      - '@ms/sp-publishing-webparts.FocalPoint.constructor'
      - '@ms/sp-publishing-webparts.FocalPoint.render'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @@ms/sp-publishing-webparts.FocalPoint<@@ms/sp-publishing-webparts.IFocalPointProps>
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.FocalPoint.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.FocalPoint.componentDidUpdate'
    name: componentDidUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentDidUpdate(prevProps: IFocalPointProps)'
      parameters:
        - id: prevProps
          type:
            - '@@ms/sp-publishing-webparts.IFocalPointProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.FocalPoint.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.FocalPoint.constructor'
    name: FocalPoint
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new FocalPoint(props: IFocalPointProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-publishing-webparts.IFocalPointProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.FocalPoint.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
