### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.Events'
    name: Events
    fullName: Events
    children:
      - '@ms/sp-publishing-webparts.Events.componentWillReceiveProps'
      - '@ms/sp-publishing-webparts.Events.constructor'
      - '@ms/sp-publishing-webparts.Events.render'
      - '@ms/sp-publishing-webparts.Events.setMobileView'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @@ms/sp-publishing-webparts.Events<@@ms/sp-publishing-webparts.IEventsProps>
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.Events.componentWillReceiveProps'
    name: componentWillReceiveProps
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(nextProps: IEventsProps)'
      parameters:
        - id: nextProps
          type:
            - '@@ms/sp-publishing-webparts.IEventsProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Events.constructor'
    name: Events
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Events(props: IEventsProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-publishing-webparts.IEventsProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Events.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
  - uid: '@ms/sp-publishing-webparts.Events.setMobileView'
    name: setMobileView
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMobileView(isMobileView: boolean)'
      parameters:
        - id: isMobileView
          type:
            - boolean
          description: ''
