### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.MockDataProvider'
    name: MockDataProvider
    fullName: MockDataProvider
    children:
      - '@ms/sp-publishing-webparts.MockDataProvider.getCurrentUser'
      - '@ms/sp-publishing-webparts.MockDataProvider.getDirectoryInfo'
      - '@ms/sp-publishing-webparts.MockDataProvider.getFeed'
      - '@ms/sp-publishing-webparts.MockDataProvider.getOAuthToken'
      - '@ms/sp-publishing-webparts.MockDataProvider.postMessage'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.MockDataProvider.getCurrentUser'
    name: getCurrentUser
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCurrentUser()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.ICurrentUser>
  - uid: '@ms/sp-publishing-webparts.MockDataProvider.getDirectoryInfo'
    name: getDirectoryInfo
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDirectoryInfo()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IDirectory>
  - uid: '@ms/sp-publishing-webparts.MockDataProvider.getFeed'
    name: getFeed
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getFeed()
      parameters: []
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IFeed>
  - uid: '@ms/sp-publishing-webparts.MockDataProvider.getOAuthToken'
    name: getOAuthToken
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getOAuthToken()
      parameters: []
      return:
        type:
          - Promise<IOAuthToken>
  - uid: '@ms/sp-publishing-webparts.MockDataProvider.postMessage'
    name: postMessage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function postMessage<T>()
      parameters: []
      return:
        type:
          - Promise<T>
