### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.Hero'
    name: Hero
    fullName: Hero
    children:
      - '@ms/sp-publishing-webparts.Hero.componentDidMount'
      - '@ms/sp-publishing-webparts.Hero.componentDidUpdate'
      - '@ms/sp-publishing-webparts.Hero.componentWillReceiveProps'
      - '@ms/sp-publishing-webparts.Hero.componentWillUnmount'
      - '@ms/sp-publishing-webparts.Hero.componentWillUpdate'
      - '@ms/sp-publishing-webparts.Hero.constructor'
      - '@ms/sp-publishing-webparts.Hero.render'
      - '@ms/sp-publishing-webparts.Hero.setWebPartWidth'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-publishing-webparts.Hero<@@ms/sp-publishing-webparts.IHeroProps>'
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.Hero.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.Hero.componentDidUpdate'
    name: componentDidUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentDidUpdate(prevProps: IHeroProps, prevState:
        IHeroState)
      parameters:
        - id: prevProps
          type:
            - '@@ms/sp-publishing-webparts.IHeroProps'
          description: ''
        - id: prevState
          type:
            - '@@ms/sp-publishing-webparts.IHeroState'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Hero.componentWillReceiveProps'
    name: componentWillReceiveProps
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(nextProps: IHeroProps)'
      parameters:
        - id: nextProps
          type:
            - '@@ms/sp-publishing-webparts.IHeroProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Hero.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-publishing-webparts.Hero.componentWillUpdate'
    name: componentWillUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentWillUpdate(nextProps: IHeroProps, nextState:
        IHeroState)
      parameters:
        - id: nextProps
          type:
            - '@@ms/sp-publishing-webparts.IHeroProps'
          description: ''
        - id: nextState
          type:
            - '@@ms/sp-publishing-webparts.IHeroState'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Hero.constructor'
    name: Hero
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Hero(props: IHeroProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-publishing-webparts.IHeroProps'
          description: ''
  - uid: '@ms/sp-publishing-webparts.Hero.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<__type>
  - uid: '@ms/sp-publishing-webparts.Hero.setWebPartWidth'
    name: setWebPartWidth
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setWebPartWidth(webPartWidth: number)'
      parameters:
        - id: webPartWidth
          type:
            - number
          description: ''
