### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator'
    name: ImageGalleryDataAggregator
    fullName: ImageGalleryDataAggregator
    children:
      - '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.deleteImage'
      - '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.ensureList'
      - >-
        @ms/sp-publishing-webparts.ImageGalleryDataAggregator.getDocumentLibraries
      - >-
        @ms/sp-publishing-webparts.ImageGalleryDataAggregator.getImagesFromDocumentLibrary
      - '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.constructor'
      - '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.uploadImage'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.deleteImage'
    name: deleteImage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImage(image: IImageProps)'
      parameters:
        - id: image
          type:
            - '@@ms/sp-publishing-webparts.IImageProps'
          description: ''
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.ensureList'
    name: ensureList
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Ensures that the SharePoint list items are in sync with the serialized
      values
    syntax:
      content: function ensureList()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.getDocumentLibraries'
    name: getDocumentLibraries
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDocumentLibraries()
      parameters: []
      return:
        type:
          - 'Promise<IList[]>'
  - uid: >-
      @ms/sp-publishing-webparts.ImageGalleryDataAggregator.getImagesFromDocumentLibrary
    name: getImagesFromDocumentLibrary
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImagesFromDocumentLibrary(listId: string,
        imageFilterOptions: IImageFilterOptions)
      parameters:
        - id: listId
          type:
            - string
          description: ''
        - id: imageFilterOptions
          type:
            - '@@ms/sp-publishing-webparts.IImageFilterOptions'
          description: ''
      return:
        type:
          - 'Promise<@@ms/sp-publishing-webparts.IImageProps[]>'
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.constructor'
    name: ImageGalleryDataAggregator
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new ImageGalleryDataAggregator(dataProvider: IImageGalleryDataProvider,
        properties: IImageGalleryProperties, uploadValidator: IFileValidator,
        pageContext?: PageContext)
      parameters:
        - id: dataProvider
          type:
            - '@@ms/sp-publishing-webparts.IImageGalleryDataProvider'
          description: ''
        - id: properties
          type:
            - '@@ms/sp-publishing-webparts.IImageGalleryProperties'
          description: ''
        - id: uploadValidator
          type:
            - '@@ms/sp-publishing-webparts.IFileValidator'
          description: ''
        - id: pageContext
          type:
            - PageContext
          description: ''
          optional: true
  - uid: '@ms/sp-publishing-webparts.ImageGalleryDataAggregator.uploadImage'
    name: uploadImage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadImage(file: File)'
      parameters:
        - id: file
          type:
            - File
          description: ''
      return:
        type:
          - Promise<@@ms/sp-publishing-webparts.IImageProps>
