### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.ICalendarDataProvider'
    name: ICalendarDataProvider
    fullName: ICalendarDataProvider
    children:
      - '@ms/sp-publishing-webparts.ICalendarDataProvider.getCalendars'
      - '@ms/sp-publishing-webparts.ICalendarDataProvider.getEvent'
      - '@ms/sp-publishing-webparts.ICalendarDataProvider.getEvents'
      - '@ms/sp-publishing-webparts.ICalendarDataProvider.getOAuthToken'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.ICalendarDataProvider.getCalendars'
    name: getCalendars
    fullName: getCalendars
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Get all the user's calendars or get the calendars from a specific calendar
      group.
    syntax:
      content: '() => Promise<IExchangeGroup[]> getCalendars'
      return:
        type:
          - '() => Promise<IExchangeGroup[]>'
  - uid: '@ms/sp-publishing-webparts.ICalendarDataProvider.getEvent'
    name: getEvent
    fullName: getEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: Get a single event based on event Id.
    syntax:
      content: >-
        (calendar: IExchangeGroup, eventId: string, withAttachments?: boolean)
        => Promise<IExchangeCalendarEvent> getEvent
      return:
        type:
          - >-
            (calendar: IExchangeGroup, eventId: string, withAttachments?:
            boolean) => Promise<IExchangeCalendarEvent>
  - uid: '@ms/sp-publishing-webparts.ICalendarDataProvider.getEvents'
    name: getEvents
    fullName: getEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: Get an event collection.
    syntax:
      content: >-
        (calendar: IExchangeGroup, top: number, skip: number, startDate: Date,
        endDate: Date, orderBy: function) => Promise<IGetEventsResult> getEvents
      return:
        type:
          - >-
            (calendar: IExchangeGroup, top: number, skip: number, startDate:
            Date, endDate: Date, orderBy: function) => Promise<IGetEventsResult>
  - uid: '@ms/sp-publishing-webparts.ICalendarDataProvider.getOAuthToken'
    name: getOAuthToken
    fullName: getOAuthToken
    children: []
    langs:
      - typeScript
    type: property
    summary: Get OAuth token for EXO resource.
    syntax:
      content: () => Promise<IOAuthToken> getOAuthToken
      return:
        type:
          - () => Promise<IOAuthToken>
