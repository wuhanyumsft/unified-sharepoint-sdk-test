### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-publishing-webparts.IImageGridProps'
    name: IImageGridProps
    fullName: IImageGridProps<T>
    children:
      - '@ms/sp-publishing-webparts.IImageGridProps.ariaLabel'
      - '@ms/sp-publishing-webparts.IImageGridProps.aspectRatio'
      - '@ms/sp-publishing-webparts.IImageGridProps.canReorder'
      - '@ms/sp-publishing-webparts.IImageGridProps.getItemAriaLabel'
      - '@ms/sp-publishing-webparts.IImageGridProps.getReactKey'
      - '@ms/sp-publishing-webparts.IImageGridProps.items'
      - '@ms/sp-publishing-webparts.IImageGridProps.itemSize'
      - '@ms/sp-publishing-webparts.IImageGridProps.onItemClick'
      - '@ms/sp-publishing-webparts.IImageGridProps.onRenderItem'
      - '@ms/sp-publishing-webparts.IImageGridProps.onReorder'
      - '@ms/sp-publishing-webparts.IImageGridProps.selectedIndex'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: '@ms/sp-publishing-webparts'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.ariaLabel'
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string ariaLabel
      return:
        type:
          - string
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.aspectRatio'
    name: aspectRatio
    fullName: aspectRatio
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ItemAspectRatio aspectRatio
      return:
        type:
          - ItemAspectRatio
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.canReorder'
    name: canReorder
    fullName: canReorder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean canReorder
      return:
        type:
          - boolean
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.getItemAriaLabel'
    name: getItemAriaLabel
    fullName: getItemAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(item: T) => string getItemAriaLabel'
      return:
        type:
          - '(item: T) => string'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.getReactKey'
    name: getReactKey
    fullName: getReactKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(item: T, index?: number) => string getReactKey'
      return:
        type:
          - '(item: T, index?: number) => string'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.items'
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'T[] items'
      return:
        type:
          - 'T[]'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.itemSize'
    name: itemSize
    fullName: itemSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ItemSize itemSize
      return:
        type:
          - ItemSize
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.onItemClick'
    name: onItemClick
    fullName: onItemClick
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(source: T, index: number) => void onItemClick'
      return:
        type:
          - '(source: T, index: number) => void'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.onRenderItem'
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        (item: T, index: number, renderWidth: number, renderHeight: number) =>
        ReactNode onRenderItem
      return:
        type:
          - >-
            (item: T, index: number, renderWidth: number, renderHeight: number)
            => ReactNode
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.onReorder'
    name: onReorder
    fullName: onReorder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(oldIndex: number, newIndex: number) => void onReorder'
      return:
        type:
          - '(oldIndex: number, newIndex: number) => void'
  - uid: '@ms/sp-publishing-webparts.IImageGridProps.selectedIndex'
    name: selectedIndex
    fullName: selectedIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number selectedIndex
      return:
        type:
          - number
