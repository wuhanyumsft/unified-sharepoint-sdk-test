### YamlMime:UniversalReference
items:
  - uid: '@ms/i18n-utilities.ICommonNumberFormatterOptions'
    name: ICommonNumberFormatterOptions
    fullName: ICommonNumberFormatterOptions
    children:
      - '@ms/i18n-utilities.ICommonNumberFormatterOptions.maximumFractionDigits'
      - '@ms/i18n-utilities.ICommonNumberFormatterOptions.minimumFractionDigits'
      - '@ms/i18n-utilities.ICommonNumberFormatterOptions.useGrouping'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/i18n-utilities'
  - uid: '@ms/i18n-utilities.ICommonNumberFormatterOptions.maximumFractionDigits'
    name: maximumFractionDigits
    fullName: maximumFractionDigits
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Non-negative integer Number values indicating the minimum and maximum
      fraction digits to be used.

      Numbers will be rounded or padded with trailing zeroes if necessary.

      Either one or both of these properties must be present.

      If they are, they will override minimum and maximum fraction digits
      derived from the CLDR patterns.
    syntax:
      content: 1 maximumFractionDigits
      return:
        type:
          - '1'
  - uid: '@ms/i18n-utilities.ICommonNumberFormatterOptions.minimumFractionDigits'
    name: minimumFractionDigits
    fullName: minimumFractionDigits
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Non-negative integer Number values indicating the minimum and maximum
      fraction digits to be used.

      Numbers will be rounded or padded with trailing zeroes if necessary.

      Either one or both of these properties must be present.

      If they are, they will override minimum and maximum fraction digits
      derived from the CLDR patterns.
    syntax:
      content: 1 minimumFractionDigits
      return:
        type:
          - '1'
  - uid: '@ms/i18n-utilities.ICommonNumberFormatterOptions.useGrouping'
    name: useGrouping
    fullName: useGrouping
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean (default is true) value indicating whether a grouping separator
      should be used.
    syntax:
      content: boolean useGrouping
      return:
        type:
          - boolean
