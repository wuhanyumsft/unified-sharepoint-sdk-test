### YamlMime:UniversalReference
items:
  - uid: '@ms/i18n-utilities.IDateFormatterOptions'
    name: IDateFormatterOptions
    fullName: IDateFormatterOptions
    children:
      - '@ms/i18n-utilities.IDateFormatterOptions.date'
      - '@ms/i18n-utilities.IDateFormatterOptions.datetime'
      - '@ms/i18n-utilities.IDateFormatterOptions.raw'
      - '@ms/i18n-utilities.IDateFormatterOptions.skeleton'
      - '@ms/i18n-utilities.IDateFormatterOptions.time'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/i18n-utilities'
  - uid: '@ms/i18n-utilities.IDateFormatterOptions.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      One of the following String values: full, long, medium, or short, eg. {
      date: 'full' }.
    syntax:
      content: IDateTimeLength date
      return:
        type:
          - IDateTimeLength
  - uid: '@ms/i18n-utilities.IDateFormatterOptions.datetime'
    name: datetime
    fullName: datetime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      One of the following String values: full, long, medium, or short, eg. {
      datetime: 'full' }
    syntax:
      content: IDateTimeLength datetime
      return:
        type:
          - IDateTimeLength
  - uid: '@ms/i18n-utilities.IDateFormatterOptions.raw'
    name: raw
    fullName: raw
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      String value indicating a machine raw pattern (anything in the 'Sym.'
      column) eg. { raw: 'dd/mm' }.

      Note this is NOT recommended for i18n in general. Use skeleton instead.
    syntax:
      content: string raw
      return:
        type:
          - string
  - uid: '@ms/i18n-utilities.IDateFormatterOptions.skeleton'
    name: skeleton
    fullName: skeleton
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      String value indicating a skeleton (see description above), eg. {
      skeleton: 'GyMMMd' }.

      Skeleton provides a more flexible formatting mechanism than the predefined
      list.

      Instead, they are an open-ended list of patterns containing only date
      field information, and in a canonical order.

      Example:

      { skeleton: "Hm" } : "17:55".

      { skeleton: "MMMd" } : "Nov 30".
    syntax:
      content: IDateSkeleton skeleton
      return:
        type:
          - IDateSkeleton
  - uid: '@ms/i18n-utilities.IDateFormatterOptions.time'
    name: time
    fullName: time
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      One of the following String values: full, long, medium, or short, eg. {
      time: 'full' }.
    syntax:
      content: IDateTimeLength time
      return:
        type:
          - IDateTimeLength
