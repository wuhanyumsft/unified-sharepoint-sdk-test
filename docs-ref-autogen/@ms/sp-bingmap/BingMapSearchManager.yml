### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-bingmap.BingMapSearchManager'
    name: BingMapSearchManager
    fullName: BingMapSearchManager
    children:
      - '@ms/sp-bingmap.BingMapSearchManager.constructor'
      - '@ms/sp-bingmap.BingMapSearchManager.geocode'
      - '@ms/sp-bingmap.BingMapSearchManager.reverseGeocode'
    langs:
      - typeScript
    type: class
    summary: >
      BingMapSearchManager class to handle the module loading and search
      requests to BingMap server.

      Ideally we would have three types of search request: geocode,
      reverseGeocode, and search,

      but currently we don't need the search request.
    package: '@ms/sp-bingmap'
  - uid: '@ms/sp-bingmap.BingMapSearchManager.constructor'
    name: BingMapSearchManager
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BingMapSearchManager(mapInstance: Map, pageContext: PageContext)'
      parameters:
        - id: mapInstance
          type:
            - Map
          description: ''
        - id: pageContext
          type:
            - PageContext
          description: ''
  - uid: '@ms/sp-bingmap.BingMapSearchManager.geocode'
    name: geocode
    children: []
    type: method
    langs:
      - typeScript
    summary: Generate a place based on given address.
    syntax:
      content: 'function geocode(address: string)'
      parameters:
        - id: address
          type:
            - string
          description: ''
      return:
        type:
          - Promise<IGeocodeResult>
  - uid: '@ms/sp-bingmap.BingMapSearchManager.reverseGeocode'
    name: reverseGeocode
    children: []
    type: method
    langs:
      - typeScript
    summary: Generate a place based on given location.
    syntax:
      content: 'function reverseGeocode(location: Location)'
      parameters:
        - id: location
          type:
            - Location
          description: ''
      return:
        type:
          - Promise<IPlaceResult>
