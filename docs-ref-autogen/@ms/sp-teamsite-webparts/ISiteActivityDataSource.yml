### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-teamsite-webparts.ISiteActivityDataSource'
    name: ISiteActivityDataSource
    fullName: ISiteActivityDataSource
    children:
      - '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getAcronymData'
      - '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getActivities'
      - '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getCreateWebActivity'
      - >-
        @ms/sp-teamsite-webparts.ISiteActivityDataSource.getDefaultDocumentLibraryUrl
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-teamsite-webparts'
  - uid: '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getAcronymData'
    name: getAcronymData
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getAcronymData()
      parameters: []
      return:
        type:
          - Promise<IAcronymColor>
  - uid: '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getActivities'
    name: getActivities
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getActivities(queryParams: IActivityQueryParams,
        dataSourceType?: DataSourceType)
      parameters:
        - id: queryParams
          type:
            - '@@ms/sp-teamsite-webparts.IActivityQueryParams'
          description: ''
        - id: dataSourceType
          type:
            - DataSourceType
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@@ms/sp-teamsite-webparts.IActivity[]>'
  - uid: '@ms/sp-teamsite-webparts.ISiteActivityDataSource.getCreateWebActivity'
    name: getCreateWebActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCreateWebActivity()
      parameters: []
      return:
        type:
          - 'Promise<@@ms/sp-teamsite-webparts.IActivity[]>'
  - uid: >-
      @ms/sp-teamsite-webparts.ISiteActivityDataSource.getDefaultDocumentLibraryUrl
    name: getDefaultDocumentLibraryUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDefaultDocumentLibraryUrl()
      parameters: []
      return:
        type:
          - Promise<string>
