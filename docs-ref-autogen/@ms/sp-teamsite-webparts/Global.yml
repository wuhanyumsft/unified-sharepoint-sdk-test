### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-teamsite-webparts.Global'
    package: '@ms/sp-teamsite-webparts'
    name: Global
    children:
      - '@ms/sp-teamsite-webparts.getEmptyQuickLinkItem'
      - '@ms/sp-teamsite-webparts.getFilmstripCardHeight'
      - '@ms/sp-teamsite-webparts.getFilmstripCardWidth'
      - '@ms/sp-teamsite-webparts.getGuidFromFilePickerResponse'
      - '@ms/sp-teamsite-webparts.getImageInfoFromItem'
      - '@ms/sp-teamsite-webparts.getTitleFromItem'
      - '@ms/sp-teamsite-webparts.getWebPartHeight'
      - '@ms/sp-teamsite-webparts.getWebViewPath'
      - '@ms/sp-teamsite-webparts.isAppendWebViewParameterKillSwitchActivated'
      - '@ms/sp-teamsite-webparts.isLinkTypeImage'
      - '@ms/sp-teamsite-webparts.loadImage'
    type: package
    langs:
      - typeScript
  - uid: '@ms/sp-teamsite-webparts.getEmptyQuickLinkItem'
    name: getEmptyQuickLinkItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEmptyQuickLinkItem()
      parameters: []
      return:
        type:
          - '@@ms/sp-teamsite-webparts.IQuickLink'
  - uid: '@ms/sp-teamsite-webparts.getFilmstripCardHeight'
    name: getFilmstripCardHeight
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFilmstripCardHeight(cardWidth: number)'
      parameters:
        - id: cardWidth
          type:
            - number
          description: ''
      return:
        type:
          - number
  - uid: '@ms/sp-teamsite-webparts.getFilmstripCardWidth'
    name: getFilmstripCardWidth
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFilmstripCardWidth(webpartWidth: number, count: number)'
      parameters:
        - id: webpartWidth
          type:
            - number
          description: ''
        - id: count
          type:
            - number
          description: ''
      return:
        type:
          - number
  - uid: '@ms/sp-teamsite-webparts.getGuidFromFilePickerResponse'
    name: getGuidFromFilePickerResponse
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Gets the guid set from the file picker response. It handles both the
      select scenario and the uploading scenario.
    syntax:
      content: 'function getGuidFromFilePickerResponse(response: IFilePickerResponse)'
      parameters:
        - id: response
          type:
            - IFilePickerResponse
          description: |
            the file picker response or the upload response.
      return:
        type:
          - '@@ms/sp-teamsite-webparts.IGuidSet'
  - uid: '@ms/sp-teamsite-webparts.getImageInfoFromItem'
    name: getImageInfoFromItem
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Get the actual image url displayed in the compact card or filmStrip
      layout.
    syntax:
      content: >-
        function getImageInfoFromItem(getProvider: () => IQuickLinksProvider,
        layoutId: string, quickLink: IQuickLink)
      parameters:
        - id: getProvider
          type:
            - () => IQuickLinksProvider
          description: ''
        - id: layoutId
          type:
            - string
          description: ''
        - id: quickLink
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: |
            the quick link item.
      return:
        type:
          - '@@ms/sp-teamsite-webparts.IImageRenderInfo'
  - uid: '@ms/sp-teamsite-webparts.getTitleFromItem'
    name: getTitleFromItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTitleFromItem(quickLink: IQuickLink)'
      parameters:
        - id: quickLink
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-teamsite-webparts.getWebPartHeight'
    name: getWebPartHeight
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWebPartHeight(webPartWidth: number, layoutId:
        QuickLinksLayoutId, itemCount: number, hasTitle: boolean)
      parameters:
        - id: webPartWidth
          type:
            - number
          description: ''
        - id: layoutId
          type:
            - '@@ms/sp-teamsite-webparts.QuickLinksLayoutId'
          description: ''
        - id: itemCount
          type:
            - number
          description: ''
        - id: hasTitle
          type:
            - boolean
          description: ''
      return:
        type:
          - number
  - uid: '@ms/sp-teamsite-webparts.getWebViewPath'
    name: getWebViewPath
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getWebViewPath(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-teamsite-webparts.isAppendWebViewParameterKillSwitchActivated'
    name: isAppendWebViewParameterKillSwitchActivated
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAppendWebViewParameterKillSwitchActivated()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-teamsite-webparts.isLinkTypeImage'
    name: isLinkTypeImage
    children: []
    type: function
    langs:
      - typeScript
    summary: Get whether the link is pointing to an image or not.
    syntax:
      content: 'function isLinkTypeImage(link: string)'
      parameters:
        - id: link
          type:
            - string
          description: |
            the url of the link.
      return:
        type:
          - boolean
  - uid: '@ms/sp-teamsite-webparts.loadImage'
    name: loadImage
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function loadImage(filename: string)'
      parameters:
        - id: filename
          type:
            - string
          description: ''
      return:
        type:
          - string
