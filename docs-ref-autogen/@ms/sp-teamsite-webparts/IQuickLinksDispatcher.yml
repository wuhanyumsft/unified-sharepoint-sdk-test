### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher'
    name: IQuickLinksDispatcher
    fullName: IQuickLinksDispatcher
    children:
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.areTheSame'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.createOrUpdateQuickLink'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.deleteQuickLink'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.fetchQuickLinks'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getActivities'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getCachedQuickLinks'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getCachedQuickLinksRange'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.invokeEditPanel'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.invokeFilePicker'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.moveQuickLink'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.openContextMenu'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.pinItemFromUrl'
      - >-
        @ms/sp-teamsite-webparts.IQuickLinksDispatcher.registerQuickLinksListener
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.reorderQuickLinks'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.resetFocus'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.showError'
      - '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.updateQuickLink'
    langs:
      - typeScript
    type: interface
    summary: |-
      Allows objects that care about updates from the server
      about quick links to listen for updates
    package: '@ms/sp-teamsite-webparts'
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.areTheSame'
    name: areTheSame
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns true if and only if item1 and item2 represent the same quick item
      card.
    syntax:
      content: 'function areTheSame(item1: IQuickLink, item2: IQuickLink)'
      parameters:
        - id: item1
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: item2
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.createOrUpdateQuickLink'
    name: createOrUpdateQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new quick item or updates an existing one. The id field in
      newItem

      determines whether this is a create or an update. If the id is specified,

      this is an update. Otherwise, it is a create. Next, the location of
      newItem is set.

      The location that newItem is placed is based on afterItemId. The server
      will attempt to place

      newItem directly after the item with id equal to afterItemId, if
      afterItemId is negative

      or no item with that id can be found, newItem will be placed at the
      beginning.

      If afterItemId is 0 and this is an update, newItem will not be moved from
      its

      previous place. If afterItemId is 0 and this is a create, newItem will

      be placed at the beginning.

      The isMove parameter does not change the behavior on the server, but

      affects the text of the error messages on failure.
    syntax:
      content: >-
        function createOrUpdateQuickLink(newItem: IQuickLink, afterItemId:
        number, isMove?: boolean)
      parameters:
        - id: newItem
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: afterItemId
          type:
            - number
          description: ''
        - id: isMove
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.deleteQuickLink'
    name: deleteQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes the indicated item, anticipates the server change and notifies all
      callbacks listening

      for QuickLinksUpdated events, then calls fetchQuickLinks(), (which will
      notify all callbacks

      again).
    syntax:
      content: 'function deleteQuickLink(item: IQuickLink)'
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
      return:
        type:
          - Promise<@@ms/sp-teamsite-webparts.IResult<void>>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.fetchQuickLinks'
    name: fetchQuickLinks
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Requests quick item data from the server, then invokes the all of the
      callbacks registered

      for QuickLinksUpdated events.
    syntax:
      content: function fetchQuickLinks()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getActivities'
    name: getActivities
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the most recent changes made within the current site.
    syntax:
      content: function getActivities()
      parameters: []
      return:
        type:
          - 'Promise<@@ms/sp-teamsite-webparts.IActivity[]>'
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getCachedQuickLinks'
    name: getCachedQuickLinks
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the list of quick links.
    syntax:
      content: function getCachedQuickLinks()
      parameters: []
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.getCachedQuickLinksRange'
    name: getCachedQuickLinksRange
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a subsection of the list of quick links starting from the
      indicated offset,

      with the indicated limit.
    syntax:
      content: 'function getCachedQuickLinksRange(offset: number, limit: number)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: limit
          type:
            - number
          description: ''
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.invokeEditPanel'
    name: invokeEditPanel
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Opens the "edit item" panel on this indicated item. If no item is passed
      in,

      the panel is considered to be in create mode.
    syntax:
      content: 'function invokeEditPanel(item?: IQuickLink)'
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
          optional: true
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.invokeFilePicker'
    name: invokeFilePicker
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Invoke the file picker to select a new item or modify the url in the
      existing item.

      If item is passed, only the item's url will be modified.

      If item is not passed, a new item will be returned.
    syntax:
      content: 'function invokeFilePicker(item?: IQuickLink)'
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
          optional: true
      return:
        type:
          - Promise<@@ms/sp-teamsite-webparts.IQuickLink>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.moveQuickLink'
    name: moveQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: Moves the indicated item in the direction indicated by moveType.
    syntax:
      content: 'function moveQuickLink(item: IQuickLink, moveType: QuickLinksChangeType)'
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: moveType
          type:
            - QuickLinksChangeType
          description: ''
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.openContextMenu'
    name: openContextMenu
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Opens the context menu for item. The menu will originate from
      targetElement.
    syntax:
      content: >-
        function openContextMenu(item: IQuickLink, targetElement: HTMLElement,
        targetPoint: IPoint)
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: targetElement
          type:
            - HTMLElement
          description: ''
        - id: targetPoint
          type:
            - IPoint
          description: ''
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.pinItemFromUrl'
    name: pinItemFromUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves metadata for the item at the indicated url, then

      tries to pin it. This method anticipates the server change and notifies
      all callbacks listening

      for QuickLinksUpdated events, then calls fetchQuickLinks(), (which will
      notify all callbacks

      again).

      If a title is given, will use that title.

      If useContextWeb is true, it assumes the url

      is in the same web as the current context web. This is faster but will

      fail if the url is not in the current context web.
    syntax:
      content: >-
        function pinItemFromUrl(url: string, title: string, pictureUrl: string,
        pictureAltText: string, pictureGuids: IFlaggable<IGuidSet>, caption:
        string, useContextWeb: boolean)
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: title
          type:
            - string
          description: ''
        - id: pictureUrl
          type:
            - string
          description: ''
        - id: pictureAltText
          type:
            - string
          description: ''
        - id: pictureGuids
          type:
            - >-
              @@ms/sp-teamsite-webparts.IFlaggable<@@ms/sp-teamsite-webparts.IGuidSet>
          description: ''
        - id: caption
          type:
            - string
          description: ''
        - id: useContextWeb
          type:
            - boolean
          description: ''
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.registerQuickLinksListener'
    name: registerQuickLinksListener
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers a callback for the specified type of event.
    syntax:
      content: >-
        function registerQuickLinksListener<T>(eventType: QuickLinksEvent,
        callback: IEventCallback<T>)
      parameters:
        - id: eventType
          type:
            - QuickLinksEvent
          description: ''
        - id: callback
          type:
            - IEventCallback<T>
          description: ''
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.reorderQuickLinks'
    name: reorderQuickLinks
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reorder QuickLink items: The item positioned at oldIndex will be moved to
      be positioned at newIndex
    syntax:
      content: 'function reorderQuickLinks(oldIndex: number, newIndex: number)'
      parameters:
        - id: oldIndex
          type:
            - number
          description: ''
        - id: newIndex
          type:
            - number
          description: ''
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.resetFocus'
    name: resetFocus
    children: []
    type: method
    langs:
      - typeScript
    summary: Resets focus to the beginning of the webpart.
    syntax:
      content: function resetFocus()
      parameters: []
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.showError'
    name: showError
    children: []
    type: method
    langs:
      - typeScript
    summary: Displays an error in the webpart.
    syntax:
      content: 'function showError(errorMsg: string)'
      parameters:
        - id: errorMsg
          type:
            - string
          description: ''
  - uid: '@ms/sp-teamsite-webparts.IQuickLinksDispatcher.updateQuickLink'
    name: updateQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Attempts to update item to have the indicated url, title, and caption.

      Any of these left undefined will not be modified.

      tries to pin it. This method anticipates the server change and notifies
      all callbacks listening

      for QuickLinksUpdated events, then calls fetchQuickLinks(), (which will
      notify all callbacks

      again).

      If a title is given, will use that title.

      If useContextWeb is true, it assumes the url

      is in the same web as the current context web. This is faster but will

      fail if the url is not in the current context web.
    syntax:
      content: >-
        function updateQuickLink(item: IQuickLink, url: string, title: string,
        pictureUrl: string, pictureAltText: string, pictureGuids:
        IFlaggable<IGuidSet>, caption: string)
      parameters:
        - id: item
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: title
          type:
            - string
          description: ''
        - id: pictureUrl
          type:
            - string
          description: ''
        - id: pictureAltText
          type:
            - string
          description: ''
        - id: pictureGuids
          type:
            - >-
              @@ms/sp-teamsite-webparts.IFlaggable<@@ms/sp-teamsite-webparts.IGuidSet>
          description: ''
        - id: caption
          type:
            - string
          description: ''
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
