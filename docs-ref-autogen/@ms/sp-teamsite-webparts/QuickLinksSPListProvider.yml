### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider'
    name: QuickLinksSPListProvider
    fullName: QuickLinksSPListProvider
    children:
      - >-
        @ms/sp-teamsite-webparts.QuickLinksSPListProvider.createOrUpdateQuickLink
      - '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.deleteQuickLink'
      - '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.getInstance'
      - '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.getQuickLinks'
      - '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.hasEditPermissions'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-teamsite-webparts.QuickLinksProviderBase'
    package: '@ms/sp-teamsite-webparts'
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.createOrUpdateQuickLink'
    name: createOrUpdateQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new quick item or updates an existing one. The id field in
      newItem

      determines whether this is a create or an update. If the id is specified,

      this is an update. Otherwise, it is a create. Next, the location of
      newItem is set.

      The location that newItem is placed is based on afterItemId. The server
      will attempt to place

      newItem directly after the item with id equal to afterItemId, if
      afterItemId is negative

      or no item with that id can be found, newItem will be placed at the
      beginning.

      If afterItemId is 0 and this is an update, newItem will not be moved from
      its

      previous place. If afterItemId is 0 and this is a create, newItem will

      be placed at the beginning.

      The isMove parameter does not change the behavior on the server, but

      affects the text of the error messages on failure.
    syntax:
      content: >-
        function createOrUpdateQuickLink(newItem: IQuickLink, afterItemId:
        number, isMove?: boolean)
      parameters:
        - id: newItem
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: afterItemId
          type:
            - number
          description: ''
        - id: isMove
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.deleteQuickLink'
    name: deleteQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the quick item with the indicated item id
    syntax:
      content: 'function deleteQuickLink(itemId: number)'
      parameters:
        - id: itemId
          type:
            - number
          description: ''
      return:
        type:
          - Promise<@@ms/sp-teamsite-webparts.IResult<void>>
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.getInstance'
    name: getInstance
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function getInstance(context: WebPartContext,
        hostPageLoggingType: HostPageLoggingType)
      parameters:
        - id: context
          type:
            - WebPartContext
          description: ''
        - id: hostPageLoggingType
          type:
            - HostPageLoggingType
          description: ''
      return:
        type:
          - '@@ms/sp-teamsite-webparts.IQuickLinksProvider'
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.getQuickLinks'
    name: getQuickLinks
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves highest ranked quick links.
    syntax:
      content: function getQuickLinks()
      parameters: []
      return:
        type:
          - 'Promise<@@ms/sp-teamsite-webparts.IQuickLink[]>'
  - uid: '@ms/sp-teamsite-webparts.QuickLinksSPListProvider.hasEditPermissions'
    name: hasEditPermissions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasEditPermissions()
      parameters: []
      return:
        type:
          - boolean
