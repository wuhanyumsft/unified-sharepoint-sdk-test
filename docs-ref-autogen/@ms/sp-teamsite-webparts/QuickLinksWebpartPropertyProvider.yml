### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider'
    name: QuickLinksWebpartPropertyProvider
    fullName: QuickLinksWebpartPropertyProvider
    children:
      - >-
        @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.createOrUpdateQuickLink
      - >-
        @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.deleteQuickLink
      - >-
        @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.getItemMetadata
      - '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.getQuickLinks'
      - >-
        @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.hasEditPermissions
      - '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-teamsite-webparts.QuickLinksProviderBase'
    package: '@ms/sp-teamsite-webparts'
  - uid: >-
      @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.createOrUpdateQuickLink
    name: createOrUpdateQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new quick item or updates an existing one. The id field in
      newItem

      determines whether this is a create or an update. If the id is specified,

      this is an update. Otherwise, it is a create. Next, the location of
      newItem is set.

      The location that newItem is placed is based on afterItemId. The server
      will attempt to place

      newItem directly after the item with id equal to afterItemId, if
      afterItemId is negative

      or no item with that id can be found, newItem will be placed at the
      beginning.

      If afterItemId is 0 and this is an update, newItem will not be moved from
      its

      previous place. If afterItemId is 0 and this is a create, newItem will

      be placed at the beginning.

      The isMove parameter does not change the behavior on the server, but

      affects the text of the error messages on failure.
    syntax:
      content: >-
        function createOrUpdateQuickLink(newItem: IQuickLink, afterItemId:
        number, isMove?: boolean)
      parameters:
        - id: newItem
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink'
          description: ''
        - id: afterItemId
          type:
            - number
          description: ''
        - id: isMove
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<@@ms/sp-teamsite-webparts.IResult<@@ms/sp-teamsite-webparts.IQuickLink>>
  - uid: '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.deleteQuickLink'
    name: deleteQuickLink
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the quick item with the indicated item id
    syntax:
      content: 'function deleteQuickLink(itemId: number)'
      parameters:
        - id: itemId
          type:
            - number
          description: ''
      return:
        type:
          - Promise<@@ms/sp-teamsite-webparts.IResult<void>>
  - uid: '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.getItemMetadata'
    name: getItemMetadata
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Given a url, attempts to retrieve metadata about it, such as its title

      and object type. If useContextWeb is true, it assumes the url

      is in the same web as the current context web. This is faster but will

      fail if the url is not in the current context web.

      If the guid of the item can be decided before sending the request, it
      should be passed in order

      to get the preview image from thumbnail service. Otherwise the legacy
      preview service will be used.
    syntax:
      content: >-
        function getItemMetadata(url: string, useContextWeb: boolean,
        itemGuidSet?: IGuidSet)
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: useContextWeb
          type:
            - boolean
          description: ''
        - id: itemGuidSet
          type:
            - '@@ms/sp-teamsite-webparts.IGuidSet'
          description: ''
          optional: true
      return:
        type:
          - Promise<@@ms/sp-teamsite-webparts.IQuickLink>
  - uid: '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.getQuickLinks'
    name: getQuickLinks
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves highest ranked quick links.
    syntax:
      content: function getQuickLinks()
      parameters: []
      return:
        type:
          - 'Promise<@@ms/sp-teamsite-webparts.IQuickLink[]>'
  - uid: >-
      @ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.hasEditPermissions
    name: hasEditPermissions
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Returns true if and only if the current user has permission
      to edit quick links.
    syntax:
      content: function hasEditPermissions()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-teamsite-webparts.QuickLinksWebpartPropertyProvider.constructor'
    name: QuickLinksWebpartPropertyProvider
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new QuickLinksWebpartPropertyProvider(dataSource: QuickLinksDataSource,
        hostPageLoggingType: HostPageLoggingType, context: IWebPartContext,
        items: IQuickLink[], onItemsChange: (items: IQuickLink[]) => void)
      parameters:
        - id: dataSource
          type:
            - '@@ms/sp-teamsite-webparts.QuickLinksDataSource'
          description: ''
        - id: hostPageLoggingType
          type:
            - HostPageLoggingType
          description: ''
        - id: context
          type:
            - IWebPartContext
          description: ''
        - id: items
          type:
            - '@@ms/sp-teamsite-webparts.IQuickLink[]'
          description: ''
        - id: onItemsChange
          type:
            - '(items: IQuickLink[]) => void'
          description: ''
