### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.CKTextEditor'
    name: CKTextEditor
    fullName: CKTextEditor
    children:
      - '@ms/sp-canvas.CKTextEditor.appliedFontColor'
      - '@ms/sp-canvas.CKTextEditor.appliedFontSize'
      - '@ms/sp-canvas.CKTextEditor.appliedHighlightColor'
      - '@ms/sp-canvas.CKTextEditor.constructor'
      - '@ms/sp-canvas.CKTextEditor.clearFormatting'
      - '@ms/sp-canvas.CKTextEditor.createNewEditor'
      - '@ms/sp-canvas.CKTextEditor.destroy'
      - '@ms/sp-canvas.CKTextEditor.focus'
      - '@ms/sp-canvas.CKTextEditor.format'
      - '@ms/sp-canvas.CKTextEditor.formatTable'
      - '@ms/sp-canvas.CKTextEditor.getBounds'
      - '@ms/sp-canvas.CKTextEditor.getEditorType'
      - '@ms/sp-canvas.CKTextEditor.getFormatValue'
      - '@ms/sp-canvas.CKTextEditor.getHTML'
      - '@ms/sp-canvas.CKTextEditor.getSelectedLink'
      - '@ms/sp-canvas.CKTextEditor.getSelectedLinkAttribute'
      - '@ms/sp-canvas.CKTextEditor.getSelection'
      - '@ms/sp-canvas.CKTextEditor.getText'
      - '@ms/sp-canvas.CKTextEditor.isFormatAppliedToRange'
      - '@ms/sp-canvas.CKTextEditor.isTableSelected'
      - '@ms/sp-canvas.CKTextEditor.moduleLoader'
      - '@ms/sp-canvas.CKTextEditor.noColor'
      - '@ms/sp-canvas.CKTextEditor.onReady'
      - '@ms/sp-canvas.CKTextEditor.preloadEditor'
      - '@ms/sp-canvas.CKTextEditor.setSelection'
    langs:
      - typeScript
    type: class
    summary: Implementation of IRichTextEditor for CKEditor @4.5.11
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.CKTextEditor.appliedFontColor'
    name: appliedFontColor
    fullName: appliedFontColor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string appliedFontColor
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.appliedFontSize'
    name: appliedFontSize
    fullName: appliedFontSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string appliedFontSize
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.appliedHighlightColor'
    name: appliedHighlightColor
    fullName: appliedHighlightColor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string appliedHighlightColor
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.constructor'
    name: CKTextEditor
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Use createNewEditor instead of constructor to ensure using the editor
      after it's loaded

      Note: TypeScript doesn't allow private constructors
    syntax:
      content: >-
        new CKTextEditor(config: IRichTextEditorConfiguration, currentHTML:
        string, editorElement: HTMLDivElement, selectionChangeCallback: (range:
        IRange, forceUpdate?: boolean) => void, textChangeCallback: () => void,
        startUpFocus?: boolean, onReadyCallback?: () => void,
        onImagePasteCallBack?: (isImageValid: boolean, imageBlob?: Blob,
        innerHTML?: string) => void, onPasteCallback?: (isPasteInProgress:
        boolean) => void, onContextMenuCallBack?: (isRightClicked: boolean,
        target: Element) => void)
      parameters:
        - id: config
          type:
            - '@@ms/sp-canvas.IRichTextEditorConfiguration'
          description: ''
        - id: currentHTML
          type:
            - string
          description: ''
        - id: editorElement
          type:
            - HTMLDivElement
          description: ''
        - id: selectionChangeCallback
          type:
            - '(range: IRange, forceUpdate?: boolean) => void'
          description: ''
        - id: textChangeCallback
          type:
            - () => void
          description: ''
        - id: startUpFocus
          type:
            - boolean
          description: ''
          optional: true
        - id: onReadyCallback
          type:
            - () => void
          description: ''
          optional: true
        - id: onImagePasteCallBack
          type:
            - >-
              (isImageValid: boolean, imageBlob?: Blob, innerHTML?: string) =>
              void
          description: ''
          optional: true
        - id: onPasteCallback
          type:
            - '(isPasteInProgress: boolean) => void'
          description: ''
          optional: true
        - id: onContextMenuCallBack
          type:
            - '(isRightClicked: boolean, target: Element) => void'
          description: ''
          optional: true
  - uid: '@ms/sp-canvas.CKTextEditor.clearFormatting'
    name: clearFormatting
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearFormatting(start: number, end: number)'
      parameters:
        - id: start
          type:
            - number
          description: ''
        - id: end
          type:
            - number
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.createNewEditor'
    name: createNewEditor
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function createNewEditor(config: IRichTextEditorConfiguration,
        currentHTML: string, editorElement: HTMLDivElement,
        selectionChangeCallback: (range: IRange, forceUpdate?: boolean) => void,
        textChangeCallback: () => void, startupFocus?: boolean,
        onImagePasteCallBack?: (isImageValid: boolean, imageBlob?: Blob,
        innerHTML?: string) => void, onPasteCallback?: (isPasteInProgress:
        boolean) => void, onContextMenuCallBack?: (isRightClicked: boolean,
        target: Element) => void)
      parameters:
        - id: config
          type:
            - '@@ms/sp-canvas.IRichTextEditorConfiguration'
          description: ''
        - id: currentHTML
          type:
            - string
          description: ''
        - id: editorElement
          type:
            - HTMLDivElement
          description: ''
        - id: selectionChangeCallback
          type:
            - '(range: IRange, forceUpdate?: boolean) => void'
          description: ''
        - id: textChangeCallback
          type:
            - () => void
          description: ''
        - id: startupFocus
          type:
            - boolean
          description: ''
          optional: true
        - id: onImagePasteCallBack
          type:
            - >-
              (isImageValid: boolean, imageBlob?: Blob, innerHTML?: string) =>
              void
          description: ''
          optional: true
        - id: onPasteCallback
          type:
            - '(isPasteInProgress: boolean) => void'
          description: ''
          optional: true
        - id: onContextMenuCallBack
          type:
            - '(isRightClicked: boolean, target: Element) => void'
          description: ''
          optional: true
      return:
        type:
          - Promise<@@ms/sp-canvas.CKTextEditor>
  - uid: '@ms/sp-canvas.CKTextEditor.destroy'
    name: destroy
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function destroy()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.focus'
    name: focus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function focus()
      parameters: []
  - uid: '@ms/sp-canvas.CKTextEditor.format'
    name: format
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function format(start: number, end: number, formats: Object,
        applyAllFormatsToLine?: boolean)
      parameters:
        - id: start
          type:
            - number
          description: Start position of selection
        - id: end
          type:
            - number
          description: End position of selection
        - id: formats
          type:
            - Object
          description: 'Map of key:value pairs for formats to apply'
        - id: applyAllFormatsToLine
          type:
            - boolean
          description: >
            Forces all formats to be applied to the whole line(s). If not
            provided,

            formats are divided into two buckets (line vs non-line) based on
            their isLine field


            A unified method for applying formats to any selection
          optional: true
  - uid: '@ms/sp-canvas.CKTextEditor.formatTable'
    name: formatTable
    children: []
    type: method
    langs:
      - typeScript
    summary: Applies the format to the table in the RTE
    syntax:
      content: 'function formatTable(format: string, target: Element)'
      parameters:
        - id: format
          type:
            - string
          description: ''
        - id: target
          type:
            - Element
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.getBounds'
    name: getBounds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBounds(position: number)'
      parameters:
        - id: position
          type:
            - number
          description: ''
      return:
        type:
          - '@@ms/sp-canvas.IBounds'
  - uid: '@ms/sp-canvas.CKTextEditor.getEditorType'
    name: getEditorType
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEditorType()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.getFormatValue'
    name: getFormatValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFormatValue(start: number, end: number, format:
        IRichTextFormat)
      parameters:
        - id: start
          type:
            - number
          description: ''
        - id: end
          type:
            - number
          description: ''
        - id: format
          type:
            - '@@ms/sp-canvas.IRichTextFormat'
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.getHTML'
    name: getHTML
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHTML()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.getSelectedLink'
    name: getSelectedLink
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedLink()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.getSelectedLinkAttribute'
    name: getSelectedLinkAttribute
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSelectedLinkAttribute(attribute: string)'
      parameters:
        - id: attribute
          type:
            - string
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.getSelection'
    name: getSelection
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelection()
      parameters: []
      return:
        type:
          - '@@ms/sp-canvas.IRange'
  - uid: '@ms/sp-canvas.CKTextEditor.getText'
    name: getText
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getText(range?: IRange)'
      parameters:
        - id: range
          type:
            - '@@ms/sp-canvas.IRange'
          description: ''
          optional: true
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.isFormatAppliedToRange'
    name: isFormatAppliedToRange
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isFormatAppliedToRange(start: number, end: number, format:
        IRichTextFormat)
      parameters:
        - id: start
          type:
            - number
          description: Start value of range
        - id: end
          type:
            - number
          description: |
            End value of range
        - id: format
          type:
            - '@@ms/sp-canvas.IRichTextFormat'
          description: Name of the format to apply from SPRTE_FORMATS
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.CKTextEditor.isTableSelected'
    name: isTableSelected
    fullName: isTableSelected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isTableSelected
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.CKTextEditor.moduleLoader'
    name: moduleLoader
    fullName: moduleLoader
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static IRichTextEditorLoader moduleLoader
      return:
        type:
          - '@@ms/sp-canvas.IRichTextEditorLoader'
  - uid: '@ms/sp-canvas.CKTextEditor.noColor'
    name: noColor
    fullName: noColor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string noColor
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CKTextEditor.onReady'
    name: onReady
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onReady(callback: () => void)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.preloadEditor'
    name: preloadEditor
    children: []
    type: method
    langs:
      - typeScript
    summary: Preload ck editor
    syntax:
      content: 'static function preloadEditor(config: IRichTextEditorConfiguration)'
      parameters:
        - id: config
          type:
            - '@@ms/sp-canvas.IRichTextEditorConfiguration'
          description: ''
  - uid: '@ms/sp-canvas.CKTextEditor.setSelection'
    name: setSelection
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelection(range: IRange)'
      parameters:
        - id: range
          type:
            - '@@ms/sp-canvas.IRange'
          description: ''
