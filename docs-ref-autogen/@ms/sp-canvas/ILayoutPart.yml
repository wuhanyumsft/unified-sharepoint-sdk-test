### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.ILayoutPart'
    name: ILayoutPart
    fullName: ILayoutPart
    children:
      - '@ms/sp-canvas.ILayoutPart.addControl'
      - '@ms/sp-canvas.ILayoutPart.dispose'
      - '@ms/sp-canvas.ILayoutPart.fetchAllControls'
      - '@ms/sp-canvas.ILayoutPart.fetchControl'
      - '@ms/sp-canvas.ILayoutPart.isEmpty'
      - '@ms/sp-canvas.ILayoutPart.moveControl'
      - '@ms/sp-canvas.ILayoutPart.removeControl'
    langs:
      - typeScript
    type: interface
    summary: Represents the contract for canvas layout operations
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.ILayoutPart.addControl'
    name: addControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a control to the canvas layout
    syntax:
      content: 'function addControl(control: ICanvasControl)'
      parameters:
        - id: control
          type:
            - '@@ms/sp-canvas.ICanvasControl'
          description: Represents the control to be added
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.ILayoutPart.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: Disposes the layout
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@ms/sp-canvas.ILayoutPart.fetchAllControls'
    name: fetchAllControls
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetch all controls that are available in the layout
    syntax:
      content: function fetchAllControls()
      parameters: []
  - uid: '@ms/sp-canvas.ILayoutPart.fetchControl'
    name: fetchControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetch a control from the layout
    syntax:
      content: 'function fetchControl(controlPosition: IControlPosition)'
      parameters:
        - id: controlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: represents the position of the control
      return:
        type:
          - '@@ms/sp-canvas.ICanvasControl'
  - uid: '@ms/sp-canvas.ILayoutPart.isEmpty'
    name: isEmpty
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines if the underlying layout is empty
    syntax:
      content: function isEmpty()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.ILayoutPart.moveControl'
    name: moveControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Moves a control inside the layout part
    syntax:
      content: >-
        function moveControl(control: ICanvasControl, newControlPosition:
        IControlPosition)
      parameters:
        - id: control
          type:
            - '@@ms/sp-canvas.ICanvasControl'
          description: The control to be moved
        - id: newControlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: |
            The position where the control will be moved to
  - uid: '@ms/sp-canvas.ILayoutPart.removeControl'
    name: removeControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a control from the canvas layout
    syntax:
      content: 'function removeControl(controlPosition: IControlPosition)'
      parameters:
        - id: controlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: ''
      return:
        type:
          - string
