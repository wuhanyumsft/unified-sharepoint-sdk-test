### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps'
    name: IToolbarSubmenuProps
    fullName: IToolbarSubmenuProps
    children:
      - '@ms/sp-canvas.IToolbarSubmenuProps.a11yManagerId'
      - '@ms/sp-canvas.IToolbarSubmenuProps.buttons'
      - '@ms/sp-canvas.IToolbarSubmenuProps.isOpen'
      - '@ms/sp-canvas.IToolbarSubmenuProps.isWide'
      - '@ms/sp-canvas.IToolbarSubmenuProps.onBlur'
      - '@ms/sp-canvas.IToolbarSubmenuProps.onClose'
      - '@ms/sp-canvas.IToolbarSubmenuProps.onOpen'
      - '@ms/sp-canvas.IToolbarSubmenuProps.title'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.a11yManagerId'
    name: a11yManagerId
    fullName: a11yManagerId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string a11yManagerId
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.buttons'
    name: buttons
    fullName: buttons
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'IToolbarButtonProps[] buttons'
      return:
        type:
          - '@@ms/sp-canvas.IToolbarButtonProps[]'
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.isOpen'
    name: isOpen
    fullName: isOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isOpen
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.isWide'
    name: isWide
    fullName: isWide
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      By default, the submenu will take on the width of the button it contains.

      Set this to true when you want to make it wide, such as when showing text
      formats.

      This also overrides the size of any buttons contained in the menu, so that

      they occupy the full width of the menu.
    syntax:
      content: boolean isWide
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.onBlur'
    name: onBlur
    fullName: onBlur
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(e: FocusEvent<any>) => void onBlur'
      return:
        type:
          - '(e: FocusEvent<any>) => void'
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.onClose'
    name: onClose
    fullName: onClose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(isDocumentClick?: boolean) => void onClose'
      return:
        type:
          - '(isDocumentClick?: boolean) => void'
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.onOpen'
    name: onOpen
    fullName: onOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void onOpen
      return:
        type:
          - () => void
  - uid: '@ms/sp-canvas.IToolbarSubmenuProps.title'
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string title
      return:
        type:
          - string
