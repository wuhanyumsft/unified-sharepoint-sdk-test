### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.CanvasToolboxHint'
    name: CanvasToolboxHint
    fullName: CanvasToolboxHint
    children:
      - '@ms/sp-canvas.CanvasToolboxHint.constructor'
      - '@ms/sp-canvas.CanvasToolboxHint.componentDidMount'
      - '@ms/sp-canvas.CanvasToolboxHint.componentDidUpdate'
      - '@ms/sp-canvas.CanvasToolboxHint.componentWillReceiveProps'
      - '@ms/sp-canvas.CanvasToolboxHint.context'
      - '@ms/sp-canvas.CanvasToolboxHint.focus'
      - '@ms/sp-canvas.CanvasToolboxHint.render'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-canvas.CanvasToolboxHint<@@ms/sp-canvas.ICanvasToolboxHintProps>'
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.CanvasToolboxHint.constructor'
    name: CanvasToolboxHint
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CanvasToolboxHint(props: ICanvasToolboxHintProps, context:
        ICanvasContext)
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas.ICanvasToolboxHintProps'
          description: ''
        - id: context
          type:
            - '@@ms/sp-canvas.ICanvasContext'
          description: ''
  - uid: '@ms/sp-canvas.CanvasToolboxHint.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasToolboxHint.componentDidUpdate'
    name: componentDidUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidUpdate()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasToolboxHint.componentWillReceiveProps'
    name: componentWillReceiveProps
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(nextProps: ICanvasToolboxHintProps)'
      parameters:
        - id: nextProps
          type:
            - '@@ms/sp-canvas.ICanvasToolboxHintProps'
          description: ''
  - uid: '@ms/sp-canvas.CanvasToolboxHint.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ICanvasContext context
      return:
        type:
          - '@@ms/sp-canvas.ICanvasContext'
  - uid: '@ms/sp-canvas.CanvasToolboxHint.focus'
    name: focus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function focus()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasToolboxHint.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<@@ms/sp-canvas.ICanvasToolboxHintProps>
