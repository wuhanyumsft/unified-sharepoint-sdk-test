### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.ToolbarSubmenu'
    name: ToolbarSubmenu
    fullName: ToolbarSubmenu
    children:
      - '@ms/sp-canvas.ToolbarSubmenu.componentDidMount'
      - '@ms/sp-canvas.ToolbarSubmenu.componentDidUpdate'
      - '@ms/sp-canvas.ToolbarSubmenu.componentWillReceiveProps'
      - '@ms/sp-canvas.ToolbarSubmenu.componentWillUnmount'
      - '@ms/sp-canvas.ToolbarSubmenu.render'
      - '@ms/sp-canvas.ToolbarSubmenu.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-canvas.ToolbarSubmenu<@@ms/sp-canvas.IToolbarSubmenuProps>'
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.ToolbarSubmenu.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-canvas.ToolbarSubmenu.componentDidUpdate'
    name: componentDidUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentDidUpdate(prevProps: IToolbarSubmenuProps, prevState:
        IToolbarSubmenuState)
      parameters:
        - id: prevProps
          type:
            - '@@ms/sp-canvas.IToolbarSubmenuProps'
          description: ''
        - id: prevState
          type:
            - '@@ms/sp-canvas.IToolbarSubmenuState'
          description: ''
  - uid: '@ms/sp-canvas.ToolbarSubmenu.componentWillReceiveProps'
    name: componentWillReceiveProps
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(nextProps: IToolbarSubmenuProps)'
      parameters:
        - id: nextProps
          type:
            - '@@ms/sp-canvas.IToolbarSubmenuProps'
          description: ''
  - uid: '@ms/sp-canvas.ToolbarSubmenu.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-canvas.ToolbarSubmenu.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Render the submenu, depending on its open state'
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<@@ms/sp-canvas.IToolbarSubmenuProps>
  - uid: '@ms/sp-canvas.ToolbarSubmenu.constructor'
    name: ToolbarSubmenu
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ToolbarSubmenu(props: IToolbarSubmenuProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas.IToolbarSubmenuProps'
          description: ''
