### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.Canvas'
    name: Canvas
    fullName: Canvas
    children:
      - '@ms/sp-canvas.Canvas.constructor'
      - '@ms/sp-canvas.Canvas.dispose'
      - '@ms/sp-canvas.Canvas.fetchWebparts'
      - '@ms/sp-canvas.Canvas.openToolbox'
      - '@ms/sp-canvas.Canvas.render'
      - '@ms/sp-canvas.Canvas.serialize'
    langs:
      - typeScript
    type: class
    summary: >-
      SharePoint Client-side Applications can use the SharePoint Canvas to
      enable rich content authoring

      as part of their experience. The SharePoint canvas provides Rich Text
      Editing capabilities, SharePoint

      Client-side WebPart aggregation and hosting, and a beautiful railed design
      experience.
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.Canvas.constructor'
    name: Canvas
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Construct a new instance of the Canvas.
    syntax:
      content: 'new Canvas(container: HTMLElement, canvasOptions: ICanvasOptions)'
      parameters:
        - id: container
          type:
            - HTMLElement
          description: >-
            The host DOM container for the Canvas. When render() is invoked the
            Canvas will
              render into 'container'.
        - id: canvasOptions
          type:
            - '@@ms/sp-canvas.ICanvasOptions'
          description: |
            The optional parameters of the Canvas.
  - uid: '@ms/sp-canvas.Canvas.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: Unmount the Canvas from the container it was constructed with.
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@ms/sp-canvas.Canvas.fetchWebparts'
    name: fetchWebparts
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If the Canvas is in DisplayMode.Edit, asynchronously fetch web part
      manifests in the background. If the Canvas is
       not in DisplayMode.Edit, fetch can be forced.
    syntax:
      content: 'function fetchWebparts(force?: boolean)'
      parameters:
        - id: force
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-canvas.Canvas.openToolbox'
    name: openToolbox
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Display the Canvas' Toolbox at a given row. If the Toolbox is already
      open, the Toolbox will close

      at its previous row and re-open at the new row.
    syntax:
      content: 'function openToolbox(row: number)'
      parameters:
        - id: row
          type:
            - number
          description: >
            The desired row for the Toolbox to open at. The rows are zero-based
            numbered.
              If an invalid row is passed, no changes will occur.
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.Canvas.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Render the Canvas into its container DOM element. The Canvas will use the
      DisplayMode it was

      constructed with.

      If the Canvas has already been rendered once, the Canvas will clear its
      contents and then, if present,

      use 'serializedCanvas' to rehydrate itself.
    syntax:
      content: 'function render(displayMode: DisplayMode, serializedCanvas?: string)'
      parameters:
        - id: displayMode
          type:
            - DisplayMode
          description: ''
        - id: serializedCanvas
          type:
            - string
          description: >
            Optional. The string must have been created by a previous instance
            of
              the Canvas. If absent, an empty Canvas will be rendered. If present, the Canvas will rehydrate
              to represent the state of the Canvas when serialized.
          optional: true
  - uid: '@ms/sp-canvas.Canvas.serialize'
    name: serialize
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Serialize the current contents of the Canvas. The serialized string is in
      a HTML/JSON format understood by

      SharePoint's Rich Text Field. The returned string can be crawled by
      search. Modifying the returned

      string outside of the Canvas is not supported.
    syntax:
      content: 'function serialize(toJson?: boolean)'
      parameters:
        - id: toJson
          type:
            - boolean
          description: >
            Indicates whether the returned serialized string is a JSON string or
            not.
          optional: true
      return:
        type:
          - string
