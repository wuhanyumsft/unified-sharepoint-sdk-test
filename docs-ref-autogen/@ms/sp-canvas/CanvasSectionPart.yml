### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.CanvasSectionPart'
    name: CanvasSectionPart
    fullName: CanvasSectionPart
    children:
      - '@ms/sp-canvas.CanvasSectionPart.addControl'
      - '@ms/sp-canvas.CanvasSectionPart.constructor'
      - '@ms/sp-canvas.CanvasSectionPart.changeFactor'
      - '@ms/sp-canvas.CanvasSectionPart.controls'
      - '@ms/sp-canvas.CanvasSectionPart.dispose'
      - '@ms/sp-canvas.CanvasSectionPart.emptySectionControl'
      - '@ms/sp-canvas.CanvasSectionPart.emptySectionId'
      - '@ms/sp-canvas.CanvasSectionPart.factor'
      - '@ms/sp-canvas.CanvasSectionPart.fetchAllControls'
      - '@ms/sp-canvas.CanvasSectionPart.fetchControl'
      - '@ms/sp-canvas.CanvasSectionPart.index'
      - '@ms/sp-canvas.CanvasSectionPart.isEmpty'
      - '@ms/sp-canvas.CanvasSectionPart.moveControl'
      - '@ms/sp-canvas.CanvasSectionPart.removeControl'
    langs:
      - typeScript
    type: class
    summary: Represents the Canvas Section Layout Part
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.CanvasSectionPart.addControl'
    name: addControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a new control in the pertinent section
    syntax:
      content: 'function addControl(canvasControl: ICanvasControl)'
      parameters:
        - id: canvasControl
          type:
            - '@@ms/sp-canvas.ICanvasControl'
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.CanvasSectionPart.constructor'
    name: CanvasSectionPart
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of a CanvasSectionPart
    syntax:
      content: 'new CanvasSectionPart(sectionIdx: number, factor?: number)'
      parameters:
        - id: sectionIdx
          type:
            - number
          description: |
            represents the section index
        - id: factor
          type:
            - number
          description: ''
          optional: true
  - uid: '@ms/sp-canvas.CanvasSectionPart.changeFactor'
    name: changeFactor
    children: []
    type: method
    langs:
      - typeScript
    summary: Change the section factor of the section.
    syntax:
      content: 'function changeFactor(newFactor: number)'
      parameters:
        - id: newFactor
          type:
            - number
          description: |
            The new section factor.
  - uid: '@ms/sp-canvas.CanvasSectionPart.controls'
    name: controls
    fullName: controls
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the controls associated with the current section
    syntax:
      content: 'ICanvasControl[] controls'
      return:
        type:
          - '@@ms/sp-canvas.ICanvasControl[]'
  - uid: '@ms/sp-canvas.CanvasSectionPart.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: Disposes the section
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasSectionPart.emptySectionControl'
    name: emptySectionControl
    fullName: emptySectionControl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ICanvasControl emptySectionControl
      return:
        type:
          - '@@ms/sp-canvas.ICanvasControl'
  - uid: '@ms/sp-canvas.CanvasSectionPart.emptySectionId'
    name: emptySectionId
    fullName: emptySectionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static function emptySectionId
      return:
        type:
          - function
  - uid: '@ms/sp-canvas.CanvasSectionPart.factor'
    name: factor
    fullName: factor
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the section factor.
    syntax:
      content: number factor
      return:
        type:
          - number
  - uid: '@ms/sp-canvas.CanvasSectionPart.fetchAllControls'
    name: fetchAllControls
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetch all controls that are available in that section
    syntax:
      content: function fetchAllControls()
      parameters: []
      return:
        type:
          - Array<@@ms/sp-canvas.ICanvasControl>
  - uid: '@ms/sp-canvas.CanvasSectionPart.fetchControl'
    name: fetchControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Fetches a control from the layout
    syntax:
      content: 'function fetchControl(controlPosition: IControlPosition)'
      parameters:
        - id: controlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: represents the position of the control
      return:
        type:
          - '@@ms/sp-canvas.ICanvasControl'
  - uid: '@ms/sp-canvas.CanvasSectionPart.index'
    name: index
    fullName: index
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the index associated with this section
    syntax:
      content: number index
      return:
        type:
          - number
  - uid: '@ms/sp-canvas.CanvasSectionPart.isEmpty'
    name: isEmpty
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines if the underlying layout is empty
    syntax:
      content: function isEmpty()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.CanvasSectionPart.moveControl'
    name: moveControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Moves a control inside the section.
    syntax:
      content: >-
        function moveControl(control: ICanvasControl, newControlPosition:
        IControlPosition)
      parameters:
        - id: control
          type:
            - '@@ms/sp-canvas.ICanvasControl'
          description: The control to be moved
        - id: newControlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: |
            The position where the control will be moved to
  - uid: '@ms/sp-canvas.CanvasSectionPart.removeControl'
    name: removeControl
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a control
    syntax:
      content: 'function removeControl(controlPosition: IControlPosition)'
      parameters:
        - id: controlPosition
          type:
            - '@@ms/sp-canvas.IControlPosition'
          description: represents the control to remove
      return:
        type:
          - string
