### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.WebPartZone'
    name: WebPartZone
    fullName: WebPartZone
    children:
      - '@ms/sp-canvas.WebPartZone.componentDidMount'
      - '@ms/sp-canvas.WebPartZone.context'
      - '@ms/sp-canvas.WebPartZone.focus'
      - '@ms/sp-canvas.WebPartZone.handleConfigureButtonClicked'
      - '@ms/sp-canvas.WebPartZone.handleDeleteButtonClicked'
      - '@ms/sp-canvas.WebPartZone.render'
      - '@ms/sp-canvas.WebPartZone.serialize'
      - '@ms/sp-canvas.WebPartZone.setDisplayMode'
      - '@ms/sp-canvas.WebPartZone.shouldComponentUpdate'
      - '@ms/sp-canvas.WebPartZone.webPartManagerInitialized'
      - '@ms/sp-canvas.WebPartZone.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-canvas.WebPartZone<@@ms/sp-canvas.IWebPartZoneProps>'
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.WebPartZone.componentDidMount'
    name: componentDidMount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
  - uid: '@ms/sp-canvas.WebPartZone.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ICanvasContext context
      return:
        type:
          - '@@ms/sp-canvas.ICanvasContext'
  - uid: '@ms/sp-canvas.WebPartZone.focus'
    name: focus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function focus()
      parameters: []
  - uid: '@ms/sp-canvas.WebPartZone.handleConfigureButtonClicked'
    name: handleConfigureButtonClicked
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function handleConfigureButtonClicked(shouldToggle: boolean)'
      parameters:
        - id: shouldToggle
          type:
            - boolean
          description: ''
  - uid: '@ms/sp-canvas.WebPartZone.handleDeleteButtonClicked'
    name: handleDeleteButtonClicked
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function handleDeleteButtonClicked()
      parameters: []
  - uid: '@ms/sp-canvas.WebPartZone.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<@@ms/sp-canvas.IWebPartZoneProps>
  - uid: '@ms/sp-canvas.WebPartZone.serialize'
    name: serialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function serialize()
      parameters: []
      return:
        type:
          - '@@ms/sp-canvas.ICanvasControl'
  - uid: '@ms/sp-canvas.WebPartZone.setDisplayMode'
    name: setDisplayMode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDisplayMode(newDisplayMode: DisplayMode)'
      parameters:
        - id: newDisplayMode
          type:
            - DisplayMode
          description: ''
  - uid: '@ms/sp-canvas.WebPartZone.shouldComponentUpdate'
    name: shouldComponentUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function shouldComponentUpdate(newProps: IWebPartZoneProps, newState:
        IWebPartZoneState)
      parameters:
        - id: newProps
          type:
            - '@@ms/sp-canvas.IWebPartZoneProps'
          description: ''
        - id: newState
          type:
            - '@@ms/sp-canvas.IWebPartZoneState'
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.WebPartZone.webPartManagerInitialized'
    name: webPartManagerInitialized
    fullName: webPartManagerInitialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static boolean webPartManagerInitialized
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.WebPartZone.constructor'
    name: WebPartZone
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new WebPartZone(props: IWebPartZoneProps, context: ICanvasContext)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas.IWebPartZoneProps'
          description: ''
        - id: context
          type:
            - '@@ms/sp-canvas.ICanvasContext'
          description: ''
