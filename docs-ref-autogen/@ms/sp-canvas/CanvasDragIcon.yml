### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.CanvasDragIcon'
    name: CanvasDragIcon
    fullName: CanvasDragIcon
    children:
      - '@ms/sp-canvas.CanvasDragIcon.constructor'
      - '@ms/sp-canvas.CanvasDragIcon.setDisallowedIcon'
      - '@ms/sp-canvas.CanvasDragIcon.setMoveIconBasedOnControl'
      - '@ms/sp-canvas.CanvasDragIcon.setMoveIconBasedOnZone'
      - '@ms/sp-canvas.CanvasDragIcon.setToPreviousState'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.CanvasDragIcon.constructor'
    name: CanvasDragIcon
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new CanvasDragIcon()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasDragIcon.setDisallowedIcon'
    name: setDisallowedIcon
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function setDisallowedIcon()
      parameters: []
  - uid: '@ms/sp-canvas.CanvasDragIcon.setMoveIconBasedOnControl'
    name: setMoveIconBasedOnControl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMoveIconBasedOnControl(control: ICanvasControl)'
      parameters:
        - id: control
          type:
            - '@@ms/sp-canvas.ICanvasControl'
          description: ''
  - uid: '@ms/sp-canvas.CanvasDragIcon.setMoveIconBasedOnZone'
    name: setMoveIconBasedOnZone
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMoveIconBasedOnZone(zone: CanvasZonePart)'
      parameters:
        - id: zone
          type:
            - '@@ms/sp-canvas.CanvasZonePart'
          description: ''
  - uid: '@ms/sp-canvas.CanvasDragIcon.setToPreviousState'
    name: setToPreviousState
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function setToPreviousState()
      parameters: []
