### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas.IRichTextFormat'
    name: IRichTextFormat
    fullName: IRichTextFormat
    children:
      - '@ms/sp-canvas.IRichTextFormat.browserKey'
      - '@ms/sp-canvas.IRichTextFormat.button'
      - '@ms/sp-canvas.IRichTextFormat.editorKey'
      - '@ms/sp-canvas.IRichTextFormat.editorValue'
      - '@ms/sp-canvas.IRichTextFormat.isBlockStyle'
      - '@ms/sp-canvas.IRichTextFormat.isEditorNative'
      - '@ms/sp-canvas.IRichTextFormat.isLine'
      - '@ms/sp-canvas.IRichTextFormat.key'
      - '@ms/sp-canvas.IRichTextFormat.maskedBy'
      - '@ms/sp-canvas.IRichTextFormat.masks'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-canvas'
  - uid: '@ms/sp-canvas.IRichTextFormat.browserKey'
    name: browserKey
    fullName: browserKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Format name in HTML5 contenteditable commands, used for calling
      queryCommandState
    syntax:
      content: string browserKey
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.IRichTextFormat.button'
    name: button
    fullName: button
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ISPRteButton button
      return:
        type:
          - '@@ms/sp-canvas.ISPRteButton'
  - uid: '@ms/sp-canvas.IRichTextFormat.editorKey'
    name: editorKey
    fullName: editorKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Format name in the editor
    syntax:
      content: string editorKey
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.IRichTextFormat.editorValue'
    name: editorValue
    fullName: editorValue
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Value to set this format using the editor. Do NOT Specify for boolean
      formats

      If not set, true/false boolean values are used for setting/unsetting the
      format

      Example: For alignRight we need to pass {align:'right'} to editor, so
      editorKey=align and editorValue=right

      Example: For bold we need to pass {bold:true} to editor, so editorKey=bold
      and editorValue should be undefined
    syntax:
      content: string editorValue
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.IRichTextFormat.isBlockStyle'
    name: isBlockStyle
    fullName: isBlockStyle
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Only one block style can be applied to a paragraph e.g. heading, quote'
    syntax:
      content: boolean isBlockStyle
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.IRichTextFormat.isEditorNative'
    name: isEditorNative
    fullName: isEditorNative
    children: []
    langs:
      - typeScript
    type: property
    summary: If editor natively understands this format (doesn't need registration)
    syntax:
      content: boolean isEditorNative
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.IRichTextFormat.isLine'
    name: isLine
    fullName: isLine
    children: []
    langs:
      - typeScript
    type: property
    summary: If the format applies to the whole line
    syntax:
      content: boolean isLine
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas.IRichTextFormat.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: Format name in SPRte
    syntax:
      content: string key
      return:
        type:
          - string
  - uid: '@ms/sp-canvas.IRichTextFormat.maskedBy'
    name: maskedBy
    fullName: maskedBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      List of formats that mask this format

      IMPORTANT: DO NOT set this attribute. It populated in the constructor
      based on 'masks' attribute
    syntax:
      content: 'string[] maskedBy'
      return:
        type:
          - 'string[]'
  - uid: '@ms/sp-canvas.IRichTextFormat.masks'
    name: masks
    fullName: masks
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      List of format names masked by this format
      - a masked format cannot be set when any of its masking formats is active
      - applying any of the masking formats will erase its masked formats
    syntax:
      content: 'string[] masks'
      return:
        type:
          - 'string[]'
