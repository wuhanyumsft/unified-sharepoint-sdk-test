### YamlMime:UniversalReference
items:
  - uid: '@ms/test-extensions-application.ColumnStore'
    name: ColumnStore
    fullName: ColumnStore
    children:
      - '@ms/test-extensions-application.ColumnStore.columnAdapter'
      - '@ms/test-extensions-application.ColumnStore.constructor'
      - '@ms/test-extensions-application.ColumnStore.field'
      - '@ms/test-extensions-application.ColumnStore.fillAdapter'
      - '@ms/test-extensions-application.ColumnStore.visible'
    langs:
      - typeScript
    type: class
    summary: 'Models a list view column, used by ListViewStore.'
    package: '@ms/test-extensions-application'
  - uid: '@ms/test-extensions-application.ColumnStore.columnAdapter'
    name: columnAdapter
    fullName: columnAdapter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: IColumnAdapter columnAdapter
      return:
        type:
          - IColumnAdapter
  - uid: '@ms/test-extensions-application.ColumnStore.constructor'
    name: ColumnStore
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ColumnStore(field: SPField)'
      parameters:
        - id: field
          type:
            - SPField
          description: ''
  - uid: '@ms/test-extensions-application.ColumnStore.field'
    name: field
    fullName: field
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The server-side definition of the field.
      This property is read-only.
    syntax:
      content: SPField field
      return:
        type:
          - SPField
  - uid: '@ms/test-extensions-application.ColumnStore.fillAdapter'
    name: fillAdapter
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function fillAdapter(listViewAdapter: IListViewAdapter)'
      parameters:
        - id: listViewAdapter
          type:
            - IListViewAdapter
          description: ''
  - uid: '@ms/test-extensions-application.ColumnStore.visible'
    name: visible
    fullName: visible
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether to show this column in the list view.
    syntax:
      content: boolean visible
      return:
        type:
          - boolean
