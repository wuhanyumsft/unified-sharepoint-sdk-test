### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-pages.EventDataSource'
    name: EventDataSource
    fullName: EventDataSource
    children:
      - '@ms/sp-pages.EventDataSource.createEvent'
      - '@ms/sp-pages.EventDataSource.deleteEvent'
      - '@ms/sp-pages.EventDataSource.constructor'
      - '@ms/sp-pages.EventDataSource.getEvent'
      - '@ms/sp-pages.EventDataSource.getInUsedCategoryList'
      - '@ms/sp-pages.EventDataSource.getPreDefinedCategoryList'
      - '@ms/sp-pages.EventDataSource.updateEvent'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-pages'
  - uid: '@ms/sp-pages.EventDataSource.createEvent'
    name: createEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createEvent(event: IEvent, listId: string)'
      parameters:
        - id: event
          type:
            - IEvent
          description: ''
        - id: listId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<IEvent>
  - uid: '@ms/sp-pages.EventDataSource.deleteEvent'
    name: deleteEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteEvent(listId: string, itemId: string)'
      parameters:
        - id: listId
          type:
            - string
          description: ''
        - id: itemId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-pages.EventDataSource.constructor'
    name: EventDataSource
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new EventDataSource()
      parameters: []
  - uid: '@ms/sp-pages.EventDataSource.getEvent'
    name: getEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEvent(listId: string, eventId: string)'
      parameters:
        - id: listId
          type:
            - string
          description: ''
        - id: eventId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<IEvent>
  - uid: '@ms/sp-pages.EventDataSource.getInUsedCategoryList'
    name: getInUsedCategoryList
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getInUsedCategoryList(listId: string)'
      parameters:
        - id: listId
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
  - uid: '@ms/sp-pages.EventDataSource.getPreDefinedCategoryList'
    name: getPreDefinedCategoryList
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPreDefinedCategoryList(listId: string)'
      parameters:
        - id: listId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ICategory>
  - uid: '@ms/sp-pages.EventDataSource.updateEvent'
    name: updateEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateEvent(event: IEvent, listId: string, eventId: string)'
      parameters:
        - id: event
          type:
            - IEvent
          description: ''
        - id: listId
          type:
            - string
          description: ''
        - id: eventId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
