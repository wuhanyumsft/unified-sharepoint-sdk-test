### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-pages.BaseAction'
    name: BaseAction
    fullName: BaseAction
    children:
      - '@ms/sp-pages.BaseAction.actionData'
      - '@ms/sp-pages.BaseAction.actionType'
      - '@ms/sp-pages.BaseAction.constructor'
      - '@ms/sp-pages.BaseAction.logEntry'
      - '@ms/sp-pages.BaseAction.toLogEntry'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-pages'
  - uid: '@ms/sp-pages.BaseAction.actionData'
    name: actionData
    fullName: actionData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any actionData
      return:
        type:
          - any
  - uid: '@ms/sp-pages.BaseAction.actionType'
    name: actionType
    fullName: actionType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ActionTypes actionType
      return:
        type:
          - ActionTypes
  - uid: '@ms/sp-pages.BaseAction.constructor'
    name: BaseAction
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new BaseAction(actionType: ActionTypes, logEntry: _ILogEntry,
        actionData?: any)
      parameters:
        - id: actionType
          type:
            - ActionTypes
          description: ''
        - id: logEntry
          type:
            - _ILogEntry
          description: ''
        - id: actionData
          type:
            - any
          description: ''
          optional: true
  - uid: '@ms/sp-pages.BaseAction.logEntry'
    name: logEntry
    fullName: logEntry
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: _ILogEntry logEntry
      return:
        type:
          - _ILogEntry
  - uid: '@ms/sp-pages.BaseAction.toLogEntry'
    name: toLogEntry
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toLogEntry()
      parameters: []
      return:
        type:
          - _ILogEntry
