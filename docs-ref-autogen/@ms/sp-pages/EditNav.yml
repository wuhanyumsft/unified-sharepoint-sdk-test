### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-pages.EditNav'
    name: EditNav
    fullName: EditNav
    children:
      - '@ms/sp-pages.EditNav.componentWillUnmount'
      - '@ms/sp-pages.EditNav.constructor'
      - '@ms/sp-pages.EditNav.getEditNavLink'
      - '@ms/sp-pages.EditNav.render'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@@ms/sp-pages.BasePublishingControl<@@ms/sp-pages.IPageEditNavProps>'
    package: '@ms/sp-pages'
  - uid: '@ms/sp-pages.EditNav.componentWillUnmount'
    name: componentWillUnmount
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
  - uid: '@ms/sp-pages.EditNav.constructor'
    name: EditNav
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EditNav(props: IPageEditNavProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-pages.IPageEditNavProps'
          description: ''
  - uid: '@ms/sp-pages.EditNav.getEditNavLink'
    name: getEditNavLink
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function getEditNavLink(isOnTop: boolean, isPublishingNav:
        boolean, onClickCallback: (e: MouseEvent<HTMLElement>) => void,
        withIcon?: boolean)
      parameters:
        - id: isOnTop
          type:
            - boolean
          description: ''
        - id: isPublishingNav
          type:
            - boolean
          description: ''
        - id: onClickCallback
          type:
            - '(e: MouseEvent<HTMLElement>) => void'
          description: ''
        - id: withIcon
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - INavLink
  - uid: '@ms/sp-pages.EditNav.render'
    name: render
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - ReactElement<__type>
