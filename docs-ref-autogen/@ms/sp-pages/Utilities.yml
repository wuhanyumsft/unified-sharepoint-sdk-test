### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-pages.Utilities'
    name: Utilities
    fullName: Utilities
    children:
      - '@ms/sp-pages.Utilities.absolutizeUrl'
      - '@ms/sp-pages.Utilities.addLinkToNav'
      - '@ms/sp-pages.Utilities.alertScreenreader'
      - '@ms/sp-pages.Utilities.baseUrl'
      - '@ms/sp-pages.Utilities.checkShouldAddNodeToQuickLaunch'
      - '@ms/sp-pages.Utilities.createNewPageStub'
      - '@ms/sp-pages.Utilities.createPopStateEvent'
      - '@ms/sp-pages.Utilities.domainUrl'
      - '@ms/sp-pages.Utilities.encodeAndSanitizeURIComponent'
      - '@ms/sp-pages.Utilities.ensureConditionAsync'
      - '@ms/sp-pages.Utilities.errorFilter'
      - '@ms/sp-pages.Utilities.getStatusMessage'
      - '@ms/sp-pages.Utilities.getUrlParam'
      - '@ms/sp-pages.Utilities.hasPageBeenPublished'
      - '@ms/sp-pages.Utilities.isCommSite'
      - '@ms/sp-pages.Utilities.isEmbedded'
      - '@ms/sp-pages.Utilities.isFirstPagePublish'
      - '@ms/sp-pages.Utilities.isIE11'
      - '@ms/sp-pages.Utilities.isLatestSearchBoxFlighted'
      - '@ms/sp-pages.Utilities.isLinkInNav'
      - '@ms/sp-pages.Utilities.isMobileBrowser'
      - '@ms/sp-pages.Utilities.isMobileWebView'
      - '@ms/sp-pages.Utilities.isNewPage'
      - '@ms/sp-pages.Utilities.isPageOnVersion1'
      - '@ms/sp-pages.Utilities.isRelativeUrl'
      - '@ms/sp-pages.Utilities.isResponseSuccessful'
      - '@ms/sp-pages.Utilities.isRTL'
      - '@ms/sp-pages.Utilities.isSaveResponseSuccessful'
      - '@ms/sp-pages.Utilities.isTeamsWebView'
      - '@ms/sp-pages.Utilities.isWebViewHosted'
      - '@ms/sp-pages.Utilities.isXSite'
      - '@ms/sp-pages.Utilities.loadTheme'
      - '@ms/sp-pages.Utilities.logUserEngagementForPage'
      - '@ms/sp-pages.Utilities.manifestPreloads'
      - '@ms/sp-pages.Utilities.navigatedToArticlePage'
      - '@ms/sp-pages.Utilities.pageContext'
      - '@ms/sp-pages.Utilities.parseUrl'
      - '@ms/sp-pages.Utilities.preloadedData'
      - '@ms/sp-pages.Utilities.promoteNativeApps'
      - '@ms/sp-pages.Utilities.pushMode'
      - '@ms/sp-pages.Utilities.pushUrl'
      - '@ms/sp-pages.Utilities.raisePageLayoutChangedEvent'
      - '@ms/sp-pages.Utilities.raisePageNavigatedEvent'
      - '@ms/sp-pages.Utilities.relativizeUrl'
      - '@ms/sp-pages.Utilities.removeQueryString'
      - '@ms/sp-pages.Utilities.right'
      - '@ms/sp-pages.Utilities.searchIsEnabled'
      - '@ms/sp-pages.Utilities.sendWebViewHostMessage'
      - '@ms/sp-pages.Utilities.setCustomTitleRegion'
      - '@ms/sp-pages.Utilities.shell'
      - '@ms/sp-pages.Utilities.spPageContextInfo'
      - '@ms/sp-pages.Utilities.suiteNavConfiguration'
      - '@ms/sp-pages.Utilities.transitionToNewPage'
      - '@ms/sp-pages.Utilities.url'
      - '@ms/sp-pages.Utilities.userWebPermissions'
      - '@ms/sp-pages.Utilities.webRelativize'
      - '@ms/sp-pages.Utilities.xSiteKey'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-pages'
  - uid: '@ms/sp-pages.Utilities.absolutizeUrl'
    name: absolutizeUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function absolutizeUrl(url: string, noDecode: boolean)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: noDecode
          type:
            - boolean
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.addLinkToNav'
    name: addLinkToNav
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function addLinkToNav(navItems: INavLink[])'
      parameters:
        - id: navItems
          type:
            - 'INavLink[]'
          description: ''
  - uid: '@ms/sp-pages.Utilities.alertScreenreader'
    name: alertScreenreader
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function alertScreenreader(template: string, interval: string,
        count: number)
      parameters:
        - id: template
          type:
            - string
          description: ''
        - id: interval
          type:
            - string
          description: ''
        - id: count
          type:
            - number
          description: ''
  - uid: '@ms/sp-pages.Utilities.baseUrl'
    name: baseUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function baseUrl()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.checkShouldAddNodeToQuickLaunch'
    name: checkShouldAddNodeToQuickLaunch
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function checkShouldAddNodeToQuickLaunch(storesUpdated: string[])'
      parameters:
        - id: storesUpdated
          type:
            - 'string[]'
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.createNewPageStub'
    name: createNewPageStub
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function createNewPageStub(promotedState?: PromotedState,
        pageTemplateId?: string, canvasContent1?: string)
      parameters:
        - id: promotedState
          type:
            - PromotedState
          description: ''
          optional: true
        - id: pageTemplateId
          type:
            - string
          description: ''
          optional: true
        - id: canvasContent1
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - '@@ms/sp-pages.PageFieldData'
  - uid: '@ms/sp-pages.Utilities.createPopStateEvent'
    name: createPopStateEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createPopStateEvent<T>(state: T)'
      parameters:
        - id: state
          type:
            - T
          description: ''
      return:
        type:
          - PopStateEvent
  - uid: '@ms/sp-pages.Utilities.domainUrl'
    name: domainUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function domainUrl()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.encodeAndSanitizeURIComponent'
    name: encodeAndSanitizeURIComponent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function encodeAndSanitizeURIComponent(uriComponent: string)'
      parameters:
        - id: uriComponent
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.ensureConditionAsync'
    name: ensureConditionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: function to return a promise and loop until a condition is met.
    syntax:
      content: >-
        static function ensureConditionAsync(condition: () => Boolean,
        failureTag: string, waitInterval: number, maxRetries: number)
      parameters:
        - id: condition
          type:
            - () => Boolean
          description: ''
        - id: failureTag
          type:
            - string
          description: ''
        - id: waitInterval
          type:
            - number
          description: ''
        - id: maxRetries
          type:
            - number
          description: ''
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-pages.Utilities.errorFilter'
    name: errorFilter
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function errorFilter(error: Error, qosMonitor: _QosMonitor)'
      parameters:
        - id: error
          type:
            - Error
          description: ''
        - id: qosMonitor
          type:
            - _QosMonitor
          description: ''
  - uid: '@ms/sp-pages.Utilities.getStatusMessage'
    name: getStatusMessage
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an error message from the Response object
    syntax:
      content: 'static function getStatusMessage(response: Response)'
      parameters:
        - id: response
          type:
            - Response
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.getUrlParam'
    name: getUrlParam
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getUrlParam(param: string)'
      parameters:
        - id: param
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.hasPageBeenPublished'
    name: hasPageBeenPublished
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function hasPageBeenPublished()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isCommSite'
    name: isCommSite
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isCommSite()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isEmbedded'
    name: isEmbedded
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isEmbedded()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isFirstPagePublish'
    name: isFirstPagePublish
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isFirstPagePublish()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isIE11'
    name: isIE11
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isIE11()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isLatestSearchBoxFlighted'
    name: isLatestSearchBoxFlighted
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isLatestSearchBoxFlighted()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isLinkInNav'
    name: isLinkInNav
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isLinkInNav(name: string, url: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isMobileBrowser'
    name: isMobileBrowser
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isMobileBrowser()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isMobileWebView'
    name: isMobileWebView
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isMobileWebView()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isNewPage'
    name: isNewPage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isNewPage()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isPageOnVersion1'
    name: isPageOnVersion1
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isPageOnVersion1()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isRelativeUrl'
    name: isRelativeUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Tests if the url is a relative url
       @param {string} url
       @return {boolean}
    syntax:
      content: 'static function isRelativeUrl(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isResponseSuccessful'
    name: isResponseSuccessful
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isResponseSuccessful(responseCode: number)'
      parameters:
        - id: responseCode
          type:
            - number
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isRTL'
    name: isRTL
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the document direction
    syntax:
      content: static function isRTL()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isSaveResponseSuccessful'
    name: isSaveResponseSuccessful
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isSaveResponseSuccessful(responseCode: number)'
      parameters:
        - id: responseCode
          type:
            - number
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isTeamsWebView'
    name: isTeamsWebView
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isTeamsWebView()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isWebViewHosted'
    name: isWebViewHosted
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function isWebViewHosted()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.isXSite'
    name: isXSite
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isXSite(route: string)'
      parameters:
        - id: route
          type:
            - string
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.loadTheme'
    name: loadTheme
    fullName: loadTheme
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static () => void loadTheme
      return:
        type:
          - () => void
  - uid: '@ms/sp-pages.Utilities.logUserEngagementForPage'
    name: logUserEngagementForPage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function logUserEngagementForPage(page: PageFieldData,
        ifButtonClickMode: boolean, buttonName: string)
      parameters:
        - id: page
          type:
            - '@@ms/sp-pages.PageFieldData'
          description: ''
        - id: ifButtonClickMode
          type:
            - boolean
          description: ''
        - id: buttonName
          type:
            - string
          description: ''
  - uid: '@ms/sp-pages.Utilities.manifestPreloads'
    name: manifestPreloads
    fullName: manifestPreloads
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static _IPreloadedData manifestPreloads
      return:
        type:
          - _IPreloadedData
  - uid: '@ms/sp-pages.Utilities.navigatedToArticlePage'
    name: navigatedToArticlePage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function navigatedToArticlePage(storesUpdated?: string[])'
      parameters:
        - id: storesUpdated
          type:
            - 'string[]'
          description: ''
          optional: true
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.pageContext'
    name: pageContext
    fullName: pageContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static PageContext pageContext
      return:
        type:
          - PageContext
  - uid: '@ms/sp-pages.Utilities.parseUrl'
    name: parseUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function parseUrl(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - ParsedUrl
  - uid: '@ms/sp-pages.Utilities.preloadedData'
    name: preloadedData
    fullName: preloadedData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static _IPreloadedData preloadedData
      return:
        type:
          - _IPreloadedData
  - uid: '@ms/sp-pages.Utilities.promoteNativeApps'
    name: promoteNativeApps
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function promoteNativeApps()
      parameters: []
  - uid: '@ms/sp-pages.Utilities.pushMode'
    name: pushMode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function pushMode(mode: DisplayMode, replace: boolean, url:
        string)
      parameters:
        - id: mode
          type:
            - DisplayMode
          description: ''
        - id: replace
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
  - uid: '@ms/sp-pages.Utilities.pushUrl'
    name: pushUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function pushUrl(href: string, data: IHistoryStateData, replace:
        boolean, raisePopState: boolean)
      parameters:
        - id: href
          type:
            - string
          description: ''
        - id: data
          type:
            - '@@ms/sp-pages.IHistoryStateData'
          description: ''
        - id: replace
          type:
            - boolean
          description: ''
        - id: raisePopState
          type:
            - boolean
          description: ''
  - uid: '@ms/sp-pages.Utilities.raisePageLayoutChangedEvent'
    name: raisePageLayoutChangedEvent
    fullName: raisePageLayoutChangedEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static () => void raisePageLayoutChangedEvent
      return:
        type:
          - () => void
  - uid: '@ms/sp-pages.Utilities.raisePageNavigatedEvent'
    name: raisePageNavigatedEvent
    fullName: raisePageNavigatedEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static () => void raisePageNavigatedEvent
      return:
        type:
          - () => void
  - uid: '@ms/sp-pages.Utilities.relativizeUrl'
    name: relativizeUrl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function relativizeUrl(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.removeQueryString'
    name: removeQueryString
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function removeQueryString(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.right'
    name: right
    children: []
    type: method
    langs:
      - typeScript
    summary: Set css position right
    syntax:
      content: 'static function right(pixels: string)'
      parameters:
        - id: pixels
          type:
            - string
          description: ''
      return:
        type:
          - __type
  - uid: '@ms/sp-pages.Utilities.searchIsEnabled'
    name: searchIsEnabled
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function searchIsEnabled()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-pages.Utilities.sendWebViewHostMessage'
    name: sendWebViewHostMessage
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove when flight 903 (ClientSideWebPartGeneric1) is retired
    syntax:
      content: 'static function sendWebViewHostMessage(message: string)'
      parameters:
        - id: message
          type:
            - string
          description: ''
  - uid: '@ms/sp-pages.Utilities.setCustomTitleRegion'
    name: setCustomTitleRegion
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function setCustomTitleRegion(layoutWebPartDataMap: Map<string>)'
      parameters:
        - id: layoutWebPartDataMap
          type:
            - Map<string>
          description: ''
  - uid: '@ms/sp-pages.Utilities.shell'
    name: shell
    fullName: shell
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static IShell shell
      return:
        type:
          - IShell
  - uid: '@ms/sp-pages.Utilities.spPageContextInfo'
    name: spPageContextInfo
    fullName: spPageContextInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static any spPageContextInfo
      return:
        type:
          - any
  - uid: '@ms/sp-pages.Utilities.suiteNavConfiguration'
    name: suiteNavConfiguration
    fullName: suiteNavConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static () => ISuiteNavManagerConfiguration suiteNavConfiguration
      return:
        type:
          - () => ISuiteNavManagerConfiguration
  - uid: '@ms/sp-pages.Utilities.transitionToNewPage'
    name: transitionToNewPage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function transitionToNewPage(source?: string, promotedState?:
        PromotedState, pageTemplateId?: string, pageFieldData?: PageFieldData,
        canvasContent1?: string)
      parameters:
        - id: source
          type:
            - string
          description: ''
          optional: true
        - id: promotedState
          type:
            - PromotedState
          description: ''
          optional: true
        - id: pageTemplateId
          type:
            - string
          description: ''
          optional: true
        - id: pageFieldData
          type:
            - '@@ms/sp-pages.PageFieldData'
          description: ''
          optional: true
        - id: canvasContent1
          type:
            - string
          description: ''
          optional: true
  - uid: '@ms/sp-pages.Utilities.url'
    name: url
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function url(removeQueryString: boolean)'
      parameters:
        - id: removeQueryString
          type:
            - boolean
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.userWebPermissions'
    name: userWebPermissions
    fullName: userWebPermissions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static SPPermission userWebPermissions
      return:
        type:
          - SPPermission
  - uid: '@ms/sp-pages.Utilities.webRelativize'
    name: webRelativize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function webRelativize(path: string)'
      parameters:
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-pages.Utilities.xSiteKey'
    name: xSiteKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function xSiteKey(postfix: string)'
      parameters:
        - id: postfix
          type:
            - string
          description: ''
      return:
        type:
          - string
