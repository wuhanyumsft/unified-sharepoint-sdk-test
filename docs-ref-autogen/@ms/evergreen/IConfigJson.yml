### YamlMime:UniversalReference
items:
  - uid: '@ms/evergreen.IConfigJson'
    name: IConfigJson
    fullName: IConfigJson
    children:
      - '@ms/evergreen.IConfigJson.emailAccount'
      - '@ms/evergreen.IConfigJson.owners'
      - '@ms/evergreen.IConfigJson.repositories'
      - '@ms/evergreen.IConfigJson.vstsDefaultUrl'
      - '@ms/evergreen.IConfigJson.vstsProjectUrl'
      - '@ms/evergreen.IConfigJson.vstsRepositoryName'
      - '@ms/evergreen.IConfigJson.whitelistedEmailRegularExpressions'
      - '@ms/evergreen.IConfigJson.whitelistedFiles'
    langs:
      - typeScript
    type: interface
    summary: >-
      The structure of the "evergreen/config.json" file, representing
      Information

      about which dependencies should be consumed by the Evergreen system,

      as well as a list of contacts.
    package: '@ms/evergreen'
  - uid: '@ms/evergreen.IConfigJson.emailAccount'
    name: emailAccount
    fullName: emailAccount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The account which is performing Evergreen actions. Emails are sent from
      this account,

      and it is also listed in any generated changefiles.
    syntax:
      content: string emailAccount
      return:
        type:
          - string
  - uid: '@ms/evergreen.IConfigJson.owners'
    name: owners
    fullName: owners
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of e-mail addresses for owners of the current repository
    syntax:
      content: 'string[] owners'
      return:
        type:
          - 'string[]'
  - uid: '@ms/evergreen.IConfigJson.repositories'
    name: repositories
    fullName: repositories
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A mapping of repository names to information about that particular
      repository
    syntax:
      content: '[key: string]: IRepoConfiguration repositories'
      return:
        type:
          - '[key: string]: @@ms/evergreen.IRepoConfiguration'
  - uid: '@ms/evergreen.IConfigJson.vstsDefaultUrl'
    name: vstsDefaultUrl
    fullName: vstsDefaultUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visual Studio Server URL, pointed at the default collection
      e.g. "https://onedrive.visualstudio.com/DefaultCollection"
    syntax:
      content: string vstsDefaultUrl
      return:
        type:
          - string
  - uid: '@ms/evergreen.IConfigJson.vstsProjectUrl'
    name: vstsProjectUrl
    fullName: vstsProjectUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visual Studio Team URL
      e.g. "https://onedrive.visualstudio.com/Contoso"
    syntax:
      content: string vstsProjectUrl
      return:
        type:
          - string
  - uid: '@ms/evergreen.IConfigJson.vstsRepositoryName'
    name: vstsRepositoryName
    fullName: vstsRepositoryName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The name of the repository in Visual Studio
      e.g. "sp-client"
    syntax:
      content: string vstsRepositoryName
      return:
        type:
          - string
  - uid: '@ms/evergreen.IConfigJson.whitelistedEmailRegularExpressions'
    name: whitelistedEmailRegularExpressions
    fullName: whitelistedEmailRegularExpressions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of Regular Expressions describing e-mail addresses Evergreen is

      allowed to send notifications to. Evergreen combines email addresses in
      this file

      with those found in the CHANGELOG.json of dependencies which have been
      upgraded.

      This field allows you to filter those e-mails.
    syntax:
      content: function whitelistedEmailRegularExpressions
      return:
        type:
          - function
  - uid: '@ms/evergreen.IConfigJson.whitelistedFiles'
    name: whitelistedFiles
    fullName: whitelistedFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 'A list of files that should be added to the Git commit, if changed'
    syntax:
      content: function whitelistedFiles
      return:
        type:
          - function
