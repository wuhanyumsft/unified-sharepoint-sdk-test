### YamlMime:UniversalReference
items:
  - uid: '@ms/evergreen.Configuration'
    name: Configuration
    fullName: Configuration
    children:
      - '@ms/evergreen.Configuration.emailAccount'
      - '@ms/evergreen.Configuration.getAllEvergreenPackages'
      - '@ms/evergreen.Configuration.getPackageInformation'
      - '@ms/evergreen.Configuration.load'
      - '@ms/evergreen.Configuration.owners'
      - '@ms/evergreen.Configuration.repositories'
      - '@ms/evergreen.Configuration.vstsDefaultUrl'
      - '@ms/evergreen.Configuration.vstsProjectUrl'
      - '@ms/evergreen.Configuration.vstsRepositoryName'
      - '@ms/evergreen.Configuration.whitelistedEmails'
      - '@ms/evergreen.Configuration.whitelistedFiles'
    langs:
      - typeScript
    type: class
    summary: Utility class which can read the Evergreen configuration file
    package: '@ms/evergreen'
  - uid: '@ms/evergreen.Configuration.emailAccount'
    name: emailAccount
    fullName: emailAccount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string emailAccount
      return:
        type:
          - string
  - uid: '@ms/evergreen.Configuration.getAllEvergreenPackages'
    name: getAllEvergreenPackages
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of all Evergreen packages
    syntax:
      content: function getAllEvergreenPackages()
      parameters: []
      return:
        type:
          - Array<string>
  - uid: '@ms/evergreen.Configuration.getPackageInformation'
    name: getPackageInformation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPackageInformation(pkgName: string)'
      parameters:
        - id: pkgName
          type:
            - string
          description: ''
  - uid: '@ms/evergreen.Configuration.load'
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function load(config: RushConfiguration)'
      parameters:
        - id: config
          type:
            - RushConfiguration
          description: ''
      return:
        type:
          - '@@ms/evergreen.Configuration'
  - uid: '@ms/evergreen.Configuration.owners'
    name: owners
    fullName: owners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Array<string> owners
      return:
        type:
          - Array<string>
  - uid: '@ms/evergreen.Configuration.repositories'
    name: repositories
    fullName: repositories
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Map<string> repositories
      return:
        type:
          - Map<string>
  - uid: '@ms/evergreen.Configuration.vstsDefaultUrl'
    name: vstsDefaultUrl
    fullName: vstsDefaultUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string vstsDefaultUrl
      return:
        type:
          - string
  - uid: '@ms/evergreen.Configuration.vstsProjectUrl'
    name: vstsProjectUrl
    fullName: vstsProjectUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string vstsProjectUrl
      return:
        type:
          - string
  - uid: '@ms/evergreen.Configuration.vstsRepositoryName'
    name: vstsRepositoryName
    fullName: vstsRepositoryName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string vstsRepositoryName
      return:
        type:
          - string
  - uid: '@ms/evergreen.Configuration.whitelistedEmails'
    name: whitelistedEmails
    fullName: whitelistedEmails
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RegExp[] whitelistedEmails'
      return:
        type:
          - 'RegExp[]'
  - uid: '@ms/evergreen.Configuration.whitelistedFiles'
    name: whitelistedFiles
    fullName: whitelistedFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Array<string> whitelistedFiles
      return:
        type:
          - Array<string>
