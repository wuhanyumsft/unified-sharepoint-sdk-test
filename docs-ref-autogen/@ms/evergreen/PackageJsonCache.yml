### YamlMime:UniversalReference
items:
  - uid: '@ms/evergreen.PackageJsonCache'
    name: PackageJsonCache
    fullName: PackageJsonCache
    children:
      - '@ms/evergreen.PackageJsonCache.get'
      - '@ms/evergreen.PackageJsonCache.getVersion'
      - '@ms/evergreen.PackageJsonCache.has'
      - '@ms/evergreen.PackageJsonCache.keys'
      - '@ms/evergreen.PackageJsonCache.load'
      - '@ms/evergreen.PackageJsonCache.constructor'
    langs:
      - typeScript
    type: class
    summary: >-
      A class which caches Package JSON information recieved from an asychronous
      provider
    package: '@ms/evergreen'
  - uid: '@ms/evergreen.PackageJsonCache.get'
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Returns the package JSON for a package, if it has finished loading'
    syntax:
      content: 'function get(packageName: string)'
      parameters:
        - id: packageName
          type:
            - string
          description: ''
  - uid: '@ms/evergreen.PackageJsonCache.getVersion'
    name: getVersion
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the package JSON for a particular version of a package, if it has
      finished loading
    syntax:
      content: 'function getVersion(packageName: string, version: string)'
      parameters:
        - id: packageName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
  - uid: '@ms/evergreen.PackageJsonCache.has'
    name: has
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns true if the package JSON data has finished loading
    syntax:
      content: 'function has(packageName: string)'
      parameters:
        - id: packageName
          type:
            - string
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/evergreen.PackageJsonCache.keys'
    name: keys
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of packages which are cached
    syntax:
      content: function keys()
      parameters: []
  - uid: '@ms/evergreen.PackageJsonCache.load'
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: Loads a package's information asynchronously and caches it
    syntax:
      content: >-
        function load(packageName: string, onload?: (json:
        IAllPackageInformation) => Promise<IAllPackageInformation>)
      parameters:
        - id: packageName
          type:
            - string
          description: ''
        - id: onload
          type:
            - '(json: IAllPackageInformation) => Promise<IAllPackageInformation>'
          description: ''
          optional: true
      return:
        type:
          - Promise<IAllPackageInformation>
  - uid: '@ms/evergreen.PackageJsonCache.constructor'
    name: PackageJsonCache
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new PackageJsonCache(_provider: IPackageJsonProvider)'
      parameters:
        - id: _provider
          type:
            - '@@ms/evergreen.IPackageJsonProvider'
          description: ''
