### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-dataproviders.EventDataProvider'
    name: EventDataProvider
    fullName: EventDataProvider
    children:
      - '@ms/sp-dataproviders.EventDataProvider.createEventItem'
      - '@ms/sp-dataproviders.EventDataProvider.deleteEventItem'
      - '@ms/sp-dataproviders.EventDataProvider.constructor'
      - '@ms/sp-dataproviders.EventDataProvider.getAllCategories'
      - '@ms/sp-dataproviders.EventDataProvider.getInUsedCategories'
      - '@ms/sp-dataproviders.EventDataProvider.getPreDefinedCategories'
      - '@ms/sp-dataproviders.EventDataProvider.id'
      - '@ms/sp-dataproviders.EventDataProvider.options'
      - '@ms/sp-dataproviders.EventDataProvider.requestData'
      - '@ms/sp-dataproviders.EventDataProvider.requestEventItem'
      - '@ms/sp-dataproviders.EventDataProvider.title'
      - '@ms/sp-dataproviders.EventDataProvider.updateEventItem'
    langs:
      - typeScript
    type: class
    summary: |-
      Data provider to retrieve and manipulate SharePoint event list.
      TODO VSO #333107: Make Event Data Provider generic
    package: '@ms/sp-dataproviders'
  - uid: '@ms/sp-dataproviders.EventDataProvider.createEventItem'
    name: createEventItem
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createEventItem(listId: Guid, event: IEvent)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
        - id: event
          type:
            - '@@ms/sp-dataproviders.IEvent'
          description: ''
      return:
        type:
          - Promise<@@ms/sp-dataproviders.IEvent>
  - uid: '@ms/sp-dataproviders.EventDataProvider.deleteEventItem'
    name: deleteEventItem
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteEventItem(listId: Guid, eventId: string)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
        - id: eventId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-dataproviders.EventDataProvider.constructor'
    name: EventDataProvider
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventDataProvider(options: IDataProviderOptions)'
      parameters:
        - id: options
          type:
            - IDataProviderOptions
          description: ''
  - uid: '@ms/sp-dataproviders.EventDataProvider.getAllCategories'
    name: getAllCategories
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllCategories(listId: Guid)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
      return:
        type:
          - 'Promise<string[]>'
  - uid: '@ms/sp-dataproviders.EventDataProvider.getInUsedCategories'
    name: getInUsedCategories
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getInUsedCategories(listId: Guid)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
      return:
        type:
          - 'Promise<string[]>'
  - uid: '@ms/sp-dataproviders.EventDataProvider.getPreDefinedCategories'
    name: getPreDefinedCategories
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPreDefinedCategories(listId: Guid)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
      return:
        type:
          - Promise<@@ms/sp-dataproviders.ICategory>
  - uid: '@ms/sp-dataproviders.EventDataProvider.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string id
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.EventDataProvider.options'
    name: options
    fullName: options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: IDataProviderOptions options
      return:
        type:
          - IDataProviderOptions
  - uid: '@ms/sp-dataproviders.EventDataProvider.requestData'
    name: requestData
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function requestData(requestOptions: IListRequestOptions)'
      parameters:
        - id: requestOptions
          type:
            - '@@ms/sp-dataproviders.IListRequestOptions'
          description: ''
      return:
        type:
          - 'Promise<@@ms/sp-dataproviders.IEvent[]>'
  - uid: '@ms/sp-dataproviders.EventDataProvider.requestEventItem'
    name: requestEventItem
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function requestEventItem(listId: Guid, eventId: string)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
        - id: eventId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<@@ms/sp-dataproviders.IEvent>
  - uid: '@ms/sp-dataproviders.EventDataProvider.title'
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string title
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.EventDataProvider.updateEventItem'
    name: updateEventItem
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateEventItem(listId: Guid, eventId: string, event: IEvent)'
      parameters:
        - id: listId
          type:
            - Guid
          description: ''
        - id: eventId
          type:
            - string
          description: ''
        - id: event
          type:
            - '@@ms/sp-dataproviders.IEvent'
          description: ''
      return:
        type:
          - Promise<void>
