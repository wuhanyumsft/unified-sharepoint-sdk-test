### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-dataproviders.IEvent'
    name: IEvent
    fullName: IEvent
    children:
      - '@ms/sp-dataproviders.IEvent.attachments'
      - '@ms/sp-dataproviders.IEvent.attendees'
      - '@ms/sp-dataproviders.IEvent.bannerUrl'
      - '@ms/sp-dataproviders.IEvent.category'
      - '@ms/sp-dataproviders.IEvent.description'
      - '@ms/sp-dataproviders.IEvent.endTime'
      - '@ms/sp-dataproviders.IEvent.geolocation'
      - '@ms/sp-dataproviders.IEvent.id'
      - '@ms/sp-dataproviders.IEvent.isAllDayEvent'
      - '@ms/sp-dataproviders.IEvent.isRecurrence'
      - '@ms/sp-dataproviders.IEvent.linkName'
      - '@ms/sp-dataproviders.IEvent.linkUrl'
      - '@ms/sp-dataproviders.IEvent.location'
      - '@ms/sp-dataproviders.IEvent.nextPageQuery'
      - '@ms/sp-dataproviders.IEvent.permission'
      - '@ms/sp-dataproviders.IEvent.prevPageQuery'
      - '@ms/sp-dataproviders.IEvent.startTime'
      - '@ms/sp-dataproviders.IEvent.title'
    langs:
      - typeScript
    type: interface
    summary: The data model for the event item.
    package: '@ms/sp-dataproviders'
  - uid: '@ms/sp-dataproviders.IEvent.attachments'
    name: attachments
    fullName: attachments
    children: []
    langs:
      - typeScript
    type: property
    summary: Attachment files of event item.
    syntax:
      content: 'IAttachment[] attachments'
      return:
        type:
          - '@@ms/sp-dataproviders.IAttachment[]'
  - uid: '@ms/sp-dataproviders.IEvent.attendees'
    name: attendees
    fullName: attendees
    children: []
    langs:
      - typeScript
    type: property
    summary: People information of speakers.
    syntax:
      content: 'IEventPeople[] attendees'
      return:
        type:
          - '@@ms/sp-dataproviders.IEventPeople[]'
  - uid: '@ms/sp-dataproviders.IEvent.bannerUrl'
    name: bannerUrl
    fullName: bannerUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: URL for event banner image
    syntax:
      content: string bannerUrl
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.category'
    name: category
    fullName: category
    children: []
    langs:
      - typeScript
    type: property
    summary: Category that the event belongs to.
    syntax:
      content: string category
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: The description of the event.
    syntax:
      content: string description
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.endTime'
    name: endTime
    fullName: endTime
    children: []
    langs:
      - typeScript
    type: property
    summary: The end time of the event.
    syntax:
      content: Date endTime
      return:
        type:
          - Date
  - uid: '@ms/sp-dataproviders.IEvent.geolocation'
    name: geolocation
    fullName: geolocation
    children: []
    langs:
      - typeScript
    type: property
    summary: The geolocation of the event.
    syntax:
      content: IGeolocation geolocation
      return:
        type:
          - IGeolocation
  - uid: '@ms/sp-dataproviders.IEvent.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The ID of the event.
    syntax:
      content: string id
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.isAllDayEvent'
    name: isAllDayEvent
    fullName: isAllDayEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether event is all day event or not.
    syntax:
      content: boolean isAllDayEvent
      return:
        type:
          - boolean
  - uid: '@ms/sp-dataproviders.IEvent.isRecurrence'
    name: isRecurrence
    fullName: isRecurrence
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether event is recurrence event or not.
    syntax:
      content: boolean isRecurrence
      return:
        type:
          - boolean
  - uid: '@ms/sp-dataproviders.IEvent.linkName'
    name: linkName
    fullName: linkName
    children: []
    langs:
      - typeScript
    type: property
    summary: Descriptive name for link url in event link field.
    syntax:
      content: string linkName
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.linkUrl'
    name: linkUrl
    fullName: linkUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: URL for event link field.
    syntax:
      content: string linkUrl
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The location of the event.
      Example Room 62, Building 8, Foo street.
    syntax:
      content: string location
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.nextPageQuery'
    name: nextPageQuery
    fullName: nextPageQuery
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The query string to request the next page.

      TODO 330692 This is a workaround to pass to the web part. It should be a
      property of the list.
    syntax:
      content: string nextPageQuery
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.permission'
    name: permission
    fullName: permission
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This can be used to determine if the current user has a requested set of
      permissions for event list item.
    syntax:
      content: SPPermission permission
      return:
        type:
          - SPPermission
  - uid: '@ms/sp-dataproviders.IEvent.prevPageQuery'
    name: prevPageQuery
    fullName: prevPageQuery
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The query string to request the previous page.

      TODO 330692 This is a workaround to pass to the web part. It should be a
      property of the list.
    syntax:
      content: string prevPageQuery
      return:
        type:
          - string
  - uid: '@ms/sp-dataproviders.IEvent.startTime'
    name: startTime
    fullName: startTime
    children: []
    langs:
      - typeScript
    type: property
    summary: The start time of the event.
    syntax:
      content: Date startTime
      return:
        type:
          - Date
  - uid: '@ms/sp-dataproviders.IEvent.title'
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: The title of the event.
    syntax:
      content: string title
      return:
        type:
          - string
