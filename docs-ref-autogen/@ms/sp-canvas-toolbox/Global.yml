### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-canvas-toolbox.Global'
    package: '@ms/sp-canvas-toolbox'
    name: Global
    children:
      - '@ms/sp-canvas-toolbox.byAlphabet'
      - '@ms/sp-canvas-toolbox.categorizeGroups'
      - '@ms/sp-canvas-toolbox.CategoryViewComponent'
      - '@ms/sp-canvas-toolbox.createToolboxItem'
      - '@ms/sp-canvas-toolbox.dispatchEscapeOnSearchBox'
      - '@ms/sp-canvas-toolbox.EmptySearchResult'
      - '@ms/sp-canvas-toolbox.EmptySearchResultComponent'
      - '@ms/sp-canvas-toolbox.getFeaturedGroup'
      - '@ms/sp-canvas-toolbox.getMockItem'
      - '@ms/sp-canvas-toolbox.getSuggestedGroup'
      - '@ms/sp-canvas-toolbox.HomeViewComponent'
      - '@ms/sp-canvas-toolbox.isAnimationKillSwitchEnabled'
      - '@ms/sp-canvas-toolbox.renderGroups'
      - '@ms/sp-canvas-toolbox.renderItems'
      - '@ms/sp-canvas-toolbox.SearchViewComponent'
      - '@ms/sp-canvas-toolbox.SortViewComponent'
      - '@ms/sp-canvas-toolbox.switchToCategoryView'
      - '@ms/sp-canvas-toolbox.ToolboxComponentWithAnimation'
      - '@ms/sp-canvas-toolbox.ToolboxError'
      - '@ms/sp-canvas-toolbox.ToolboxFullBleed'
      - '@ms/sp-canvas-toolbox.ToolboxItem'
      - '@ms/sp-canvas-toolbox.ToolboxItem'
      - '@ms/sp-canvas-toolbox.ToolboxItem'
      - '@ms/sp-canvas-toolbox.ToolboxItemLarge'
      - '@ms/sp-canvas-toolbox.ToolboxLoading'
    type: package
    langs:
      - typeScript
  - uid: '@ms/sp-canvas-toolbox.byAlphabet'
    name: byAlphabet
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function byAlphabet(cultureName: string)'
      parameters:
        - id: cultureName
          type:
            - string
          description: ''
  - uid: '@ms/sp-canvas-toolbox.categorizeGroups'
    name: categorizeGroups
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function categorizeGroups(items: IToolboxItem[], sortFunction?: (itemA:
        IToolboxItem, itemB: IToolboxItem) => number)
      parameters:
        - id: items
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItem[]'
          description: ''
        - id: sortFunction
          type:
            - '(itemA: IToolboxItem, itemB: IToolboxItem) => number'
          description: ''
          optional: true
  - uid: '@ms/sp-canvas-toolbox.CategoryViewComponent'
    name: CategoryViewComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function CategoryViewComponent(props: IToolboxLargeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLargeProps'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.createToolboxItem'
    name: createToolboxItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createToolboxItem(position: IControlPosition)'
      parameters:
        - id: position
          type:
            - '@@ms/sp-canvas-toolbox.IControlPosition'
          description: ''
      return:
        type:
          - '@@ms/sp-canvas-toolbox.IToolboxItem'
  - uid: '@ms/sp-canvas-toolbox.dispatchEscapeOnSearchBox'
    name: dispatchEscapeOnSearchBox
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function dispatchEscapeOnSearchBox(props: IToolboxChromeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxChromeProps'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.EmptySearchResult'
    name: EmptySearchResult
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function EmptySearchResult()
      parameters: []
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.EmptySearchResultComponent'
    name: EmptySearchResultComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function EmptySearchResultComponent()
      parameters: []
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.getFeaturedGroup'
    name: getFeaturedGroup
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFeaturedGroup(items: IToolboxItem[])'
      parameters:
        - id: items
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItem[]'
          description: ''
      return:
        type:
          - '@@ms/sp-canvas-toolbox.IToolboxGroup'
  - uid: '@ms/sp-canvas-toolbox.getMockItem'
    name: getMockItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMockItem(groupId: string, itemId: string)'
      parameters:
        - id: groupId
          type:
            - string
          description: ''
        - id: itemId
          type:
            - string
          description: ''
      return:
        type:
          - '@@ms/sp-canvas-toolbox.IToolboxItem'
  - uid: '@ms/sp-canvas-toolbox.getSuggestedGroup'
    name: getSuggestedGroup
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSuggestedGroup(items: IToolboxItem[], sortFunction: (itemA:
        IToolboxItem, itemB: IToolboxItem) => number)
      parameters:
        - id: items
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItem[]'
          description: ''
        - id: sortFunction
          type:
            - '(itemA: IToolboxItem, itemB: IToolboxItem) => number'
          description: ''
      return:
        type:
          - '@@ms/sp-canvas-toolbox.IToolboxGroup'
  - uid: '@ms/sp-canvas-toolbox.HomeViewComponent'
    name: HomeViewComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function HomeViewComponent(props: IToolboxLargeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLargeProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.isAnimationKillSwitchEnabled'
    name: isAnimationKillSwitchEnabled
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAnimationKillSwitchEnabled()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-canvas-toolbox.renderGroups'
    name: renderGroups
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function renderGroups(props: IToolboxLargeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLargeProps'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.renderItems'
    name: renderItems
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function renderItems(items: IToolboxItem[], onClick: (control:
        ICanvasControl) => void)
      parameters:
        - id: items
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItem[]'
          description: ''
        - id: onClick
          type:
            - '(control: ICanvasControl) => void'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.SearchViewComponent'
    name: SearchViewComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function SearchViewComponent(props: IToolboxLargeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLargeProps'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.SortViewComponent'
    name: SortViewComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function SortViewComponent(props: IToolboxLargeProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLargeProps'
          description: ''
  - uid: '@ms/sp-canvas-toolbox.switchToCategoryView'
    name: switchToCategoryView
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function switchToCategoryView(controller: IToolboxActionManager,
        groupId: string, previousView: View)
      parameters:
        - id: controller
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxActionManager'
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: previousView
          type:
            - View
          description: ''
  - uid: '@ms/sp-canvas-toolbox.ToolboxComponentWithAnimation'
    name: ToolboxComponentWithAnimation
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxComponentWithAnimation<T>(ToolboxComponent: React)'
      parameters:
        - id: ToolboxComponent
          type:
            - React
          description: ''
  - uid: '@ms/sp-canvas-toolbox.ToolboxError'
    name: ToolboxError
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxError(props: IToolboxErrorProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxErrorProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxFullBleed'
    name: ToolboxFullBleed
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxFullBleed(props: IToolboxFullBleedProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxFullBleedProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxItem'
    name: ToolboxItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxItem(props: IToolboxItemProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItemProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxItem'
    name: ToolboxItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxItem(props: IToolboxItemProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItemProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxItem'
    name: ToolboxItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxItem(props: IToolboxItemBaseProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItemBaseProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxItemLarge'
    name: ToolboxItemLarge
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxItemLarge(props: IToolboxItemProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxItemProps'
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-canvas-toolbox.ToolboxLoading'
    name: ToolboxLoading
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ToolboxLoading(props: IToolboxLoadingProps)'
      parameters:
        - id: props
          type:
            - '@@ms/sp-canvas-toolbox.IToolboxLoadingProps'
          description: ''
      return:
        type:
          - Element
