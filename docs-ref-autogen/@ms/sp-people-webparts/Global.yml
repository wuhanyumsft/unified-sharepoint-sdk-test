### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-people-webparts.Global'
    package: '@ms/sp-people-webparts'
    name: Global
    children:
      - '@ms/sp-people-webparts.convertIPersonToIPersonaProps'
      - '@ms/sp-people-webparts.createPeopleInfo'
      - '@ms/sp-people-webparts.getEmailFromPerson'
      - '@ms/sp-people-webparts.getEmailFromPersonId'
      - '@ms/sp-people-webparts.getImageUrl'
      - '@ms/sp-people-webparts.getItemCountPerRow'
      - '@ms/sp-people-webparts.getPeoplePropertyPane'
      - '@ms/sp-people-webparts.getSvgFromSrc'
      - '@ms/sp-people-webparts.getTypeFromQuery'
      - '@ms/sp-people-webparts.isCachedInfo'
      - '@ms/sp-people-webparts.isLayoutChoiceEnabled'
      - '@ms/sp-people-webparts.isPeopleInfo'
      - '@ms/sp-people-webparts.isSamePerson'
      - '@ms/sp-people-webparts.SelectedItem'
      - '@ms/sp-people-webparts.SuggestionItem'
    type: package
    langs:
      - typeScript
  - uid: '@ms/sp-people-webparts.convertIPersonToIPersonaProps'
    name: convertIPersonToIPersonaProps
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function convertIPersonToIPersonaProps(person: IPerson)'
      parameters:
        - id: person
          type:
            - IPerson
          description: ''
      return:
        type:
          - IPersonaProps
  - uid: '@ms/sp-people-webparts.createPeopleInfo'
    name: createPeopleInfo
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createPeopleInfo(person: IPerson, layout: LayoutType)'
      parameters:
        - id: person
          type:
            - IPerson
          description: ''
        - id: layout
          type:
            - LayoutType
          description: ''
      return:
        type:
          - '@@ms/sp-people-webparts.IPeopleInfo'
  - uid: '@ms/sp-people-webparts.getEmailFromPerson'
    name: getEmailFromPerson
    children: []
    type: function
    langs:
      - typeScript
    summary: |-
      Get the email from person object.
      It will try to get it from `person.email`, otherwise from `person.id`.
    syntax:
      content: 'function getEmailFromPerson(person: IPeopleInfo)'
      parameters:
        - id: person
          type:
            - '@@ms/sp-people-webparts.IPeopleInfo'
          description: |
            The person object.
  - uid: '@ms/sp-people-webparts.getEmailFromPersonId'
    name: getEmailFromPersonId
    children: []
    type: function
    langs:
      - typeScript
    summary: Split the person ID to retrieve email as query string.
    syntax:
      content: 'function getEmailFromPersonId(personId: string)'
      parameters:
        - id: personId
          type:
            - string
          description: >
            The person ID, e.g., `i:0#.f|membership|somebody@microsoft.com`. It
            also compatibles with email.
      return:
        type:
          - string
  - uid: '@ms/sp-people-webparts.getImageUrl'
    name: getImageUrl
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageUrl(email: string, layout: LayoutType)'
      parameters:
        - id: email
          type:
            - string
          description: ''
        - id: layout
          type:
            - LayoutType
          description: ''
      return:
        type:
          - string
  - uid: '@ms/sp-people-webparts.getItemCountPerRow'
    name: getItemCountPerRow
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getItemCountPerRow(rowWidth: number)'
      parameters:
        - id: rowWidth
          type:
            - number
          description: ''
      return:
        type:
          - number
  - uid: '@ms/sp-people-webparts.getPeoplePropertyPane'
    name: getPeoplePropertyPane
    children: []
    type: function
    langs:
      - typeScript
    summary: Return the property pane configuration for people web part.
    syntax:
      content: 'function getPeoplePropertyPane(layout: LayoutType)'
      parameters:
        - id: layout
          type:
            - LayoutType
          description: |
            current layout type selected for people web part.
      return:
        type:
          - IPropertyPaneConfiguration
  - uid: '@ms/sp-people-webparts.getSvgFromSrc'
    name: getSvgFromSrc
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSvgFromSrc(imageSrc: string)'
      parameters:
        - id: imageSrc
          type:
            - string
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-people-webparts.getTypeFromQuery'
    name: getTypeFromQuery
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTypeFromQuery(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: ''
  - uid: '@ms/sp-people-webparts.isCachedInfo'
    name: isCachedInfo
    children: []
    type: function
    langs:
      - typeScript
    summary: Check if the persona information is got from cached web part properties.
    syntax:
      content: 'function isCachedInfo(person: IPeopleInfo)'
      parameters:
        - id: person
          type:
            - '@@ms/sp-people-webparts.IPeopleInfo'
          description: |
            The target person.
      return:
        type:
          - boolean
  - uid: '@ms/sp-people-webparts.isLayoutChoiceEnabled'
    name: isLayoutChoiceEnabled
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isLayoutChoiceEnabled()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@ms/sp-people-webparts.isPeopleInfo'
    name: isPeopleInfo
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isPeopleInfo(person: IPerson)'
      parameters:
        - id: person
          type:
            - IPerson
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-people-webparts.isSamePerson'
    name: isSamePerson
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isSamePerson(personA: IPerson, personB: IPerson)'
      parameters:
        - id: personA
          type:
            - IPerson
          description: ''
        - id: personB
          type:
            - IPerson
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-people-webparts.SelectedItem'
    name: SelectedItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function SelectedItem(props: IPickerItemProps<IPerson>)'
      parameters:
        - id: props
          type:
            - IPickerItemProps<IPerson>
          description: ''
      return:
        type:
          - Element
  - uid: '@ms/sp-people-webparts.SuggestionItem'
    name: SuggestionItem
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function SuggestionItem(person: IPerson)'
      parameters:
        - id: person
          type:
            - IPerson
          description: ''
      return:
        type:
          - Element
