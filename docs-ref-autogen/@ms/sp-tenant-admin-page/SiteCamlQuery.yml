### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-tenant-admin-page.SiteCamlQuery'
    name: SiteCamlQuery
    fullName: SiteCamlQuery
    children:
      - '@ms/sp-tenant-admin-page.SiteCamlQuery.generateCamlQueryString'
      - '@ms/sp-tenant-admin-page.SiteCamlQuery.getViewFieldsFromCaml'
      - '@ms/sp-tenant-admin-page.SiteCamlQuery.parseCamlQueryString'
      - '@ms/sp-tenant-admin-page.SiteCamlQuery.constructor'
    langs:
      - typeScript
    type: class
    summary: >-
      SiteCamlQuery is the class that used to generate CAML query based on
      SiteQueryConditions.

      It is implemented with Composite Pattern.
    package: '@ms/sp-tenant-admin-page'
  - uid: '@ms/sp-tenant-admin-page.SiteCamlQuery.generateCamlQueryString'
    name: generateCamlQueryString
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function generateCamlQueryString()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/sp-tenant-admin-page.SiteCamlQuery.getViewFieldsFromCaml'
    name: getViewFieldsFromCaml
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getViewFieldsFromCaml(camlQueryString: string)'
      parameters:
        - id: camlQueryString
          type:
            - string
          description: ''
  - uid: '@ms/sp-tenant-admin-page.SiteCamlQuery.parseCamlQueryString'
    name: parseCamlQueryString
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function parseCamlQueryString(camlQueryString: string)'
      parameters:
        - id: camlQueryString
          type:
            - string
          description: ''
      return:
        type:
          - '@@ms/sp-tenant-admin-page.ISiteQueryConditions'
  - uid: '@ms/sp-tenant-admin-page.SiteCamlQuery.constructor'
    name: SiteCamlQuery
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new SiteCamlQuery(condition?: ISiteQueryConditions, rowLimit?: number,
        viewFields?: string[], extraOptions?: ISiteCamlQueryExtraOptions)
      parameters:
        - id: condition
          type:
            - '@@ms/sp-tenant-admin-page.ISiteQueryConditions'
          description: >-
            is the query condition tht indicates sorting/filtering/grouping
            conditions.
          optional: true
        - id: rowLimit
          type:
            - number
          description: indicates how many rows will be returned with the API call.
          optional: true
        - id: viewFields
          type:
            - 'string[]'
          description: >-
            is an string array of FieldRefNames which indicates what fields of a
            site will
          optional: true
        - id: extraOptions
          type:
            - '@@ms/sp-tenant-admin-page.ISiteCamlQueryExtraOptions'
          description: >
            is extra options for the query, for example, to skip certain sites.

            be returned with the API Call. These viewFields should use the
            FieldRefName defined in site SPList.
          optional: true
