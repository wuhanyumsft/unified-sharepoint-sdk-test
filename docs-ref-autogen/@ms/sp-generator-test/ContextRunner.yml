### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-generator-test.ContextRunner'
    name: ContextRunner
    fullName: ContextRunner
    children:
      - '@ms/sp-generator-test.ContextRunner.constructor'
      - '@ms/sp-generator-test.ContextRunner.defaultPort'
      - '@ms/sp-generator-test.ContextRunner.runTests'
      - '@ms/sp-generator-test.ContextRunner.setup'
      - '@ms/sp-generator-test.ContextRunner.startVerdaccio'
      - '@ms/sp-generator-test.ContextRunner.tearDown'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-generator-test'
  - uid: '@ms/sp-generator-test.ContextRunner.constructor'
    name: ContextRunner
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ContextRunner(port?: number)'
      parameters:
        - id: port
          type:
            - number
          description: ''
          optional: true
  - uid: '@ms/sp-generator-test.ContextRunner.defaultPort'
    name: defaultPort
    fullName: defaultPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number defaultPort
      return:
        type:
          - number
  - uid: '@ms/sp-generator-test.ContextRunner.runTests'
    name: runTests
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function runTests()
      parameters: []
  - uid: '@ms/sp-generator-test.ContextRunner.setup'
    name: setup
    children: []
    type: method
    langs:
      - typeScript
    summary: Set Verdaccio and publish packages.
    syntax:
      content: function setup()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: '@ms/sp-generator-test.ContextRunner.startVerdaccio'
    name: startVerdaccio
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function startVerdaccio()
      parameters: []
  - uid: '@ms/sp-generator-test.ContextRunner.tearDown'
    name: tearDown
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function tearDown()
      parameters: []
