### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-telemetry.PageMetricsLogger'
    name: PageMetricsLogger
    fullName: PageMetricsLogger
    children:
      - '@ms/sp-telemetry.PageMetricsLogger.overwriteScenarioId'
      - '@ms/sp-telemetry.PageMetricsLogger.recordMetric'
      - '@ms/sp-telemetry.PageMetricsLogger.reset'
    langs:
      - typeScript
    type: class
    summary: >-
      The PageMetricsLogger provides the functionality to record occurences of
      scenarios on the page.

      The recorded data goes through the EngagementLogger pipeline, one record
      per page impression.
    package: '@ms/sp-telemetry'
  - uid: '@ms/sp-telemetry.PageMetricsLogger.overwriteScenarioId'
    name: overwriteScenarioId
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Use this API to update scenario id when it was not possible to determine
      at the initial stage of page loading
    syntax:
      content: 'static function overwriteScenarioId(scenarioId: string)'
      parameters:
        - id: scenarioId
          type:
            - string
          description: |
            Scenario id of the page
  - uid: '@ms/sp-telemetry.PageMetricsLogger.recordMetric'
    name: recordMetric
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Add metric to be collected for the page.
      Calling  API with same metric name will increase its count
    syntax:
      content: 'static function recordMetric(metricName: string, count: number)'
      parameters:
        - id: metricName
          type:
            - string
          description: Metric to be counted
        - id: count
          type:
            - number
          description: |
            Number of instances to count, default is 1
  - uid: '@ms/sp-telemetry.PageMetricsLogger.reset'
    name: reset
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reset Page Metric logger to initialize the counters.

      By default it is reset for the full page load, however when navigating
      from one page to another

      this API should be called to reset the context.
    syntax:
      content: 'static function reset(scenarioId: string, fullPageLoad: boolean)'
      parameters:
        - id: scenarioId
          type:
            - string
          description: Scenario Id of the current page
        - id: fullPageLoad
          type:
            - boolean
          description: |
            whether it is full page load or in page navigation
