### YamlMime:UniversalReference
items:
  - uid: '@ms/repo-toolbox.VSTSHelper'
    name: VSTSHelper
    fullName: VSTSHelper
    children:
      - '@ms/repo-toolbox.VSTSHelper.createBranch'
      - '@ms/repo-toolbox.VSTSHelper.DEFAULT_PROJECT'
      - '@ms/repo-toolbox.VSTSHelper.DEFAULT_RETRIES'
      - '@ms/repo-toolbox.VSTSHelper.DEFAULT_SERVER_URL'
      - '@ms/repo-toolbox.VSTSHelper.getArtifactContents'
      - '@ms/repo-toolbox.VSTSHelper.getBranchByName'
      - '@ms/repo-toolbox.VSTSHelper.getBranches'
      - '@ms/repo-toolbox.VSTSHelper.getBranchFile'
      - '@ms/repo-toolbox.VSTSHelper.getBuildArtifacts'
      - '@ms/repo-toolbox.VSTSHelper.getBuildDefinition'
      - '@ms/repo-toolbox.VSTSHelper.getCodePoliciesForRepoAndBranch'
      - '@ms/repo-toolbox.VSTSHelper.getCommitBySha'
      - '@ms/repo-toolbox.VSTSHelper.getCurrentVSTSBuildBranch'
      - '@ms/repo-toolbox.VSTSHelper.getProjectByName'
      - '@ms/repo-toolbox.VSTSHelper.getPullRequestById'
      - '@ms/repo-toolbox.VSTSHelper.getPullRequestIterations'
      - '@ms/repo-toolbox.VSTSHelper.getPullRequestThreads'
      - '@ms/repo-toolbox.VSTSHelper.getRepoByName'
      - '@ms/repo-toolbox.VSTSHelper.getSuccessfulBuilds'
      - '@ms/repo-toolbox.VSTSHelper.postPullRequestThread'
      - '@ms/repo-toolbox.VSTSHelper.project'
      - '@ms/repo-toolbox.VSTSHelper.pushChangesToBranch'
      - '@ms/repo-toolbox.VSTSHelper.serverUrl'
      - '@ms/repo-toolbox.VSTSHelper.setCodePoliciesForRepoAndBranch'
      - '@ms/repo-toolbox.VSTSHelper.setCodePolicyForRepoAndBranch'
      - '@ms/repo-toolbox.VSTSHelper.updatePullRequestThread'
      - '@ms/repo-toolbox.VSTSHelper.constructor'
      - '@ms/repo-toolbox.VSTSHelper.VSTS_PASSWORD_ENV_VAR_NAME'
      - '@ms/repo-toolbox.VSTSHelper.VSTS_USER_NAME_ENV_VAR_NAME'
    langs:
      - typeScript
    type: class
    summary: These are some helper methods for talking to VSTS.
    package: '@ms/repo-toolbox'
  - uid: '@ms/repo-toolbox.VSTSHelper.createBranch'
    name: createBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new branch of the specified branch of the specified repo. Note
      that because of an API restriction

      a ".branchname" file in the root of the repo will either be created or
      edited in the created branch.
    syntax:
      content: >-
        function createBranch(repo: GitRepository, sourceBranch: GitBranchStats,
        newBranchName: string)
      parameters:
        - id: repo
          type:
            - GitRepository
          description: ''
        - id: sourceBranch
          type:
            - GitBranchStats
          description: ''
        - id: newBranchName
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<GitRefUpdate[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.DEFAULT_PROJECT'
    name: DEFAULT_PROJECT
    fullName: DEFAULT_PROJECT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DEFAULT_PROJECT
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.DEFAULT_RETRIES'
    name: DEFAULT_RETRIES
    fullName: DEFAULT_RETRIES
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number DEFAULT_RETRIES
      return:
        type:
          - number
  - uid: '@ms/repo-toolbox.VSTSHelper.DEFAULT_SERVER_URL'
    name: DEFAULT_SERVER_URL
    fullName: DEFAULT_SERVER_URL
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DEFAULT_SERVER_URL
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.getArtifactContents'
    name: getArtifactContents
    children: []
    type: method
    langs:
      - typeScript
    summary: This function downloads a *.ZIP archive of the specified build artifact.
    syntax:
      content: >-
        function getArtifactContents(buildId: number, projectId: string,
        artifact: BuildArtifact)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: projectId
          type:
            - string
          description: ''
        - id: artifact
          type:
            - BuildArtifact
          description: ''
      return:
        type:
          - Promise<ReadableStream>
  - uid: '@ms/repo-toolbox.VSTSHelper.getBranchByName'
    name: getBranchByName
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a single branch by name.
    syntax:
      content: 'function getBranchByName(repo: GitRepository, branchName: string)'
      parameters:
        - id: repo
          type:
            - GitRepository
          description: ''
        - id: branchName
          type:
            - string
          description: ''
      return:
        type:
          - Promise<GitInterfaces>
  - uid: '@ms/repo-toolbox.VSTSHelper.getBranches'
    name: getBranches
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves all of the branches on the specified git repo.
    syntax:
      content: 'function getBranches(repo: GitRepository)'
      parameters:
        - id: repo
          type:
            - GitRepository
          description: ''
      return:
        type:
          - 'Promise<GitBranchStats[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.getBranchFile'
    name: getBranchFile
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets file metadata (and, optionally, the file itself) on the HEAD of the
      specified branch.
    syntax:
      content: >-
        function getBranchFile(repo: GitRepository, branch: GitBranchStats,
        filePath: string, downloadFile: boolean)
      parameters:
        - id: repo
          type:
            - GitRepository
          description: ''
        - id: branch
          type:
            - GitBranchStats
          description: ''
        - id: filePath
          type:
            - string
          description: ''
        - id: downloadFile
          type:
            - boolean
          description: ''
      return:
        type:
          - Promise<GitInterfaces>
  - uid: '@ms/repo-toolbox.VSTSHelper.getBuildArtifacts'
    name: getBuildArtifacts
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBuildArtifacts(buildId: number, projectId: string)'
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: projectId
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<BuildArtifact[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.getBuildDefinition'
    name: getBuildDefinition
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBuildDefinition(buildDefinitionId: number, projectId:
        string)
      parameters:
        - id: buildDefinitionId
          type:
            - number
          description: ''
        - id: projectId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<BuildDefinition>
  - uid: '@ms/repo-toolbox.VSTSHelper.getCodePoliciesForRepoAndBranch'
    name: getCodePoliciesForRepoAndBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the code policies that are applied specifically to the specified
      branch.

      Note that policies that the branch may inherit will not be returned.
    syntax:
      content: >-
        function getCodePoliciesForRepoAndBranch(repo: string, branchName:
        string)
      parameters:
        - id: repo
          type:
            - string
          description: ''
        - id: branchName
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<@@ms/repo-toolbox.ICodePolicy[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.getCommitBySha'
    name: getCommitBySha
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCommitBySha(repo: GitInterfaces, commitSha: string)'
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: commitSha
          type:
            - string
          description: ''
      return:
        type:
          - Promise<GitCommit>
  - uid: '@ms/repo-toolbox.VSTSHelper.getCurrentVSTSBuildBranch'
    name: getCurrentVSTSBuildBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCurrentVSTSBuildBranch()
      parameters: []
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.getProjectByName'
    name: getProjectByName
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProjectByName(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - Promise<CoreInterfaces>
  - uid: '@ms/repo-toolbox.VSTSHelper.getPullRequestById'
    name: getPullRequestById
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPullRequestById(pullRequestId: number)'
      parameters:
        - id: pullRequestId
          type:
            - number
          description: ''
      return:
        type:
          - Promise<GitPullRequest>
  - uid: '@ms/repo-toolbox.VSTSHelper.getPullRequestIterations'
    name: getPullRequestIterations
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPullRequestIterations(repo: GitInterfaces, pullRequestId:
        number)
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
      return:
        type:
          - 'Promise<GitPullRequestIteration[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.getPullRequestThreads'
    name: getPullRequestThreads
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPullRequestThreads(repo: GitInterfaces, pullRequestId:
        number)
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
      return:
        type:
          - 'Promise<GitPullRequestCommentThread[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.getRepoByName'
    name: getRepoByName
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a git repo by name on the server specified in the constructor.
    syntax:
      content: 'function getRepoByName(repoName: string)'
      parameters:
        - id: repoName
          type:
            - string
          description: ''
      return:
        type:
          - Promise<GitRepository>
  - uid: '@ms/repo-toolbox.VSTSHelper.getSuccessfulBuilds'
    name: getSuccessfulBuilds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSuccessfulBuilds(buildDefinitionId: number, projectId:
        string, maxCount?: number)
      parameters:
        - id: buildDefinitionId
          type:
            - number
          description: ''
        - id: projectId
          type:
            - string
          description: ''
        - id: maxCount
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<Build[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.postPullRequestThread'
    name: postPullRequestThread
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function postPullRequestThread(repo: GitInterfaces, pullRequestId:
        number, commentBody: string, status: CommentThreadStatus)
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: commentBody
          type:
            - string
          description: ''
        - id: status
          type:
            - CommentThreadStatus
          description: ''
      return:
        type:
          - Promise<GitPullRequestCommentThread>
  - uid: '@ms/repo-toolbox.VSTSHelper.project'
    name: project
    fullName: project
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string project
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.pushChangesToBranch'
    name: pushChangesToBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new commit with the specified commit message and push it to the
      specified branch.
    syntax:
      content: >-
        function pushChangesToBranch(repo: GitInterfaces, branch: GitInterfaces,
        changes: GitChange[], commitMessage: string)
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: branch
          type:
            - GitInterfaces
          description: ''
        - id: changes
          type:
            - 'GitChange[]'
          description: ''
        - id: commitMessage
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<GitRefUpdate[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.serverUrl'
    name: serverUrl
    fullName: serverUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string serverUrl
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.setCodePoliciesForRepoAndBranch'
    name: setCodePoliciesForRepoAndBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets code policies for a specific repo and branch. Note that the "scope"
      setting of each policy will be overridden

      to the specified repo and branch.
    syntax:
      content: >-
        function setCodePoliciesForRepoAndBranch(repo: string, branchName:
        string, codePolicies: ICodePolicy[])
      parameters:
        - id: repo
          type:
            - string
          description: ''
        - id: branchName
          type:
            - string
          description: ''
        - id: codePolicies
          type:
            - '@@ms/repo-toolbox.ICodePolicy[]'
          description: ''
      return:
        type:
          - 'Promise<@@ms/repo-toolbox.ICodePolicy[]>'
  - uid: '@ms/repo-toolbox.VSTSHelper.setCodePolicyForRepoAndBranch'
    name: setCodePolicyForRepoAndBranch
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets a code policy for a specific repo and branch. Note that the "scope"
      setting will be overridden

      to the specified repo and branch.
    syntax:
      content: >-
        function setCodePolicyForRepoAndBranch(repo: string, branchName: string,
        codePolicy: ICodePolicy)
      parameters:
        - id: repo
          type:
            - string
          description: ''
        - id: branchName
          type:
            - string
          description: ''
        - id: codePolicy
          type:
            - '@@ms/repo-toolbox.ICodePolicy'
          description: ''
      return:
        type:
          - Promise<@@ms/repo-toolbox.ICodePolicy>
  - uid: '@ms/repo-toolbox.VSTSHelper.updatePullRequestThread'
    name: updatePullRequestThread
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updatePullRequestThread(repo: GitInterfaces, pullRequestId:
        number, threadId: number, commentId: number, newBody: string,
        newThreadStatus?: CommentThreadStatus)
      parameters:
        - id: repo
          type:
            - GitInterfaces
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: newBody
          type:
            - string
          description: ''
        - id: newThreadStatus
          type:
            - CommentThreadStatus
          description: ''
          optional: true
      return:
        type:
          - Promise<Comment>
  - uid: '@ms/repo-toolbox.VSTSHelper.constructor'
    name: VSTSHelper
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new VSTSHelper(options?: IVSTSHelperOptions)'
      parameters:
        - id: options
          type:
            - '@@ms/repo-toolbox.IVSTSHelperOptions'
          description: ''
          optional: true
  - uid: '@ms/repo-toolbox.VSTSHelper.VSTS_PASSWORD_ENV_VAR_NAME'
    name: VSTS_PASSWORD_ENV_VAR_NAME
    fullName: VSTS_PASSWORD_ENV_VAR_NAME
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string VSTS_PASSWORD_ENV_VAR_NAME
      return:
        type:
          - string
  - uid: '@ms/repo-toolbox.VSTSHelper.VSTS_USER_NAME_ENV_VAR_NAME'
    name: VSTS_USER_NAME_ENV_VAR_NAME
    fullName: VSTS_USER_NAME_ENV_VAR_NAME
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string VSTS_USER_NAME_ENV_VAR_NAME
      return:
        type:
          - string
