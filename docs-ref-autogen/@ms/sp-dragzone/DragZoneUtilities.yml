### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-dragzone.DragZoneUtilities'
    name: DragZoneUtilities
    fullName: DragZoneUtilities
    children:
      - '@ms/sp-dragzone.DragZoneUtilities.elementArrayEquals'
      - '@ms/sp-dragzone.DragZoneUtilities.getDefaultIcon'
      - '@ms/sp-dragzone.DragZoneUtilities.getElementsNotInFirstArray'
      - '@ms/sp-dragzone.DragZoneUtilities.getElementsWithAttribute'
      - '@ms/sp-dragzone.DragZoneUtilities.hasAttributeValue'
      - '@ms/sp-dragzone.DragZoneUtilities.shouldInsertBeforeElement'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@ms/sp-dragzone'
  - uid: '@ms/sp-dragzone.DragZoneUtilities.elementArrayEquals'
    name: elementArrayEquals
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function elementArrayEquals(array1: Element[], array2: Element[])'
      parameters:
        - id: array1
          type:
            - 'Element[]'
          description: ''
        - id: array2
          type:
            - 'Element[]'
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-dragzone.DragZoneUtilities.getDefaultIcon'
    name: getDefaultIcon
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function getDefaultIcon()
      parameters: []
      return:
        type:
          - HTMLElement
  - uid: '@ms/sp-dragzone.DragZoneUtilities.getElementsNotInFirstArray'
    name: getElementsNotInFirstArray
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns all elements in the second array that are not in the first array
    syntax:
      content: >-
        static function getElementsNotInFirstArray(array1: Element[], array2:
        Element[])
      parameters:
        - id: array1
          type:
            - 'Element[]'
          description: array that contains all "existing" elements
        - id: array2
          type:
            - 'Element[]'
          description: >
            array containing "existing" elements and new ones that should be
            returned
  - uid: '@ms/sp-dragzone.DragZoneUtilities.getElementsWithAttribute'
    name: getElementsWithAttribute
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function getElementsWithAttribute(parent: Element, tag: string,
        value?: string)
      parameters:
        - id: parent
          type:
            - Element
          description: ''
        - id: tag
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
          optional: true
  - uid: '@ms/sp-dragzone.DragZoneUtilities.hasAttributeValue'
    name: hasAttributeValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function hasAttributeValue(elem: Element, attribute: string,
        value: string)
      parameters:
        - id: elem
          type:
            - Element
          description: ''
        - id: attribute
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
      return:
        type:
          - boolean
  - uid: '@ms/sp-dragzone.DragZoneUtilities.shouldInsertBeforeElement'
    name: shouldInsertBeforeElement
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function shouldInsertBeforeElement(element: Element, x: number,
        y: number, isHorizontalReorder: boolean)
      parameters:
        - id: element
          type:
            - Element
          description: ''
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
        - id: isHorizontalReorder
          type:
            - boolean
          description: ''
      return:
        type:
          - boolean
