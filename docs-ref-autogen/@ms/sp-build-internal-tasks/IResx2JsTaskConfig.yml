### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig'
    name: IResx2JsTaskConfig
    fullName: IResx2JsTaskConfig
    children:
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.jsonOutputDir'
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.shouldAddFileHash'
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.shouldParseComments'
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.srcDir'
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.stringsExternalBundleName'
      - '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.tsOutputDir'
    langs:
      - typeScript
    type: interface
    summary: Configuration options for the ResxToJson task
    package: '@ms/sp-build-internal-tasks'
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.jsonOutputDir'
    name: jsonOutputDir
    fullName: jsonOutputDir
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The directory to write the JSON files to. Note that the files will be
      written to this folder with

      the same directory structure as their respective RESX file. E.g.
      /src/foo/bar.resx would be written

      to /lib/foo/bar.resx.json.

      Default is this.buildConfig.libFolder
    syntax:
      content: string jsonOutputDir
      return:
        type:
          - string
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.shouldAddFileHash'
    name: shouldAddFileHash
    fullName: shouldAddFileHash
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, the JSON output will be wrapped in a single key whose value is
      the hash of the filepath.

      Default is true.
    syntax:
      content: boolean shouldAddFileHash
      return:
        type:
          - boolean
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.shouldParseComments'
    name: shouldParseComments
    fullName: shouldParseComments
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Should we require & parse comments in the resx file? If true, the output
      files will have the

      ".commented.json" extension.

      Default is true.
    syntax:
      content: boolean shouldParseComments
      return:
        type:
          - boolean
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.srcDir'
    name: srcDir
    fullName: srcDir
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The directory to look for resx files in. Default is
      this.buildConfig.srcFolder
    syntax:
      content: string srcDir
      return:
        type:
          - string
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.stringsExternalBundleName'
    name: stringsExternalBundleName
    fullName: stringsExternalBundleName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Module name used to reference the localized module at bundling time.
      Default is resx-strings
    syntax:
      content: string stringsExternalBundleName
      return:
        type:
          - string
  - uid: '@ms/sp-build-internal-tasks.IResx2JsTaskConfig.tsOutputDir'
    name: tsOutputDir
    fullName: tsOutputDir
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The directory to write TypeScript output to. If this is not defined, no
      TypeScript file is generated.

      Default is this.buildConfig.srcFolder
    syntax:
      content: string tsOutputDir
      return:
        type:
          - string
