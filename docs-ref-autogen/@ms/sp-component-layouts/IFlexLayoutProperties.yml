### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties'
    name: IFlexLayoutProperties
    fullName: IFlexLayoutProperties
    children:
      - '@ms/sp-component-layouts.IFlexLayoutProperties.ariaLabel'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.calculateItemHeight'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.className'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.isMobileView'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.itemClassName'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.items'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.itemSetting'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.onRenderItem'
      - '@ms/sp-component-layouts.IFlexLayoutProperties.width'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-component-layouts'
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.ariaLabel'
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      String read out for visually impaired people about description or
      instruction of the layout.
    syntax:
      content: string ariaLabel
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.calculateItemHeight'
    name: calculateItemHeight
    fullName: calculateItemHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback to calculate item height.
    syntax:
      content: '(itemWidth: number) => number calculateItemHeight'
      return:
        type:
          - '(itemWidth: number) => number'
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.className'
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override for container layout css class.
    syntax:
      content: string className
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.isMobileView'
    name: isMobileView
    fullName: isMobileView
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback to get mobile view condition.
    syntax:
      content: () => boolean isMobileView
      return:
        type:
          - () => boolean
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.itemClassName'
    name: itemClassName
    fullName: itemClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override for flex item layout css class.
    syntax:
      content: string itemClassName
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.items'
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: Items to render inside of layout.
    syntax:
      content: 'IFlexLayoutItem[] items'
      return:
        type:
          - '@@ms/sp-component-layouts.IFlexLayoutItem[]'
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.itemSetting'
    name: itemSetting
    fullName: itemSetting
    children: []
    langs:
      - typeScript
    type: property
    summary: Layout item setting to calculate width in runtime.
    syntax:
      content: IFlexLayoutItemSetting itemSetting
      return:
        type:
          - '@@ms/sp-component-layouts.IFlexLayoutItemSetting'
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.onRenderItem'
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback to render each item in layout.
    syntax:
      content: >-
        (item: IFlexLayoutItem, index: number, itemWidth: number) => ReactNode
        onRenderItem
      return:
        type:
          - >-
            (item: IFlexLayoutItem, index: number, itemWidth: number) =>
            ReactNode
  - uid: '@ms/sp-component-layouts.IFlexLayoutProperties.width'
    name: width
    fullName: width
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Layout width, passed by BaseCollectionWebPart.'
    syntax:
      content: number width
      return:
        type:
          - number
