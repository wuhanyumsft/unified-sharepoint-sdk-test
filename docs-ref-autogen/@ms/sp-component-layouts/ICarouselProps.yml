### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-component-layouts.ICarouselProps'
    name: ICarouselProps
    fullName: ICarouselProps
    children:
      - '@ms/sp-component-layouts.ICarouselProps.edit'
      - '@ms/sp-component-layouts.ICarouselProps.items'
      - '@ms/sp-component-layouts.ICarouselProps.onAfterChange'
      - '@ms/sp-component-layouts.ICarouselProps.onRenderItem'
      - '@ms/sp-component-layouts.ICarouselProps.settings'
      - '@ms/sp-component-layouts.ICarouselProps.strings'
      - '@ms/sp-component-layouts.ICarouselProps.width'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: '@ms/sp-component-layouts'
  - uid: '@ms/sp-component-layouts.ICarouselProps.edit'
    name: edit
    fullName: edit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean edit
      return:
        type:
          - boolean
  - uid: '@ms/sp-component-layouts.ICarouselProps.items'
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'IDisplayItemProps[] items'
      return:
        type:
          - '@@ms/sp-component-layouts.IDisplayItemProps[]'
  - uid: '@ms/sp-component-layouts.ICarouselProps.onAfterChange'
    name: onAfterChange
    fullName: onAfterChange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(currentSlide: number) => void onAfterChange'
      return:
        type:
          - '(currentSlide: number) => void'
  - uid: '@ms/sp-component-layouts.ICarouselProps.onRenderItem'
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        (itemProps: IDisplayItemProps, index: number, width: number,
        itemRowCount: number) => ReactNode onRenderItem
      return:
        type:
          - >-
            (itemProps: IDisplayItemProps, index: number, width: number,
            itemRowCount: number) => ReactNode
  - uid: '@ms/sp-component-layouts.ICarouselProps.settings'
    name: settings
    fullName: settings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ICarouselSettings settings
      return:
        type:
          - '@@ms/sp-component-layouts.ICarouselSettings'
  - uid: '@ms/sp-component-layouts.ICarouselProps.strings'
    name: strings
    fullName: strings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ICarouselStrings strings
      return:
        type:
          - '@@ms/sp-component-layouts.ICarouselStrings'
  - uid: '@ms/sp-component-layouts.ICarouselProps.width'
    name: width
    fullName: width
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number width
      return:
        type:
          - number
