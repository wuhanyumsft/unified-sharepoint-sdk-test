### YamlMime:UniversalReference
items:
  - uid: '@ms/sp-component-layouts.ICompactCardItem'
    name: ICompactCardItem
    fullName: ICompactCardItem
    children:
      - '@ms/sp-component-layouts.ICompactCardItem.backupImageUrl'
      - '@ms/sp-component-layouts.ICompactCardItem.className'
      - '@ms/sp-component-layouts.ICompactCardItem.forceImageSize'
      - '@ms/sp-component-layouts.ICompactCardItem.href'
      - '@ms/sp-component-layouts.ICompactCardItem.iconColor'
      - '@ms/sp-component-layouts.ICompactCardItem.iconName'
      - '@ms/sp-component-layouts.ICompactCardItem.imageAlt'
      - '@ms/sp-component-layouts.ICompactCardItem.imageUrl'
      - '@ms/sp-component-layouts.ICompactCardItem.isDraggable'
      - '@ms/sp-component-layouts.ICompactCardItem.isFetching'
      - '@ms/sp-component-layouts.ICompactCardItem.key'
      - '@ms/sp-component-layouts.ICompactCardItem.target'
      - '@ms/sp-component-layouts.ICompactCardItem.text'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@ms/sp-component-layouts'
  - uid: '@ms/sp-component-layouts.ICompactCardItem.backupImageUrl'
    name: backupImageUrl
    fullName: backupImageUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The backup image url which will be fallback to while primary image url
      load failure.
    syntax:
      content: string backupImageUrl
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.className'
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Class name of compact card item.
    syntax:
      content: string className
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.forceImageSize'
    name: forceImageSize
    fullName: forceImageSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified, the image displayed in the image box will have a fixed size.

      It doesn't change the size of the image wrapper, only the rendered image
      itself.
    syntax:
      content: number forceImageSize
      return:
        type:
          - number
  - uid: '@ms/sp-component-layouts.ICompactCardItem.href'
    name: href
    fullName: href
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The link url for the item to trigger.
      If provided, the item will be wrapped by an anchor and
      the item will behave like a link.
    syntax:
      content: string href
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.iconColor'
    name: iconColor
    fullName: iconColor
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The color of the icon, will be applied to the icon if iconName is
      specified.
    syntax:
      content: string iconColor
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.iconName'
    name: iconName
    fullName: iconName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Name of Icon. If this property has value, it will always show icon.'
    syntax:
      content: IconName iconName
      return:
        type:
          - IconName
  - uid: '@ms/sp-component-layouts.ICompactCardItem.imageAlt'
    name: imageAlt
    fullName: imageAlt
    children: []
    langs:
      - typeScript
    type: property
    summary: Alt information for image.
    syntax:
      content: string imageAlt
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.imageUrl'
    name: imageUrl
    fullName: imageUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: The image Url of thumbnail in the card.
    syntax:
      content: string imageUrl
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.isDraggable'
    name: isDraggable
    fullName: isDraggable
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether current item is draggable.
    syntax:
      content: boolean isDraggable
      return:
        type:
          - boolean
  - uid: '@ms/sp-component-layouts.ICompactCardItem.isFetching'
    name: isFetching
    fullName: isFetching
    children: []
    langs:
      - typeScript
    type: property
    summary: whether it is fetching metadata.
    syntax:
      content: boolean isFetching
      return:
        type:
          - boolean
  - uid: '@ms/sp-component-layouts.ICompactCardItem.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The unique identifier for the item. It will be used to help react
      rendering items and

      avoid re-mount the unchanged element.
    syntax:
      content: Key key
      return:
        type:
          - Key
  - uid: '@ms/sp-component-layouts.ICompactCardItem.target'
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The target of the link.
      If both href and target are provided, when link is triggered,
      it will open the link in the specified target.
    syntax:
      content: string target
      return:
        type:
          - string
  - uid: '@ms/sp-component-layouts.ICompactCardItem.text'
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: Text shown in the card.
    syntax:
      content: string text
      return:
        type:
          - string
