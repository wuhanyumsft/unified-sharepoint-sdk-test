### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-loader.ComponentStore'
    name: ComponentStore
    fullName: ComponentStore
    children:
      - '@microsoft/sp-loader.ComponentStore.deleteComponent'
      - '@microsoft/sp-loader.ComponentStore.getComponentById'
      - '@microsoft/sp-loader.ComponentStore.instance'
      - '@microsoft/sp-loader.ComponentStore.storeComponent'
      - '@microsoft/sp-loader.ComponentStore.tryGetComponent'
      - '@microsoft/sp-loader.ComponentStore.tryGetComponentById'
    langs:
      - typeScript
    type: class
    summary: |-
      Stores component modules by id and version.
      Used by the component loader to retrieve already loaded components.
    package: '@microsoft/sp-loader'
  - uid: '@microsoft/sp-loader.ComponentStore.deleteComponent'
    name: deleteComponent
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Deletes a component from the store, if it exists.'
    syntax:
      content: 'function deleteComponent(id: string, version: string)'
      parameters:
        - id: id
          type:
            - string
          description: Component id
        - id: version
          type:
            - string
          description: |
            Component version
  - uid: '@microsoft/sp-loader.ComponentStore.getComponentById'
    name: getComponentById
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a promise of the component module by id.

      If a component is not found, throws an error.

      If there are too many components for the id, throws an error.


      Don't use this method, use getComponent() instead.

      This method is only used by the DeveloperToolsLoader for react and
      office-ui-fabric-react

      when those haven't been loaded yet, as the version might not be known at
      the time.
    syntax:
      content: 'function getComponentById<TModule>(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - Promise<TModule>
  - uid: '@microsoft/sp-loader.ComponentStore.instance'
    name: instance
    fullName: instance
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static ComponentStore instance
      return:
        type:
          - '@@microsoft/sp-loader.ComponentStore'
  - uid: '@microsoft/sp-loader.ComponentStore.storeComponent'
    name: storeComponent
    children: []
    type: method
    langs:
      - typeScript
    summary: Stores a component module.
    syntax:
      content: >-
        function storeComponent<TModule>(id: string, version: string,
        modulePromise: Promise<TModule>)
      parameters:
        - id: id
          type:
            - string
          description: Component id
        - id: version
          type:
            - string
          description: Component version
        - id: modulePromise
          type:
            - Promise<TModule>
          description: >
            Promise of the component module, as it might have been not fully
            loaded yet.
  - uid: '@microsoft/sp-loader.ComponentStore.tryGetComponent'
    name: tryGetComponent
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a promise of the component module by id and version.
      If the component is not found, returns undefined.
    syntax:
      content: 'function tryGetComponent<TModule>(id: string, version: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
  - uid: '@microsoft/sp-loader.ComponentStore.tryGetComponentById'
    name: tryGetComponentById
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a promise of the component module by id.

      If a component is not found, returns undefined.

      If there are too many components for the id, returns undefined.


      Don't use this method, use getComponent() instead.

      This method is only used by the DeveloperToolsLoader for react and
      office-ui-fabric-react

      when those haven't been loaded yet, as the version might not be known at
      the time.
    syntax:
      content: 'function tryGetComponentById<TModule>(id: string, shouldLog: boolean)'
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: shouldLog
          type:
            - boolean
          description: ''
