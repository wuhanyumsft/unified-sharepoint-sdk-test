### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-loader.MockSPComponentLoader'
    name: MockSPComponentLoader
    fullName: MockSPComponentLoader
    children:
      - '@microsoft/sp-loader.MockSPComponentLoader.loadComponent'
      - '@microsoft/sp-loader.MockSPComponentLoader.loadComponentById'
      - '@microsoft/sp-loader.MockSPComponentLoader.loadCss'
      - '@microsoft/sp-loader.MockSPComponentLoader.loadScript'
      - '@microsoft/sp-loader.MockSPComponentLoader.registerManifests'
      - '@microsoft/sp-loader.MockSPComponentLoader.startApplication'
      - '@microsoft/sp-loader.MockSPComponentLoader.tryGetManifestById'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@microsoft/sp-loader'
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.loadComponent'
    name: loadComponent
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function loadComponent<TComponent>(manifest:
        IClientSideComponentManifest)
      parameters:
        - id: manifest
          type:
            - IClientSideComponentManifest
          description: ''
      return:
        type:
          - Promise<TComponent>
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.loadComponentById'
    name: loadComponentById
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function loadComponentById<TComponent>(id: string, version?: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<TComponent>
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.loadCss'
    name: loadCss
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function loadCss(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.loadScript'
    name: loadScript
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function loadScript<TModule>(url: string, options?: ILoadScriptOptions)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - '@@microsoft/sp-loader.ILoadScriptOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<TModule>
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.registerManifests'
    name: registerManifests
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function registerManifests(manifests: IClientSideComponentManifest[])'
      parameters:
        - id: manifests
          type:
            - 'IClientSideComponentManifest[]'
          description: ''
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.startApplication'
    name: startApplication
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startApplication<TApplication>(applicationId: string,
        preloadedData: IPreloadedData)
      parameters:
        - id: applicationId
          type:
            - string
          description: ''
        - id: preloadedData
          type:
            - '@@microsoft/sp-loader.IPreloadedData'
          description: ''
      return:
        type:
          - Promise<TApplication>
  - uid: '@microsoft/sp-loader.MockSPComponentLoader.tryGetManifestById'
    name: tryGetManifestById
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tryGetManifestById(id: string, version?: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - IClientSideComponentManifest
