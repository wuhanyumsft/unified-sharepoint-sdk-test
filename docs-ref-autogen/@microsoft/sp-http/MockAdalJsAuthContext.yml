### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext'
    name: MockAdalJsAuthContext
    fullName: MockAdalJsAuthContext
    children:
      - '@microsoft/sp-http.MockAdalJsAuthContext.acquireToken'
      - '@microsoft/sp-http.MockAdalJsAuthContext.acquireTokenPopup'
      - '@microsoft/sp-http.MockAdalJsAuthContext.addOAuth2TokenToDictionary'
      - '@microsoft/sp-http.MockAdalJsAuthContext.clearCache'
      - '@microsoft/sp-http.MockAdalJsAuthContext.clearCacheForResource'
      - '@microsoft/sp-http.MockAdalJsAuthContext.config'
      - '@microsoft/sp-http.MockAdalJsAuthContext.error'
      - '@microsoft/sp-http.MockAdalJsAuthContext.FAKE_ID_TOKEN'
      - '@microsoft/sp-http.MockAdalJsAuthContext.forceAcquireTokenFailure'
      - '@microsoft/sp-http.MockAdalJsAuthContext.forceRedirectWithHashFailure'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getCachedToken'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getCachedUser'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getLoginError'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getRequestInfo'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getResourceForEndpoint'
      - '@microsoft/sp-http.MockAdalJsAuthContext.getUser'
      - '@microsoft/sp-http.MockAdalJsAuthContext.handleWindowCallback'
      - '@microsoft/sp-http.MockAdalJsAuthContext.info'
      - '@microsoft/sp-http.MockAdalJsAuthContext.instance'
      - '@microsoft/sp-http.MockAdalJsAuthContext.isCallback'
      - '@microsoft/sp-http.MockAdalJsAuthContext.log'
      - '@microsoft/sp-http.MockAdalJsAuthContext.login'
      - '@microsoft/sp-http.MockAdalJsAuthContext.loginInProgress'
      - '@microsoft/sp-http.MockAdalJsAuthContext.logOut'
      - '@microsoft/sp-http.MockAdalJsAuthContext.constructor'
      - '@microsoft/sp-http.MockAdalJsAuthContext.promptUser'
      - '@microsoft/sp-http.MockAdalJsAuthContext.registerCallback'
      - '@microsoft/sp-http.MockAdalJsAuthContext.saveTokenFromHash'
      - '@microsoft/sp-http.MockAdalJsAuthContext.verbose'
      - '@microsoft/sp-http.MockAdalJsAuthContext.warn'
    langs:
      - typeScript
    type: class
    summary: >-
      A mock implementation of Adal.js' Authentication Context, which is useful
      for testing the

      OAuth2TokenProvider class
    package: '@microsoft/sp-http'
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.acquireToken'
    name: acquireToken
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function acquireToken(resource: string, callback: (message: string,
        token: string) => void)
      parameters:
        - id: resource
          type:
            - string
          description: ''
        - id: callback
          type:
            - '(message: string, token: string) => void'
          description: ''
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.acquireTokenPopup'
    name: acquireTokenPopup
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function acquireTokenPopup(resource: string, extraQueryParameters:
        string, claims: string, callback: (message: string, token: string) =>
        void)
      parameters:
        - id: resource
          type:
            - string
          description: ''
        - id: extraQueryParameters
          type:
            - string
          description: ''
        - id: claims
          type:
            - string
          description: ''
        - id: callback
          type:
            - '(message: string, token: string) => void'
          description: ''
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.addOAuth2TokenToDictionary'
    name: addOAuth2TokenToDictionary
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allows a developer to set a token to be retrieved from the acquireToken
      function.
    syntax:
      content: 'function addOAuth2TokenToDictionary(resource: string, token: string)'
      parameters:
        - id: resource
          type:
            - string
          description: ''
        - id: token
          type:
            - string
          description: ''
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.clearCache'
    name: clearCache
    fullName: clearCache
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void clearCache
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.clearCacheForResource'
    name: clearCacheForResource
    fullName: clearCacheForResource
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void clearCacheForResource
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.config'
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Config config
      return:
        type:
          - Config
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.error'
    name: error
    fullName: error
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void error
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.FAKE_ID_TOKEN'
    name: FAKE_ID_TOKEN
    fullName: FAKE_ID_TOKEN
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string FAKE_ID_TOKEN
      return:
        type:
          - string
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.forceAcquireTokenFailure'
    name: forceAcquireTokenFailure
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allows a developer to prevent acquire token from retrieving a token, even
      if it exists in the

      token dictionary. This is useful for testing the promise logic responsible
      for calling

      acquireTokenPopup, which is called if acquireToken fails.
    syntax:
      content: function forceAcquireTokenFailure()
      parameters: []
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.forceRedirectWithHashFailure'
    name: forceRedirectWithHashFailure
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allows a developer to prevent the login popup from navigating to the
      redirect uri.

      This is useful for verifying that the login process will fail if the popup
      is navigated

      to the redirect uri with no id token.
    syntax:
      content: function forceRedirectWithHashFailure()
      parameters: []
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getCachedToken'
    name: getCachedToken
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCachedToken(resource: string)'
      parameters:
        - id: resource
          type:
            - string
          description: ''
      return:
        type:
          - string
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getCachedUser'
    name: getCachedUser
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCachedUser()
      parameters: []
      return:
        type:
          - User
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getLoginError'
    name: getLoginError
    fullName: getLoginError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => string getLoginError
      return:
        type:
          - () => string
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getRequestInfo'
    name: getRequestInfo
    fullName: getRequestInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => RequestInfo getRequestInfo
      return:
        type:
          - () => RequestInfo
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getResourceForEndpoint'
    name: getResourceForEndpoint
    fullName: getResourceForEndpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => string getResourceForEndpoint
      return:
        type:
          - () => string
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.getUser'
    name: getUser
    fullName: getUser
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void getUser
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.handleWindowCallback'
    name: handleWindowCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function handleWindowCallback()
      parameters: []
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.info'
    name: info
    fullName: info
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void info
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.instance'
    name: instance
    fullName: instance
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string instance
      return:
        type:
          - string
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.isCallback'
    name: isCallback
    fullName: isCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => boolean isCallback
      return:
        type:
          - () => boolean
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.log'
    name: log
    fullName: log
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void log
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.login'
    name: login
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function login()
      parameters: []
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.loginInProgress'
    name: loginInProgress
    fullName: loginInProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => boolean loginInProgress
      return:
        type:
          - () => boolean
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.logOut'
    name: logOut
    fullName: logOut
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void logOut
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.constructor'
    name: MockAdalJsAuthContext
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MockAdalJsAuthContext(config: IMockAdalJsAuthContextConfig)'
      parameters:
        - id: config
          type:
            - '@@microsoft/sp-http.IMockAdalJsAuthContextConfig'
          description: ''
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.promptUser'
    name: promptUser
    fullName: promptUser
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void promptUser
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.registerCallback'
    name: registerCallback
    fullName: registerCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void registerCallback
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.saveTokenFromHash'
    name: saveTokenFromHash
    fullName: saveTokenFromHash
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void saveTokenFromHash
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.verbose'
    name: verbose
    fullName: verbose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void verbose
      return:
        type:
          - () => void
  - uid: '@microsoft/sp-http.MockAdalJsAuthContext.warn'
    name: warn
    fullName: warn
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: () => void warn
      return:
        type:
          - () => void
