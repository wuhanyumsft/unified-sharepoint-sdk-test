### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library.IEventObserver'
    name: IEventObserver
    fullName: IEventObserver
    children:
      - '@microsoft/sp-core-library.IEventObserver.componentId'
      - '@microsoft/sp-core-library.IEventObserver.instanceId'
    langs:
      - typeScript
    type: interface
    summary: >-
      Used with the <xref:Event> system, this interface is implemented by
      components that

      can subscribe to events.
    extends:
      name: '@@microsoft/sp-core-library.IDisposable'
    source:
      path: events/IEventObserver.ts
      startLine: 16
      remote:
        path: spfx-core/sp-core-library/src\events/IEventObserver.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-core-library'
    remarks: >-
      IEventObserver is an abstraction of the key features that a component must
      have in order

      to subscribe to a SharePoint Framework event:  It must have instanceId and
      componentId

      information for diagnostics reporting, and it must have a way to notify
      the event system

      when the component is disposed, so that its handlers can be automatically
      removed.

      Other objects may implement this contract, as long as they meet these
      requirements.
  - uid: '@microsoft/sp-core-library.IEventObserver.componentId'
    name: componentId
    fullName: componentId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The component identifier, from the component''s manifest.'
    syntax:
      content: string componentId
      return:
        type:
          - string
    remarks: >-
      This will be used for diagnostic reporting, e.g. if the callback function
      has

      an uncaught exception
  - uid: '@microsoft/sp-core-library.IEventObserver.instanceId'
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: The instance identifier for the component.
    syntax:
      content: string instanceId
      return:
        type:
          - string
    remarks: >-
      This will be used for diagnostic reporting, e.g. if the callback function
      has

      an uncaught exception
