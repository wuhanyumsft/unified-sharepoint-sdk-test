### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library.UrlQueryParameterCollection'
    name: UrlQueryParameterCollection
    fullName: UrlQueryParameterCollection
    children:
      - '@microsoft/sp-core-library.UrlQueryParameterCollection.getValue'
      - '@microsoft/sp-core-library.UrlQueryParameterCollection.getValues'
      - '@microsoft/sp-core-library.UrlQueryParameterCollection.constructor'
    langs:
      - typeScript
    type: class
    summary: >-
      Class for storing and retrieving query parameters.

      The URL can be server-relative and it will parse empty/null strings.

      The query parameters must start with ? to indicate the first query
      parameter and

      use & for all subsequent parameters. The class also supports fragments.

      Edge cases behavior:

      Empty value (www.example.com/?test=) stores key and empty value

      No equals in queryParam (www.example.com/?test) stores key and undefined
      value

      Empty queryParam (www.example.com/?&debug=on) stores undefined key and
      value

      Query param with only equals (www.example.com/?=&debug=on stores empty
      string key and value
    package: '@microsoft/sp-core-library'
  - uid: '@microsoft/sp-core-library.UrlQueryParameterCollection.getValue'
    name: getValue
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the value of the first matching query parameter or undefined if
      the key doesn't exist.

      Examples: this._queryParameterList = [

      {key: TEST, value: done},

      {key: DEBUG, value: false},

      {key: TEST, value: notdone}]
        getValue('TEST') ---> 'done'
        getValue('debug')  ---> 'false'
        getValue('lost')  ---> undefined
    syntax:
      content: 'function getValue(param: string)'
      parameters:
        - id: param
          type:
            - string
          description: |
            the case insensitive key for the desired query parameter value.
  - uid: '@microsoft/sp-core-library.UrlQueryParameterCollection.getValues'
    name: getValues
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the values of all of the matching query parameters or undefined if
      the key doesn't exist.

      Examples: this._queryParameterList = [

      {key: TEST, value: done},

      {key: DEBUG, value: false},

      {key: TEST, value: notdone}]
        getValues('TEST') ---> ['done', 'notdone']
        getValues('debug')  ---> ['false']
        getValues('lost')  ---> undefined
    syntax:
      content: 'function getValues(param: string)'
      parameters:
        - id: param
          type:
            - string
          description: |
            the case insensitive key for the desired query parameter value.
  - uid: '@microsoft/sp-core-library.UrlQueryParameterCollection.constructor'
    name: UrlQueryParameterCollection
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new UrlQueryParameterCollection(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
