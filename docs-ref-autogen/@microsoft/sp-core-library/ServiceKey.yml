### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library.ServiceKey'
    name: ServiceKey
    fullName: ServiceKey<T>
    children:
      - '@microsoft/sp-core-library.ServiceKey.create'
      - '@microsoft/sp-core-library.ServiceKey.createCustom'
      - '@microsoft/sp-core-library.ServiceKey.defaultCreator'
      - '@microsoft/sp-core-library.ServiceKey.id'
      - '@microsoft/sp-core-library.ServiceKey.name'
    langs:
      - typeScript
    type: class
    summary: >-
      The ServiceKey is a lookup key that is used when calling
      <xref:ServiceScope.consume>

      to fetch a dependency.
    source:
      path: serviceScope/ServiceKey.ts
      startLine: 21
      remote:
        path: spfx-core/sp-core-library/src\serviceScope/ServiceKey.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-core-library'
    remarks: >-
      Every service key also provides a default implementation of the
      dependency, which will

      be automatically created in the root scope if the dependency is not
      found.  Providing a default

      implementation ensures that new dependencies can be safely introduced
      without inadvertently

      breaking components that are loaded by an older host that does not provide
      the new dependency.
  - uid: '@microsoft/sp-core-library.ServiceKey.create'
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Constructs a new ServiceKey whose default implementation will be a new
      instance of

      a TypeScript class that accepts the standard constructor parameter.
    syntax:
      content: 'static function create<TKey>(name: string, serviceClass: function)'
      parameters:
        - id: name
          type:
            - string
          description: >-
            A name such as "my-package.IMyService" which should be unique across
            packages.
        - id: serviceClass
          type:
            - function
          description: the TypeScript class that implements the service.
      return:
        type:
          - '@@microsoft/sp-core-library.ServiceKey<TKey>'
    remarks: >-
      If you want to specify custom constructor parameters, use
      <xref:ServiceKey.createCustom>

      instead.
  - uid: '@microsoft/sp-core-library.ServiceKey.createCustom'
    name: createCustom
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Constructs a new ServiceKey whose default implementation will be obtained
      by invoking the specified callback.
    syntax:
      content: >-
        static function createCustom<TKey>(name: string, defaultCreator:
        ServiceCreator<TKey>)
      parameters:
        - id: name
          type:
            - string
          description: >-
            A name such as "my-package.IMyService" which should be unique across
            packages.
        - id: defaultCreator
          type:
            - ServiceCreator<TKey>
          description: a callback that returns an object that implements the T interface
      return:
        type:
          - '@@microsoft/sp-core-library.ServiceKey<TKey>'
  - uid: '@microsoft/sp-core-library.ServiceKey.defaultCreator'
    name: defaultCreator
    fullName: defaultCreator
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback function that constructs the default instance of this service.
    syntax:
      content: 'public defaultCreator: ServiceCreator<T>'
      return:
        type:
          - ServiceCreator<T>
  - uid: '@microsoft/sp-core-library.ServiceKey.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: A unique identifier for this service.
    syntax:
      content: 'public id: string'
      return:
        type:
          - string
    remarks: >-
      The identifier is a currently generated by incrementing an integer
      counter; however

      this may change in the future.
  - uid: '@microsoft/sp-core-library.ServiceKey.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: The name of the service.
    syntax:
      content: 'public name: string'
      return:
        type:
          - string
    remarks: >-
      This name is used for logging and diagnostic purposes only.  To make it
      unique, the

      recommended convention is the package name, followed by a period, followed
      by the

      class or interface name.


      The system does not assume that this string is unique.  Instead, the
      <xref:ServiceKey.id>

      is used wherever a lookup key is needed.
