### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library.Version'
    name: Version
    fullName: Version
    children:
      - '@microsoft/sp-core-library.Version.compare'
      - '@microsoft/sp-core-library.Version.equals'
      - '@microsoft/sp-core-library.Version.greaterThan'
      - '@microsoft/sp-core-library.Version.isValid'
      - '@microsoft/sp-core-library.Version.lessThan'
      - '@microsoft/sp-core-library.Version.major'
      - '@microsoft/sp-core-library.Version.minor'
      - '@microsoft/sp-core-library.Version.parse'
      - '@microsoft/sp-core-library.Version.patch'
      - '@microsoft/sp-core-library.Version.revision'
      - '@microsoft/sp-core-library.Version.satisfies'
      - '@microsoft/sp-core-library.Version.toString'
      - '@microsoft/sp-core-library.Version.tryParse'
    langs:
      - typeScript
    type: class
    summary: 'Represents a version number with two, three, or four parts.'
    package: '@microsoft/sp-core-library'
  - uid: '@microsoft/sp-core-library.Version.compare'
    name: compare
    children: []
    type: method
    langs:
      - typeScript
    summary: Compares two Version objects to determine which version is newer.
    syntax:
      content: 'static function compare(v1: Version, v2: Version)'
      parameters:
        - id: v1
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The first version class for comparison
        - id: v2
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The second version class for comparison
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.equals'
    name: equals
    children: []
    type: method
    langs:
      - typeScript
    summary: Tests whether this version is equal to the input parameter.
    syntax:
      content: 'function equals(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.greaterThan'
    name: greaterThan
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tests whether this version is greater than (i.e. newer than) the input
      parameter.
    syntax:
      content: 'function greaterThan(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.isValid'
    name: isValid
    children: []
    type: method
    langs:
      - typeScript
    summary: Test whether a string is a valid version specifier.
    syntax:
      content: 'static function isValid(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: The version string
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.lessThan'
    name: lessThan
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tests whether this version is less than (i.e. older than) the input
      parameter.
    syntax:
      content: 'function lessThan(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.major'
    name: major
    fullName: major
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns the first component of the version string.
    syntax:
      content: number major
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.minor'
    name: minor
    fullName: minor
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns the second component of the version string.
    syntax:
      content: number minor
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.parse'
    name: parse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Constructs a new Version instance using the version string.  An exception
      is thrown

      if the string cannot be parsed.
    syntax:
      content: 'static function parse(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: A version string
      return:
        type:
          - '@@microsoft/sp-core-library.Version'
  - uid: '@microsoft/sp-core-library.Version.patch'
    name: patch
    fullName: patch
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The third number in the version string, or undefined if unspecified.'
    syntax:
      content: number patch
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.revision'
    name: revision
    fullName: revision
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The fourth number in the version string, or undefined if unspecified.'
    syntax:
      content: number revision
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.satisfies'
    name: satisfies
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tests whether this version satisfies the compatibility requirements of the
      input version,

      i.e. is backwards compatible.
    syntax:
      content: 'function satisfies(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.toString'
    name: toString
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a string representation of the version.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
  - uid: '@microsoft/sp-core-library.Version.tryParse'
    name: tryParse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Attempts to parse the input string to construct a new Version object.
      If the string cannot be parsed, then undefined is returned.
    syntax:
      content: 'static function tryParse(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: A version string
