### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library.Version'
    name: Version
    fullName: Version
    children:
      - '@microsoft/sp-core-library.Version.compare'
      - '@microsoft/sp-core-library.Version.equals'
      - '@microsoft/sp-core-library.Version.greaterThan'
      - '@microsoft/sp-core-library.Version.isValid'
      - '@microsoft/sp-core-library.Version.lessThan'
      - '@microsoft/sp-core-library.Version.major'
      - '@microsoft/sp-core-library.Version.minor'
      - '@microsoft/sp-core-library.Version.parse'
      - '@microsoft/sp-core-library.Version.patch'
      - '@microsoft/sp-core-library.Version.revision'
      - '@microsoft/sp-core-library.Version.satisfies'
      - '@microsoft/sp-core-library.Version.toString'
      - '@microsoft/sp-core-library.Version.tryParse'
    langs:
      - typeScript
    type: class
    summary: >
      This class represents versions that follow the string format of
      MAJOR.MINOR[.PATCH[.REVISION]]

      where MAJOR, MINOR, PATCH and REVISION are integers. PATCH and REVISION
      are optional.

      Leading zeros are allowed, but have no meaning in comparisons.

      Examples: 1.0, 1.0.0, 1.0.0.0, 1.01, 01.02.03, 001.002.003.004
    package: '@microsoft/sp-core-library'
  - uid: '@microsoft/sp-core-library.Version.compare'
    name: compare
    children: []
    type: method
    langs:
      - typeScript
    summary: Compares two Version classes
    syntax:
      content: 'static function compare(v1: Version, v2: Version)'
      parameters:
        - id: v1
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The first version class for comparison
        - id: v2
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The second version class for comparison
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.equals'
    name: equals
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks if this version is equal to the input parameter. Missing patch
      number is treated as zero.

      Examples:
         1.0.0 equals 1.0.0 -> true
         2.0.1 equals 2.0.0 -> false
         3.0   equals 3.0.0 -> true
         04.01 equals 4.1   -> true
    syntax:
      content: 'function equals(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.greaterThan'
    name: greaterThan
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks if this version is greater (i.e. newer) than the input parameter.
      Missing patch number is treated as zero

      Examples:
         1.0.0 greaterThan 0.0.9 -> true
         2.0   greaterThan 2.0.0 -> false
         3.0.1 greaterThan 3.0   -> true
    syntax:
      content: 'function greaterThan(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.isValid'
    name: isValid
    children: []
    type: method
    langs:
      - typeScript
    summary: Indicates whether a version string is valid
    syntax:
      content: 'static function isValid(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: The version string
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.lessThan'
    name: lessThan
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks if this version is less (i.e. older) than the input parameter.
      Missing patch number is treated as zero

      Examples:
         0.9.9 lessThan 1.0.0 -> true
         2.0   lessThan 2.0.0 -> false
         3.0   lessThan 3.0.1 -> true
         04.01 lessThan 4.1   -> false
    syntax:
      content: 'function lessThan(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.major'
    name: major
    fullName: major
    children: []
    langs:
      - typeScript
    type: property
    summary: The first number in the version string indicating the major version
    syntax:
      content: number major
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.minor'
    name: minor
    fullName: minor
    children: []
    langs:
      - typeScript
    type: property
    summary: The second number in the version string indicating the minor version
    syntax:
      content: number minor
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.parse'
    name: parse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Constructs a new Version instance using the version string. tryParse
      validates the input version string

      and throws error if it is invalid
    syntax:
      content: 'static function parse(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: A version string
      return:
        type:
          - '@@microsoft/sp-core-library.Version'
  - uid: '@microsoft/sp-core-library.Version.patch'
    name: patch
    fullName: patch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The thrid number in the version string indicating the patch number in a
      semantic version or the build number in

      a .NET System.Version class

      Set to undefined if the third number does not exist
    syntax:
      content: number patch
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.revision'
    name: revision
    fullName: revision
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The fourth number in the version string indicating the revision number
      Set to undefined if the fourth number does not exist
    syntax:
      content: number revision
      return:
        type:
          - number
  - uid: '@microsoft/sp-core-library.Version.satisfies'
    name: satisfies
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks if this version satisfies the input parameter, therefore it's
      backwards compatible.

      They have to share the same major version, and the input parameter must be
      an

      equal or more recent version.

      Examples:
         1.0.0 satisfies 1.0.0 -> true
         1.1.0 satisfies 1.0.0 -> true
         2.0.0 satisfies 1.0.0 -> false
         1.0.0 satisfies 1.1.0 -> false
    syntax:
      content: 'function satisfies(compareWith: Version)'
      parameters:
        - id: compareWith
          type:
            - '@@microsoft/sp-core-library.Version'
          description: The version to compare with
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-core-library.Version.toString'
    name: toString
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Object.prototype.toString override
      The version string in MAJOR.MINOR[.PATCH[.REVISION]]
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
  - uid: '@microsoft/sp-core-library.Version.tryParse'
    name: tryParse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tries to construct a new Version instance using the version string.
      Returns undefined if not successful.
    syntax:
      content: 'static function tryParse(versionString: string)'
      parameters:
        - id: versionString
          type:
            - string
          description: A version string
