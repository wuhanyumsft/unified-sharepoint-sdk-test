### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-application-base.ApplicationAccessor'
    name: ApplicationAccessor
    fullName: ApplicationAccessor
    children:
      - '@microsoft/sp-application-base.ApplicationAccessor.constructor'
      - '@microsoft/sp-application-base.ApplicationAccessor.navigatedEvent'
    langs:
      - typeScript
    type: class
    summary: Provides access to the client-side application that is currently running.
    package: '@microsoft/sp-application-base'
    remarks: >-
      The client-side application determines the user experience for an entire
      web page.

      (It is a client-side component with a manifest; however, the SharePoint
      Framework

      does not enable third parties to create their own client-side applications
      at this time.)

      Within a web page, at most one client-side application will be running at
      a time.

      Certain in-place navigation transitions can cause the application to be
      unloaded

      and replaced by a different application.


      The ApplicationAccessor class enables extensibility components such as
      extensions

      and web parts to interact with the currently running application.  It acts
      as

      a proxy for the real application object (the BaseApplication subclass), to
      ensure

      that extensibility components only rely on interactions that would be
      portable

      across all applications.
  - uid: '@microsoft/sp-application-base.ApplicationAccessor.constructor'
    name: ApplicationAccessor
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Constructs a new instance of the <xref:ApplicationAccessor> class.'
    syntax:
      content: 'new ApplicationAccessor(serviceScope: ServiceScope)'
      parameters:
        - id: serviceScope
          type:
            - ServiceScope
          description: ''
    remarks: >-
      Third parties should not call this constructor.  Instead, use the
      ApplicationAccessor

      instance from the component context, for example
      <xref:BaseApplicationCustomizer.context>.
  - uid: '@microsoft/sp-application-base.ApplicationAccessor.navigatedEvent'
    name: navigatedEvent
    fullName: navigatedEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An event that is fired when the application's top-level page context
      navigates

      to a new page.
    syntax:
      content: Event<EventArgs> navigatedEvent
      return:
        type:
          - Event<EventArgs>
    remarks: >-
      This event fires after the top-level
      <xref:%40microsoft%2Fsp-page-context%3APageContext> has navigated

      to a new page.
