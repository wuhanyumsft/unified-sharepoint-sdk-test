### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-application-base.BaseApplication'
    name: BaseApplication
    fullName: BaseApplication
    children:
      - '@microsoft/sp-application-base.BaseApplication.alias'
      - '@microsoft/sp-application-base.BaseApplication.constructor'
      - '@microsoft/sp-application-base.BaseApplication.dispose'
      - '@microsoft/sp-application-base.BaseApplication.getBrowserCompatibility'
      - '@microsoft/sp-application-base.BaseApplication.suiteNavConfiguration'
    langs:
      - typeScript
    type: class
    summary: >-
      This is the system base class for client-side applications.  It manages
      the overall

      life cycle of your application, and is the first entry point for your code
      to start

      executing when the page loads.  The two main events are onLoad() which
      occurs first,

      and onRender() which occurs after the application manager has initialized
      the environment

      and completed rendering the page chrome.
    extends:
      name: '@@microsoft/sp-application-base.BaseApplication'
    source:
      path: BaseApplication.ts
      startLine: 35
      remote:
        path: spfx-core/sp-application-base/src\BaseApplication.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-application-base'
  - uid: '@microsoft/sp-application-base.BaseApplication.alias'
    name: alias
    fullName: alias
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Overrides the IClientSideComponentManifest.alias value provided in the
      manifest.
    syntax:
      content: 'public alias: string'
      return:
        type:
          - string
  - uid: '@microsoft/sp-application-base.BaseApplication.constructor'
    name: BaseApplication
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new BaseApplication()
      parameters: []
  - uid: '@microsoft/sp-application-base.BaseApplication.dispose'
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      RESERVED FOR INTERNAL USAGE.
      Internal API to dispose the application.
      See onDispose for more details
    syntax:
      content: function dispose()
      parameters: []
  - uid: '@microsoft/sp-application-base.BaseApplication.getBrowserCompatibility'
    name: getBrowserCompatibility
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns browser compatibility information for the application.
    syntax:
      content: function getBrowserCompatibility()
      parameters: []
      return:
        type:
          - IBrowserCompatibility
    remarks: >-
      The SharePoint Framework tracks browser compatibility for the application
      and the framework.

      Taken together, this information will determine the experience for the end
      user.


      Implement this method to report the level of support that your application
      provides for the current web browser.

      Since the User Agent field is impersonated by various browsers, itâ€™s
      recommended for the implementation to test

      individual API features rather than trying to identify specific releases
      of browsers.
  - uid: '@microsoft/sp-application-base.BaseApplication.suiteNavConfiguration'
    name: suiteNavConfiguration
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This virtual function returns the default configuration and can be
      configured by applications

      when required.
    syntax:
      content: function suiteNavConfiguration()
      parameters: []
      return:
        type:
          - '@@microsoft/sp-application-base.ISuiteNavManagerConfiguration'
