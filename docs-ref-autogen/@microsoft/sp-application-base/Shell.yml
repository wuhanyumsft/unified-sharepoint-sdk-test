### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-application-base.Shell'
    name: Shell
    fullName: Shell
    children:
      - '@microsoft/sp-application-base.Shell.applicationCustomizerLoader'
      - '@microsoft/sp-application-base.Shell.environment'
      - '@microsoft/sp-application-base.Shell.getInstance'
      - '@microsoft/sp-application-base.Shell.httpClient'
      - '@microsoft/sp-application-base.Shell.manifestPreloads'
      - '@microsoft/sp-application-base.Shell.pageContext'
      - '@microsoft/sp-application-base.Shell.pageManager'
      - '@microsoft/sp-application-base.Shell.serviceScope'
      - '@microsoft/sp-application-base.Shell.spHttpClient'
      - '@microsoft/sp-application-base.Shell.start'
      - '@microsoft/sp-application-base.Shell.suiteNavManager'
    langs:
      - typeScript
    type: class
    summary: |-
      RESERVED FOR INTERNAL USAGE.  Applications interact with the shell via
      the IShell interface.
    source:
      path: shell/Shell.ts
      startLine: 122
      remote:
        path: spfx-core/sp-application-base/src\shell/Shell.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-application-base'
  - uid: '@microsoft/sp-application-base.Shell.applicationCustomizerLoader'
    name: applicationCustomizerLoader
    fullName: applicationCustomizerLoader
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ApplicationCustomizerLoader | undefined applicationCustomizerLoader
      return:
        type:
          - ApplicationCustomizerLoader | undefined
  - uid: '@microsoft/sp-application-base.Shell.environment'
    name: environment
    fullName: environment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Environment environment
      return:
        type:
          - Environment
  - uid: '@microsoft/sp-application-base.Shell.getInstance'
    name: getInstance
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function getInstance()
      parameters: []
      return:
        type:
          - '@@microsoft/sp-application-base.IShell'
  - uid: '@microsoft/sp-application-base.Shell.httpClient'
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HttpClient httpClient
      return:
        type:
          - HttpClient
  - uid: '@microsoft/sp-application-base.Shell.manifestPreloads'
    name: manifestPreloads
    fullName: manifestPreloads
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: IPreloadedData manifestPreloads
      return:
        type:
          - IPreloadedData
  - uid: '@microsoft/sp-application-base.Shell.pageContext'
    name: pageContext
    fullName: pageContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PageContext pageContext
      return:
        type:
          - PageContext
  - uid: '@microsoft/sp-application-base.Shell.pageManager'
    name: pageManager
    fullName: pageManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PageManager pageManager
      return:
        type:
          - PageManager
  - uid: '@microsoft/sp-application-base.Shell.serviceScope'
    name: serviceScope
    fullName: serviceScope
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ServiceScope serviceScope
      return:
        type:
          - ServiceScope
  - uid: '@microsoft/sp-application-base.Shell.spHttpClient'
    name: spHttpClient
    fullName: spHttpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: SPHttpClient spHttpClient
      return:
        type:
          - SPHttpClient
  - uid: '@microsoft/sp-application-base.Shell.start'
    name: start
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function start(module: IClientSideApplicationWrapper | BaseApplication,
        preloadedData: IPreloadedData)
      parameters:
        - id: module
          type:
            - IClientSideApplicationWrapper | BaseApplication
          description: ''
        - id: preloadedData
          type:
            - IPreloadedData
          description: ''
      return:
        type:
          - Promise<@@microsoft/sp-application-base.BaseApplication>
  - uid: '@microsoft/sp-application-base.Shell.suiteNavManager'
    name: suiteNavManager
    fullName: suiteNavManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ISuiteNavManager suiteNavManager
      return:
        type:
          - '@@microsoft/sp-application-base.ISuiteNavManager'
