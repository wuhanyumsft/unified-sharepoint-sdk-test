### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-build-core-tasks.DeployAzureStorageTask'
    name: DeployAzureStorageTask
    fullName: DeployAzureStorageTask
    children:
      - '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.constructor'
      - '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.executeTask'
      - '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.loadSchema'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @@microsoft/sp-build-core-tasks.DeployAzureStorageTask<@@microsoft/sp-build-core-tasks.IDeployAzureStorageTaskConfig>
    package: '@microsoft/sp-build-core-tasks'
  - uid: '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.constructor'
    name: DeployAzureStorageTask
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new DeployAzureStorageTask()
      parameters: []
  - uid: '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.executeTask'
    name: executeTask
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function executeTask(gulp: any, completeCallback: () => void)'
      parameters:
        - id: gulp
          type:
            - any
          description: ''
        - id: completeCallback
          type:
            - () => void
          description: ''
      return:
        type:
          - Promise<any>
  - uid: '@microsoft/sp-build-core-tasks.DeployAzureStorageTask.loadSchema'
    name: loadSchema
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function loadSchema()
      parameters: []
      return:
        type:
          - Object
