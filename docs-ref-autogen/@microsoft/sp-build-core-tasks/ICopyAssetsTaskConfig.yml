### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig'
    name: ICopyAssetsTaskConfig
    fullName: ICopyAssetsTaskConfig
    children:
      - '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.deployCdnPath'
      - >-
        @microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.excludeHashFromFileNames
      - '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.extsToIgnore'
      - >-
        @microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.localeInDirectoryName
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@microsoft/sp-build-core-tasks'
  - uid: '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.deployCdnPath'
    name: deployCdnPath
    fullName: deployCdnPath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Path to where assets should be staged for deployment to CDN during a
      production build
    syntax:
      content: string deployCdnPath
      return:
        type:
          - string
  - uid: >-
      @microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.excludeHashFromFileNames
    name: excludeHashFromFileNames
    fullName: excludeHashFromFileNames
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, production builds will no longer generate file names that have a
      hash. Defaults to false.
    syntax:
      content: boolean excludeHashFromFileNames
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.extsToIgnore'
    name: extsToIgnore
    fullName: extsToIgnore
    children: []
    langs:
      - typeScript
    type: property
    summary: Extensions of webpack-produced assets to ignore
    syntax:
      content: 'string[] extsToIgnore'
      return:
        type:
          - 'string[]'
  - uid: '@microsoft/sp-build-core-tasks.ICopyAssetsTaskConfig.localeInDirectoryName'
    name: localeInDirectoryName
    fullName: localeInDirectoryName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, production builds will place localized files in directories named
      according to the locale. For example
       an output file called "my-component.js" will be written to "<deployCdnPath>/my-component_en-us-<hash>.js" if this
       property is false and it will be written to "<deployCdnPath>/en-us/my-component-<hash>.js" if this property
       is true. Non-localized resources will be placed in the same directory regardless of whether this property is true
       or false. Defaults to false.
    syntax:
      content: boolean localeInDirectoryName
      return:
        type:
          - boolean
