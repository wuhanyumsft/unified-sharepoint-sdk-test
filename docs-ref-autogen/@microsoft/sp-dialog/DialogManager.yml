### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-dialog.DialogManager'
    name: DialogManager
    fullName: DialogManager
    children:
      - '@microsoft/sp-dialog.DialogManager.alert'
      - '@microsoft/sp-dialog.DialogManager.instance'
      - '@microsoft/sp-dialog.DialogManager.isShowingDialog'
      - '@microsoft/sp-dialog.DialogManager.prompt'
      - '@microsoft/sp-dialog.DialogManager.show'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@microsoft/sp-dialog'
  - uid: '@microsoft/sp-dialog.DialogManager.alert'
    name: alert
    children: []
    type: method
    langs:
      - typeScript
    summary: '{@inheritdoc Dialog.alert}'
    syntax:
      content: 'function alert(message: string, options?: IAlertOptions)'
      parameters:
        - id: message
          type:
            - string
          description: ''
        - id: options
          type:
            - '@@microsoft/sp-dialog.IAlertOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
  - uid: '@microsoft/sp-dialog.DialogManager.instance'
    name: instance
    fullName: instance
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Get the singleton instance of DialogManager. It looks for a singleton
      instance of DialogManagerConfiguration

      to initialize and throws if it is not found. The configuration instance is
      set on the page by the application.
    syntax:
      content: static DialogManager instance
      return:
        type:
          - '@@microsoft/sp-dialog.DialogManager'
  - uid: '@microsoft/sp-dialog.DialogManager.isShowingDialog'
    name: isShowingDialog
    fullName: isShowingDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: If the manager has an open dialog
    syntax:
      content: boolean isShowingDialog
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-dialog.DialogManager.prompt'
    name: prompt
    children: []
    type: method
    langs:
      - typeScript
    summary: '{@inheritdoc Dialog.prompt}'
    syntax:
      content: 'function prompt(message: string, options?: IPromptOptions)'
      parameters:
        - id: message
          type:
            - string
          description: ''
        - id: options
          type:
            - '@@microsoft/sp-dialog.IPromptOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<string>
  - uid: '@microsoft/sp-dialog.DialogManager.show'
    name: show
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a request to show a dialog. Requests are handled on FIFO basis.
    syntax:
      content: 'function show(dialog: BaseDialog, options?: IDialogShowOptions)'
      parameters:
        - id: dialog
          type:
            - '@@microsoft/sp-dialog.BaseDialog'
          description: The dialog to show
        - id: options
          type:
            - '@@microsoft/sp-dialog.IDialogShowOptions'
          description: >
            A callback that checks if the dialog still wants to be shown.
            Because there might be a delay

            until the request is approved, the caller might not want to show the
            dialog anymore by the time it's approved.

            This callback is called before showing the dialog and if returns
            true, the request is aborted.
          optional: true
      return:
        type:
          - Promise<void>
