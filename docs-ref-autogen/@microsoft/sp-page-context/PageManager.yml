### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-page-context.PageManager'
    name: PageManager
    fullName: PageManager
    children:
      - '@microsoft/sp-page-context.PageManager.navigateToPage'
      - '@microsoft/sp-page-context.PageManager.pageContext'
      - '@microsoft/sp-page-context.PageManager.constructor'
      - '@microsoft/sp-page-context.PageManager.serviceKey'
    langs:
      - typeScript
    type: class
    summary: >-
      The page context represents contextual information about the SharePoint
      page that

      is currently being viewed, such as its site URL, the client side
      application ID,

      the current user, etc.  The page context objects themselves represent key
      information

      that is needed e.g. to identify the site/web/list/listitem in a REST
      service call,

      but it is not a full cache with invalidation and change notifications.
    source:
      path: pageManager/PageManager.ts
      startLine: 21
      remote:
        path: spfx-core/sp-page-context/src\pageManager/PageManager.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-page-context'
  - uid: '@microsoft/sp-page-context.PageManager.navigateToPage'
    name: navigateToPage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This function fetches the Page Context's data for specified
      serverRelativePageUrl

      and re-initializes the Page Context with that data. The Session is also

      updated with a new randomly generated pageId. If the function is provided

      a cached IPageContextData, it will use that to fufill the request rather
      than

      communicating with the server.
    syntax:
      content: >-
        function navigateToPage(serverRelativePageUrl: string, options?:
        IPageContextData, legacyPageContext?: any)
      parameters:
        - id: serverRelativePageUrl
          type:
            - string
          description: |
            a SharePoint url that we want data from.
        - id: options
          type:
            - '@@microsoft/sp-page-context.IPageContextData'
          description: ''
          optional: true
        - id: legacyPageContext
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
  - uid: '@microsoft/sp-page-context.PageManager.pageContext'
    name: pageContext
    fullName: pageContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PageContext pageContext
      return:
        type:
          - '@@microsoft/sp-page-context.PageContext'
  - uid: '@microsoft/sp-page-context.PageManager.constructor'
    name: PageManager
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new PageManager(serviceScope: ServiceScope)'
      parameters:
        - id: serviceScope
          type:
            - ServiceScope
          description: ''
  - uid: '@microsoft/sp-page-context.PageManager.serviceKey'
    name: serviceKey
    fullName: serviceKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The service key for PageManager.
    syntax:
      content: "public static serviceKey: ServiceKey<PageManager> =  ServiceKey.create<PageManager>\r\n    ('sp-page-context:PageManager', PageManager)"
      return:
        type:
          - ServiceKey<@@microsoft/sp-page-context.PageManager>
