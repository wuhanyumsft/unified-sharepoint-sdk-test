### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-page-context.SPPermission'
    name: SPPermission
    fullName: SPPermission
    children:
      - '@microsoft/sp-page-context.SPPermission.addAndCustomizePages'
      - '@microsoft/sp-page-context.SPPermission.addDelPrivateWebParts'
      - '@microsoft/sp-page-context.SPPermission.addListItems'
      - '@microsoft/sp-page-context.SPPermission.applyStyleSheets'
      - '@microsoft/sp-page-context.SPPermission.applyThemeAndBorder'
      - '@microsoft/sp-page-context.SPPermission.approveItems'
      - '@microsoft/sp-page-context.SPPermission.browseDirectories'
      - '@microsoft/sp-page-context.SPPermission.browserUserInfo'
      - '@microsoft/sp-page-context.SPPermission.cancelCheckout'
      - '@microsoft/sp-page-context.SPPermission.createAlerts'
      - '@microsoft/sp-page-context.SPPermission.createGroups'
      - '@microsoft/sp-page-context.SPPermission.createSSCSite'
      - '@microsoft/sp-page-context.SPPermission.deleteListItems'
      - '@microsoft/sp-page-context.SPPermission.deleteVersions'
      - '@microsoft/sp-page-context.SPPermission.editListItems'
      - '@microsoft/sp-page-context.SPPermission.editMyUserInfo'
      - '@microsoft/sp-page-context.SPPermission.emptyMask'
      - '@microsoft/sp-page-context.SPPermission.enumeratePermissions'
      - '@microsoft/sp-page-context.SPPermission.fullMask'
      - '@microsoft/sp-page-context.SPPermission.hasAllPermissions'
      - '@microsoft/sp-page-context.SPPermission.hasAnyPermissions'
      - '@microsoft/sp-page-context.SPPermission.hasPermission'
      - '@microsoft/sp-page-context.SPPermission.layoutsPage'
      - '@microsoft/sp-page-context.SPPermission.manageAlerts'
      - '@microsoft/sp-page-context.SPPermission.manageLists'
      - '@microsoft/sp-page-context.SPPermission.managePermissions'
      - '@microsoft/sp-page-context.SPPermission.managePersonalViews'
      - '@microsoft/sp-page-context.SPPermission.manageSubwebs'
      - '@microsoft/sp-page-context.SPPermission.manageWeb'
      - '@microsoft/sp-page-context.SPPermission.open'
      - '@microsoft/sp-page-context.SPPermission.openItems'
      - '@microsoft/sp-page-context.SPPermission.constructor'
      - '@microsoft/sp-page-context.SPPermission.updatePersonalWebParts'
      - '@microsoft/sp-page-context.SPPermission.useClientIntegration'
      - '@microsoft/sp-page-context.SPPermission.useRemoteAPIs'
      - '@microsoft/sp-page-context.SPPermission.value'
      - '@microsoft/sp-page-context.SPPermission.viewFormPages'
      - '@microsoft/sp-page-context.SPPermission.viewListItems'
      - '@microsoft/sp-page-context.SPPermission.viewPages'
      - '@microsoft/sp-page-context.SPPermission.viewUsageData'
      - '@microsoft/sp-page-context.SPPermission.viewVersions'
    langs:
      - typeScript
    type: class
    summary: Used to test whether the current user has a requested set of permissions.
    source:
      path: SPPermission.ts
      startLine: 15
      remote:
        path: spfx-core/sp-page-context/src\SPPermission.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-page-context'
    remarks: >-
      Specifies the built-in permissions available in SharePoint Foundation


      For more information, see:

      https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.spbasepermissions.aspx
  - uid: '@microsoft/sp-page-context.SPPermission.addAndCustomizePages'
    name: addAndCustomizePages
    fullName: addAndCustomizePages
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Add, change, or delete HTML pages or web part Pages, and edit the Web site
      using a SharePoint

      Foundationâ€“compatible editor.
    syntax:
      content: >-
        public static addAndCustomizePages: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x40000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.addDelPrivateWebParts'
    name: addDelPrivateWebParts
    fullName: addDelPrivateWebParts
    children: []
    langs:
      - typeScript
    type: property
    summary: Add or remove personal web parts on a web part Page.
    syntax:
      content: >-
        public static addDelPrivateWebParts: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x10000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.addListItems'
    name: addListItems
    fullName: addListItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Add items to lists, add documents to document libraries, and add Web
      discussion comments.
    syntax:
      content: >-
        public static addListItems: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x2 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.applyStyleSheets'
    name: applyStyleSheets
    fullName: applyStyleSheets
    children: []
    langs:
      - typeScript
    type: property
    summary: Apply a style sheet (.css file) to the Web site.
    syntax:
      content: >-
        public static applyStyleSheets: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x100000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.applyThemeAndBorder'
    name: applyThemeAndBorder
    fullName: applyThemeAndBorder
    children: []
    langs:
      - typeScript
    type: property
    summary: Apply a theme or borders to the entire Web site.
    syntax:
      content: >-
        public static applyThemeAndBorder: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x80000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.approveItems'
    name: approveItems
    fullName: approveItems
    children: []
    langs:
      - typeScript
    type: property
    summary: Approve a minor version of a list item or document.
    syntax:
      content: >-
        public static approveItems: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x10 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.browseDirectories'
    name: browseDirectories
    fullName: browseDirectories
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Enumerate files and folders in a Web site using Microsoft Office
      SharePoint Designer 2007 and WebDAV interfaces.
    syntax:
      content: >-
        public static browseDirectories: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x4000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.browserUserInfo'
    name: browserUserInfo
    fullName: browserUserInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: View information about users of the Web site.
    syntax:
      content: >-
        public static browserUserInfo: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x8000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.cancelCheckout'
    name: cancelCheckout
    fullName: cancelCheckout
    children: []
    langs:
      - typeScript
    type: property
    summary: Discard or check in a document which is checked out to another user.
    syntax:
      content: >-
        public static cancelCheckout: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x100 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.createAlerts'
    name: createAlerts
    fullName: createAlerts
    children: []
    langs:
      - typeScript
    type: property
    summary: Create e-mail alerts.
    syntax:
      content: >-
        public static createAlerts: SPPermission =  new SPPermission({ High:
        0x80, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.createGroups'
    name: createGroups
    fullName: createGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Create a group of users that can be used anywhere within the site
      collection.
    syntax:
      content: >-
        public static createGroups: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x1000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.createSSCSite'
    name: createSSCSite
    fullName: createSSCSite
    children: []
    langs:
      - typeScript
    type: property
    summary: Create a Web site using Self-Service Site Creation.
    syntax:
      content: >-
        public static createSSCSite: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x400000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.deleteListItems'
    name: deleteListItems
    fullName: deleteListItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Delete items from a list, documents from a document library, and Web
      discussion comments in documents.
    syntax:
      content: >-
        public static deleteListItems: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x8 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.deleteVersions'
    name: deleteVersions
    fullName: deleteVersions
    children: []
    langs:
      - typeScript
    type: property
    summary: Delete past versions of a list item or document.
    syntax:
      content: >-
        public static deleteVersions: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x80 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.editListItems'
    name: editListItems
    fullName: editListItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Edit items in lists, edit documents in document libraries, edit Web
      discussion comments in documents,

      and customize web part Pages in document libraries.
    syntax:
      content: >-
        public static editListItems: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x4 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.editMyUserInfo'
    name: editMyUserInfo
    fullName: editMyUserInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Allows a user to change his or her user information, such as adding a
      picture.
    syntax:
      content: >-
        public static editMyUserInfo: SPPermission =  new SPPermission({ High:
        0x100, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.emptyMask'
    name: emptyMask
    fullName: emptyMask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Has no permissions on the Web site. Not available through the user
      interface.
    syntax:
      content: >-
        public static emptyMask: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.enumeratePermissions'
    name: enumeratePermissions
    fullName: enumeratePermissions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Enumerate permissions on the Web site, list, folder, document, or list
      item.
    syntax:
      content: >-
        public static enumeratePermissions: SPPermission =  new SPPermission({
        High: 0x40000000, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.fullMask'
    name: fullMask
    fullName: fullMask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Has all permissions on the Web site. Not available through the user
      interface.
    syntax:
      content: >-
        public static fullMask: SPPermission =  new SPPermission({ High:
        0x7FFFFFFF, Low: 0xFFFFFFFF })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.hasAllPermissions'
    name: hasAllPermissions
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Function for testing whether a given permission mask has all of the
      requested permissions.
    syntax:
      content: 'function hasAllPermissions(requestedPerms: SPPermission[])'
      parameters:
        - id: requestedPerms
          type:
            - '@@microsoft/sp-page-context.SPPermission[]'
          description: >
            Any number of SPPermission objects to be compared against the
            original
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-page-context.SPPermission.hasAnyPermissions'
    name: hasAnyPermissions
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Function for testing whether a given permission mask has any of the
      requested permissions.
    syntax:
      content: 'function hasAnyPermissions(requestedPerms: SPPermission[])'
      parameters:
        - id: requestedPerms
          type:
            - '@@microsoft/sp-page-context.SPPermission[]'
          description: >
            Any number of SPPermission objects to be compared against the
            original
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-page-context.SPPermission.hasPermission'
    name: hasPermission
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Function for testing whether a given permission mask has the requested
      permission.
    syntax:
      content: 'function hasPermission(requestedPerm: SPPermission)'
      parameters:
        - id: requestedPerm
          type:
            - '@@microsoft/sp-page-context.SPPermission'
          description: |
            The SPPermission object to be compared against the original
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-page-context.SPPermission.layoutsPage'
    name: layoutsPage
    fullName: layoutsPage
    children: []
    langs:
      - typeScript
    type: property
    summary: View the layouts page?
    syntax:
      content: >-
        public static layoutsPage: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x21000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.manageAlerts'
    name: manageAlerts
    fullName: manageAlerts
    children: []
    langs:
      - typeScript
    type: property
    summary: Manage alerts for all users of the Web site.
    syntax:
      content: >-
        public static manageAlerts: SPPermission =  new SPPermission({ High:
        0x40, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.manageLists'
    name: manageLists
    fullName: manageLists
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Create and delete lists, add or remove columns in a list, and add or
      remove public views of a list.
    syntax:
      content: >-
        public static manageLists: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x800 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.managePermissions'
    name: managePermissions
    fullName: managePermissions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Create and change permission levels on the Web site and assign permissions
      to users and groups.
    syntax:
      content: >-
        public static managePermissions: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x2000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.managePersonalViews'
    name: managePersonalViews
    fullName: managePersonalViews
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Create, change, and delete personal views of lists.'
    syntax:
      content: >-
        public static managePersonalViews: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x200 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.manageSubwebs'
    name: manageSubwebs
    fullName: manageSubwebs
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Create subsites such as team sites, Meeting Workspace sites, and Document
      Workspace sites.
    syntax:
      content: >-
        public static manageSubwebs: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x800000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.manageWeb'
    name: manageWeb
    fullName: manageWeb
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Grant the ability to perform all administration tasks for the Web site as
      well as manage content.
    syntax:
      content: >-
        public static manageWeb: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x40000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
    remarks: >-
      Activate, deactivate, or edit properties of Web site scoped Features
      through the object model or

      through the user interface (UI). When granted on the root Web site of a
      site collection, activate,

      deactivate, or edit properties of site collection scoped Features through
      the object model. To

      browse to the Site Collection Features page and activate or deactivate
      site collection scoped

      Features through the UI, you must be a site collection administrator.
  - uid: '@microsoft/sp-page-context.SPPermission.open'
    name: open
    fullName: open
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Allow users to open a Web site, list, or folder to access items inside
      that container.
    syntax:
      content: >-
        public static open: SPPermission =  new SPPermission({ High: 0x0, Low:
        0x20000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.openItems'
    name: openItems
    fullName: openItems
    children: []
    langs:
      - typeScript
    type: property
    summary: View the source of documents with server-side file handlers.
    syntax:
      content: >-
        public static openItems: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x20 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.constructor'
    name: SPPermission
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SPPermission(value: IODataBasePermission)'
      parameters:
        - id: value
          type:
            - IODataBasePermission
          description: ''
  - uid: '@microsoft/sp-page-context.SPPermission.updatePersonalWebParts'
    name: updatePersonalWebParts
    fullName: updatePersonalWebParts
    children: []
    langs:
      - typeScript
    type: property
    summary: Update web parts to display personalized information.
    syntax:
      content: >-
        public static updatePersonalWebParts: SPPermission =  new SPPermission({
        High: 0x0, Low: 0x20000000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.useClientIntegration'
    name: useClientIntegration
    fullName: useClientIntegration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Use features that launch client applications; otherwise, users must work
      on documents locally and upload changes.
    syntax:
      content: >-
        public static useClientIntegration: SPPermission =  new SPPermission({
        High: 0x10, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.useRemoteAPIs'
    name: useRemoteAPIs
    fullName: useRemoteAPIs
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Use SOAP, WebDAV, or Microsoft Office SharePoint Designer 2007 interfaces
      to access the Web site.
    syntax:
      content: >-
        public static useRemoteAPIs: SPPermission =  new SPPermission({ High:
        0x20, Low: 0x0 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns the value of this SPPermission object
    syntax:
      content: IODataBasePermission value
      return:
        type:
          - IODataBasePermission
  - uid: '@microsoft/sp-page-context.SPPermission.viewFormPages'
    name: viewFormPages
    fullName: viewFormPages
    children: []
    langs:
      - typeScript
    type: property
    summary: 'View forms, views, and application pages, and enumerate lists.'
    syntax:
      content: >-
        public static viewFormPages: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x1000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.viewListItems'
    name: viewListItems
    fullName: viewListItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      View items in lists, documents in document libraries, and view Web
      discussion comments.
    syntax:
      content: >-
        public static viewListItems: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x1 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.viewPages'
    name: viewPages
    fullName: viewPages
    children: []
    langs:
      - typeScript
    type: property
    summary: View pages in a Web site.
    syntax:
      content: >-
        public static viewPages: SPPermission =  new SPPermission({ High: 0x0,
        Low: 0x20000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.viewUsageData'
    name: viewUsageData
    fullName: viewUsageData
    children: []
    langs:
      - typeScript
    type: property
    summary: View reports on Web site usage.
    syntax:
      content: >-
        public static viewUsageData: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x200000 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
  - uid: '@microsoft/sp-page-context.SPPermission.viewVersions'
    name: viewVersions
    fullName: viewVersions
    children: []
    langs:
      - typeScript
    type: property
    summary: View past versions of a list item or document.
    syntax:
      content: >-
        public static viewVersions: SPPermission =  new SPPermission({ High:
        0x0, Low: 0x40 })
      return:
        type:
          - '@@microsoft/sp-page-context.SPPermission'
