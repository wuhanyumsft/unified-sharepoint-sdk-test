### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-module-interfaces.IClientSideWebPartManifest'
    name: IClientSideWebPartManifest
    fullName: IClientSideWebPartManifest<TProperties>
    children:
      - >-
        @microsoft/sp-module-interfaces.IClientSideWebPartManifest.disabledOnClassicSharepoint
      - >-
        @microsoft/sp-module-interfaces.IClientSideWebPartManifest.hiddenFromToolbox
      - >-
        @microsoft/sp-module-interfaces.IClientSideWebPartManifest.preconfiguredEntries
      - >-
        @microsoft/sp-module-interfaces.IClientSideWebPartManifest.supportsFullBleed
    langs:
      - typeScript
    type: interface
    summary: >-
      The client side SharePoint framework identifies a Web Part by its
      manifest. All Web Parts are expected to have a
       manifest. The manifest is a schematized JSON blob that is used in multiple parts of the SharePoint infrastructure
       to identify, load and process a Web Part. The schema for this manifest is completely owned and versioned by
       Microsoft. There are some required properties in the manifest and some optional properties. Optional properties
       need to be provided only if the Web Part needs the specific functionality. An invalid manifest could lead to issues
       with Web Part loading and functionality problems.
    extends:
      name: '@@microsoft/sp-module-interfaces.IClientSideComponentManifest'
    package: '@microsoft/sp-module-interfaces'
  - uid: >-
      @microsoft/sp-module-interfaces.IClientSideWebPartManifest.disabledOnClassicSharepoint
    name: disabledOnClassicSharepoint
    fullName: disabledOnClassicSharepoint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: If true, this web part is disabled on Classic Sharepoint pages
      ?

      Usage: Certain web parts may not be required on or apply to Classic
      Sharepoint pages. This flag helps control
       that. If this flag is true, the web part will not appear in the classic page web part gallery.
      Required: no

      Type: boolean

      Example: false
    syntax:
      content: boolean disabledOnClassicSharepoint
      return:
        type:
          - boolean
  - uid: >-
      @microsoft/sp-module-interfaces.IClientSideWebPartManifest.hiddenFromToolbox
    name: hiddenFromToolbox
    fullName: hiddenFromToolbox
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: If true, this web part should not be displayed in the modern
      SharePoint toolbox.

      Usage: Use this flag if it is not appropriate to display a web part in the
      modern toolbox. This property is not
       used in  Classic SharePoint. By default, all web parts are enabled to be displayed in the toolbox. Such web parts
       can be provisioned on pages though API or be added to the page in a pre configured way.
      Required: no

      Type: boolean

      Example: true
    syntax:
      content: boolean hiddenFromToolbox
      return:
        type:
          - boolean
  - uid: >-
      @microsoft/sp-module-interfaces.IClientSideWebPartManifest.preconfiguredEntries
    name: preconfiguredEntries
    fullName: preconfiguredEntries
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: A Web Part can have pre-configured properties like the title,
      description, toolbox group name and Web
       Part specific custom properties. And there can be multiple instances of these pre-configured properties. This
       helps support scenarios where an organization may want to present multiple pre-configured entries for a Web Part
       in the Toolbox. Each entry is expected to configure the Web Part with a different set of pre-configured
       properties. A developer may decide to seed some initial values for these properties but an organization admin can
       go ahead and customize these properties per the needs of his/her organization. The properties can also be modified
       by the author of the page.
      Usage: help display a Web Part in the Toolbox, PropertyPane and the
      initial rendering of the Web Part.

      Required: yes

      Type: JSON object

      Localized: Depends on the property.

      Supported values: Array of IClientSideWebPartManifestEntry objects.

      Example:
        "[{
           title:"Image Web Part",
           description: "This Web Part displays an image",
           group: "Media",
           iconFontName: "image",
           properties: {
             imageSource: "https://contoso.akamaihd.net/files/mountRainier.jpg",
             captionText: "Mount Rainier"
           }
         }]"
    syntax:
      content: 'IClientSideWebPartManifestEntry<TProperties>[] preconfiguredEntries'
      return:
        type:
          - >-
            @@microsoft/sp-module-interfaces.IClientSideWebPartManifestEntry<TProperties>[]
  - uid: >-
      @microsoft/sp-module-interfaces.IClientSideWebPartManifest.supportsFullBleed
    name: supportsFullBleed
    fullName: supportsFullBleed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: If true, this web part supports and has been tested for full
      bleed experience.

      Usage: Use this flag if a web part supports full bleed experience and has
      been tested as such. In this context,
       full bleed is a term used to denote that the web part takes the whole width of the containing page. Full bleed
       experiences require special treatment and testing. By default no web parts support full bleed experiences.
      Required: no

      Type: boolean

      Example: true
    syntax:
      content: boolean supportsFullBleed
      return:
        type:
          - boolean
