### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-module-interfaces.IPathModuleConfiguration'
    name: IPathModuleConfiguration
    fullName: IPathModuleConfiguration
    children:
      - >-
        @microsoft/sp-module-interfaces.IPathModuleConfiguration.globalDependencies
      - '@microsoft/sp-module-interfaces.IPathModuleConfiguration.globalName'
      - '@microsoft/sp-module-interfaces.IPathModuleConfiguration.path'
    langs:
      - typeScript
    type: interface
    summary: >-
      This is the interface for a script module with the "path" type. Modules of
      this type must be provided by the
       component developer.
    extends:
      name: '@@microsoft/sp-module-interfaces.IModuleConfiguration'
    package: '@microsoft/sp-module-interfaces'
    isPreview: true
  - uid: >-
      @microsoft/sp-module-interfaces.IPathModuleConfiguration.globalDependencies
    name: globalDependencies
    fullName: globalDependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: For non-AMD/module-pattern scripts that have dependencies (for
      example, jQuery plugins), the module
       loader will ensure that those dependencies are already loaded. Entries in the array specified in this field must
       refer to other non-AMD modules in this component. This field is not required to have a value for
       non-AMD modules. If any values are specified that do not refer to other modules in the same component manifest
       that this module is specified, the module loader will throw an exception and the component will fail to load.
      Required: no

      Supported values: Names of other non-AMD-pattern modules in this loader
      configuration, as specified by the key
       IClientSideComponentLoaderConfiguration.scriptResources[]
      Example: ["jquery"]
    syntax:
      content: 'string[] globalDependencies'
      return:
        type:
          - 'string[]'
  - uid: '@microsoft/sp-module-interfaces.IPathModuleConfiguration.globalName'
    name: globalName
    fullName: globalName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: In order to load scripts that don't follow the
      AMD/module-pattern where "define" or "require" is
       called and dependencies are explicitly listed and exports are explicitly returned, the module loader needs to
       know which global variable must be examined. If this property is specified, this module is considered non-AMD and
       the module loader will not expect "define" or "require" to be called. Instead, it will wait for the script to
       finish loading and examine the global variable specified in this field.
      Required: no

      Localized: no

      Supported values: Variable names that are expected to be populated after
      this module is loaded. For example,
       if this module is describing jQuery, this value should probably be "$". If an empty string is specified,
       the module loader will throw an exception and the component will fail to load.
      Example: "$"
    syntax:
      content: string globalName
      return:
        type:
          - string
  - uid: '@microsoft/sp-module-interfaces.IPathModuleConfiguration.path'
    name: path
    fullName: path
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: A path to this module's javascript resource either as a
      fully-qualified URL or as a path under the
       paths provided in the "internalModuleBaseUrls" field. For example, if this field's value is
       "master_2015-04-20/my-application.bundle_1928f8a0.js" and the "internalModuleBaseUrls" field's value is
       [ "https://contoso.akamaihd.net/files/", "https://contoso.msecnd.net/files/" ], the loader will first attempt to
       load this script resource from the URL
       "https://contoso.akamaihd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js". If loading from that URL
       fails, the loader will then attempt to load this script resource from
       "https://contoso.msecnd.net/files/master_2015-04-20/my-application.bundle_1928f8a0.js". If that URL fails to load,
       the component will fail to load and an error will be returned.
      Required: yes

      Localized: no

      Supported values: The path to the module either as a fully-qualified URL
      or as a path under the
       paths provided in the "internalModuleBaseUrls" field.
      Example: "master_2015-04-20/my-application.bundle_1928f8a0.js"
    syntax:
      content: string path
      return:
        type:
          - string
