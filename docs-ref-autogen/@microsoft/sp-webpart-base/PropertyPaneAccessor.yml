### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor'
    name: PropertyPaneAccessor
    fullName: PropertyPaneAccessor
    children:
      - '@microsoft/sp-webpart-base.PropertyPaneAccessor.isPropertyPaneOpen'
      - '@microsoft/sp-webpart-base.PropertyPaneAccessor.isRenderedByWebPart'
      - '@microsoft/sp-webpart-base.PropertyPaneAccessor.open'
      - '@microsoft/sp-webpart-base.PropertyPaneAccessor.constructor'
      - '@microsoft/sp-webpart-base.PropertyPaneAccessor.refresh'
    langs:
      - typeScript
    type: class
    summary: >-
      Web part context property pane accessor. Provides some most commonly used
      utilities

      to access the property pane.
    source:
      path: core/context/PropertyPaneAccessor.ts
      startLine: 17
      remote:
        path: spfx-core/sp-webpart-base/src\core/context/PropertyPaneAccessor.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor.isPropertyPaneOpen'
    name: isPropertyPaneOpen
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns true if the PropertyPane is open.
    syntax:
      content: function isPropertyPaneOpen()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor.isRenderedByWebPart'
    name: isRenderedByWebPart
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns true if the current property pane source is a web part and not the
      Canvas or any other source.
    syntax:
      content: function isRenderedByWebPart()
      parameters: []
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor.open'
    name: open
    children: []
    type: method
    langs:
      - typeScript
    summary: Api to open the PropertyPane.
    syntax:
      content: function open()
      parameters: []
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor.constructor'
    name: PropertyPaneAccessor
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new PropertyPaneAccessor(openProperytPane: () => void, refresh: () =>
        void, isRenderedByWebPart: () => boolean, isPropertyPaneOpen: () =>
        boolean)
      parameters:
        - id: openProperytPane
          type:
            - () => void
          description: ''
        - id: refresh
          type:
            - () => void
          description: ''
        - id: isRenderedByWebPart
          type:
            - () => boolean
          description: ''
        - id: isPropertyPaneOpen
          type:
            - () => boolean
          description: ''
  - uid: '@microsoft/sp-webpart-base.PropertyPaneAccessor.refresh'
    name: refresh
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Api to refresh the contents of the PropertyPane.

      It's a no operation scenario if a web part is asking to refresh the
      property pane

      while some other web part is being configured.
    syntax:
      content: function refresh()
      parameters: []
