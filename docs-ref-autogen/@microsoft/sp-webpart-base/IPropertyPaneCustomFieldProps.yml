### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps'
    name: IPropertyPaneCustomFieldProps
    fullName: IPropertyPaneCustomFieldProps
    children:
      - '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.context'
      - '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.key'
      - '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose'
      - '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.onRender'
    langs:
      - typeScript
    type: interface
    summary: PropertyPane CustomPropertyField props.
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Instance specific context. This context is passed back to the web part in
      the

      onRender and onDispose APIs. The web part can use this context to manage
      state

      information.
    syntax:
      content: any context
      return:
        type:
          - any
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      An UNIQUE key indicates the identity of this contorl.

      The PropertyPane uses ReactJS to render its components. ReactJS uses keys
      to identify a component and if it should

      be re-rendered or not. This is a performance feature in ReactJS. Please
      read the following link to understand how

      to pick the value of the key.
    syntax:
      content: string key
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose'
    name: onDispose
    fullName: onDispose
    children: []
    langs:
      - typeScript
    type: property
    summary: This API is called when the component is unmounted from the host element.
    syntax:
      content: '(domElement: HTMLElement, context?: any) => void onDispose'
      return:
        type:
          - '(domElement: HTMLElement, context?: any) => void'
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps.onRender'
    name: onRender
    fullName: onRender
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This API will be called once the custom field is mounted on the host
      element.
    syntax:
      content: >-
        (domElement: HTMLElement, context?: any, changeCallback?:
        (targetProperty?: string, newValue?: any) => void) => void onRender
      return:
        type:
          - >-
            (domElement: HTMLElement, context?: any, changeCallback?:
            (targetProperty?: string, newValue?: any) => void) => void
