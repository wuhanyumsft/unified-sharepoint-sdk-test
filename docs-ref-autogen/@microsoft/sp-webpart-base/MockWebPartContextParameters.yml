### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters'
    name: MockWebPartContextParameters
    fullName: MockWebPartContextParameters
    children:
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.domElement'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.eventAggregator'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.graphHttpClient'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.host'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.httpClient'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.instanceId'
      - >-
        @microsoft/sp-webpart-base.MockWebPartContextParameters.isPropertyPaneOpen
      - >-
        @microsoft/sp-webpart-base.MockWebPartContextParameters.isPropertyPaneRenderedByWebPart
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.loggingTag'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.manifest'
      - >-
        @microsoft/sp-webpart-base.MockWebPartContextParameters.parentServiceScope
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.propertyPane'
      - >-
        @microsoft/sp-webpart-base.MockWebPartContextParameters.setPropertyPaneState
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.spHttpClient'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.statusRenderer'
      - '@microsoft/sp-webpart-base.MockWebPartContextParameters.webPartTag'
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: test/mock/clientSideWebParts/MockWebPartContext.ts
      startLine: 23
      remote:
        path: >-
          spfx-core/sp-webpart-base/src\test/mock/clientSideWebParts/MockWebPartContext.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.domElement'
    name: domElement
    fullName: domElement
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public domElement: HTMLElement =  document.createElement(''div'')'
      return:
        type:
          - HTMLElement
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.eventAggregator'
    name: eventAggregator
    fullName: eventAggregator
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public eventAggregator: IEventAggregator =  {} as any'
      return:
        type:
          - '@@microsoft/sp-webpart-base.IEventAggregator'
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.graphHttpClient'
    name: graphHttpClient
    fullName: graphHttpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public graphHttpClient: GraphHttpClient =  {} as any'
      return:
        type:
          - GraphHttpClient
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.host'
    name: host
    fullName: host
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public host: IWebPartHost =  {} as any'
      return:
        type:
          - '@@microsoft/sp-webpart-base.IWebPartHost'
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.httpClient'
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public httpClient: HttpClient =  {} as any'
      return:
        type:
          - HttpClient
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.instanceId'
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public instanceId: string = "wpInstanceId"'
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.isPropertyPaneOpen'
    name: isPropertyPaneOpen
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPropertyPaneOpen()
      parameters: []
      return:
        type:
          - 'false'
  - uid: >-
      @microsoft/sp-webpart-base.MockWebPartContextParameters.isPropertyPaneRenderedByWebPart
    name: isPropertyPaneRenderedByWebPart
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPropertyPaneRenderedByWebPart()
      parameters: []
      return:
        type:
          - 'true'
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.loggingTag'
    name: loggingTag
    fullName: loggingTag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public loggingTag: string =
        "WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60"
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.manifest'
    name: manifest
    fullName: manifest
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public manifest: IClientSideWebPartManifestInstance<__type> =  new
        MockWebPartManifestInstance()
      return:
        type:
          - IClientSideWebPartManifestInstance<__type>
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.parentServiceScope'
    name: parentServiceScope
    fullName: parentServiceScope
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public parentServiceScope: ServiceScope =  ServiceScope.startNewRoot()'
      return:
        type:
          - ServiceScope
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.propertyPane'
    name: propertyPane
    fullName: propertyPane
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: "public propertyPane: IPropertyPaneAccessor =  {\r\n    open: () => { /* no-op */ },\r\n    refresh: () => { /* no-op */ }\r\n  } as any"
      return:
        type:
          - '@@microsoft/sp-webpart-base.IPropertyPaneAccessor'
  - uid: >-
      @microsoft/sp-webpart-base.MockWebPartContextParameters.setPropertyPaneState
    name: setPropertyPaneState
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function setPropertyPaneState()
      parameters: []
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.spHttpClient'
    name: spHttpClient
    fullName: spHttpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public spHttpClient: SPHttpClient =  {} as any'
      return:
        type:
          - SPHttpClient
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.statusRenderer'
    name: statusRenderer
    fullName: statusRenderer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public statusRenderer: IClientSideWebPartStatusRenderer =  {} as any'
      return:
        type:
          - '@@microsoft/sp-webpart-base.IClientSideWebPartStatusRenderer'
  - uid: '@microsoft/sp-webpart-base.MockWebPartContextParameters.webPartTag'
    name: webPartTag
    fullName: webPartTag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public webPartTag: string =
        "WebPart.daf0b71c-6de8-4ef7-b511-faae7c388708.0ae4973a-70e3-451e-9f1f-3f25e5455a60"
      return:
        type:
          - string
