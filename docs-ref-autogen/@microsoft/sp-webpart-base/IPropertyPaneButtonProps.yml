### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps'
    name: IPropertyPaneButtonProps
    fullName: IPropertyPaneButtonProps
    children:
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.ariaDescription'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.ariaLabel'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.buttonType'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.description'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.disabled'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.icon'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.onClick'
      - '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.text'
    langs:
      - typeScript
    type: interface
    summary: PropertyPane button props.
    source:
      path: >-
        propertyPane/propertyPaneFields/propertyPaneButton/IPropertyPaneButton.ts
      startLine: 8
      remote:
        path: >-
          spfx-core/sp-webpart-base/src\propertyPane/propertyPaneFields/propertyPaneButton/IPropertyPaneButton.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.ariaDescription'
    name: ariaDescription
    fullName: ariaDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Detailed description of the button for the benefit of screen readers.

      Besides the compound button, other button types will need more information
      provided to screen reader.
    optional: true
    syntax:
      content: 'ariaDescription?: string'
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.ariaLabel'
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: The aria label of the button for the benefit of screen readers.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.buttonType'
    name: buttonType
    fullName: buttonType
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The type of button to render.
      Default value is ButtonType.normal.
    optional: true
    syntax:
      content: 'buttonType?: PropertyPaneButtonType'
      return:
        type:
          - '@@microsoft/sp-webpart-base.PropertyPaneButtonType'
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Description of the action this button takes.
      Only used for compound buttons.
    optional: true
    syntax:
      content: 'description?: string'
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.disabled'
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the button is disabled.
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.icon'
    name: icon
    fullName: icon
    children: []
    langs:
      - typeScript
    type: property
    summary: The button icon shown in command or hero type.
    optional: true
    syntax:
      content: 'icon?: string'
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.onClick'
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback which is invoked on the button click, which takes in the
      existing value for the bound property

      and returns the new value and which is then used to update the properties
      bag. This update will result in

      the re-render of the PropertyPane with the new props.
    syntax:
      content: 'onClick: (value: any) => any'
      return:
        type:
          - '(value: any) => any'
  - uid: '@microsoft/sp-webpart-base.IPropertyPaneButtonProps.text'
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: Display text of the element.
    syntax:
      content: 'text: string'
      return:
        type:
          - string
