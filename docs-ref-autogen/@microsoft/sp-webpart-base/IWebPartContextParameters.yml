### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters'
    name: IWebPartContextParameters
    fullName: IWebPartContextParameters
    children:
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.domElement'
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.eventAggregator'
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.host'
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.instanceId'
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.isPropertyPaneOpen'
      - >-
        @microsoft/sp-webpart-base.IWebPartContextParameters.isPropertyPaneRenderedByWebPart
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.manifest'
      - >-
        @microsoft/sp-webpart-base.IWebPartContextParameters.setPropertyPaneState
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.statusRenderer'
      - '@microsoft/sp-webpart-base.IWebPartContextParameters.webPartTag'
    langs:
      - typeScript
    type: interface
    summary: Constructor parameters for WebPartContext
    extends:
      name: any
    source:
      path: core/IWebPartContextParameters.ts
      startLine: 14
      remote:
        path: spfx-core/sp-webpart-base/src\core/IWebPartContextParameters.ts
        repo: >-
          https://onedrive.visualstudio.com/DefaultCollection/SPPPlat/_git/sp-client
        branch: master
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.domElement'
    name: domElement
    fullName: domElement
    children: []
    langs:
      - typeScript
    type: property
    summary: Reference to the DOM element that hosts this client side component.
    syntax:
      content: HTMLElement domElement
      return:
        type:
          - HTMLElement
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.eventAggregator'
    name: eventAggregator
    fullName: eventAggregator
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part event aggregator.
    syntax:
      content: IEventAggregator eventAggregator
      return:
        type:
          - '@@microsoft/sp-webpart-base.IEventAggregator'
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.host'
    name: host
    fullName: host
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part host.
    syntax:
      content: IWebPartHost host
      return:
        type:
          - '@@microsoft/sp-webpart-base.IWebPartHost'
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.instanceId'
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part instance id. This is a globally unique value.
    syntax:
      content: string instanceId
      return:
        type:
          - string
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.isPropertyPaneOpen'
    name: isPropertyPaneOpen
    fullName: isPropertyPaneOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates whether the PropertyPane is open or not.
    syntax:
      content: () => boolean isPropertyPaneOpen
      return:
        type:
          - () => boolean
  - uid: >-
      @microsoft/sp-webpart-base.IWebPartContextParameters.isPropertyPaneRenderedByWebPart
    name: isPropertyPaneRenderedByWebPart
    fullName: isPropertyPaneRenderedByWebPart
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Is the property pane rendered by a web part and not by Canvas or any other
      source.
    syntax:
      content: () => boolean isPropertyPaneRenderedByWebPart
      return:
        type:
          - () => boolean
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.manifest'
    name: manifest
    fullName: manifest
    children: []
    langs:
      - typeScript
    type: property
    summary: Manifest for the client side web part.
    syntax:
      content: IClientSideWebPartManifestInstance<any> manifest
      return:
        type:
          - IClientSideWebPartManifestInstance<any>
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.setPropertyPaneState'
    name: setPropertyPaneState
    fullName: setPropertyPaneState
    children: []
    langs:
      - typeScript
    type: property
    summary: Function to set the property pane state.
    syntax:
      content: >-
        (id: string, propertyPaneState?: PropertyPaneState, renderedByWebPart?:
        boolean) => void setPropertyPaneState
      return:
        type:
          - >-
            (id: string, propertyPaneState?: PropertyPaneState,
            renderedByWebPart?: boolean) => void
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.statusRenderer'
    name: statusRenderer
    fullName: statusRenderer
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part status renderer.
    syntax:
      content: IClientSideWebPartStatusRenderer statusRenderer
      return:
        type:
          - '@@microsoft/sp-webpart-base.IClientSideWebPartStatusRenderer'
  - uid: '@microsoft/sp-webpart-base.IWebPartContextParameters.webPartTag'
    name: webPartTag
    fullName: webPartTag
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part tag to be used for logging and telemetry.
    syntax:
      content: string webPartTag
      return:
        type:
          - string
