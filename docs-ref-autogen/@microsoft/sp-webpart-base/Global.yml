### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.Global'
    package: '@microsoft/sp-webpart-base'
    name: Global
    children:
      - '@microsoft/sp-webpart-base.assertEqualJsons'
      - '@microsoft/sp-webpart-base.assertEqualJsons'
      - '@microsoft/sp-webpart-base.assertEqualJsons'
      - '@microsoft/sp-webpart-base.deepFreeze'
      - '@microsoft/sp-webpart-base.executeAndReThrow'
      - '@microsoft/sp-webpart-base.executeWithoutFailing'
      - '@microsoft/sp-webpart-base.getFirstFocusableChild'
      - '@microsoft/sp-webpart-base.getFocusableChildren'
      - '@microsoft/sp-webpart-base.getFocusableDescendants'
      - '@microsoft/sp-webpart-base.getFocusableParent'
      - '@microsoft/sp-webpart-base.getFocusableSiblings'
      - '@microsoft/sp-webpart-base.getNextFocusableElement'
      - '@microsoft/sp-webpart-base.getPrevFocusableElement'
      - '@microsoft/sp-webpart-base.isElementFocusable'
      - '@microsoft/sp-webpart-base.isElementFocusableChildOf'
      - '@microsoft/sp-webpart-base.isEnter'
      - '@microsoft/sp-webpart-base.isEscape'
      - '@microsoft/sp-webpart-base.isKey'
      - '@microsoft/sp-webpart-base.isShiftTab'
      - '@microsoft/sp-webpart-base.isTab'
      - '@microsoft/sp-webpart-base.navigateInside'
      - '@microsoft/sp-webpart-base.navigateOutOf'
      - '@microsoft/sp-webpart-base.navigateTo'
      - '@microsoft/sp-webpart-base.PropertyPaneButton'
      - '@microsoft/sp-webpart-base.PropertyPaneCheckbox'
      - '@microsoft/sp-webpart-base.PropertyPaneChoiceGroup'
      - '@microsoft/sp-webpart-base.PropertyPaneCustomField'
      - '@microsoft/sp-webpart-base.PropertyPaneDropdown'
      - '@microsoft/sp-webpart-base.PropertyPaneHorizontalRule'
      - '@microsoft/sp-webpart-base.PropertyPaneLabel'
      - '@microsoft/sp-webpart-base.PropertyPaneLink'
      - '@microsoft/sp-webpart-base.PropertyPaneSlider'
      - '@microsoft/sp-webpart-base.PropertyPaneTextField'
      - '@microsoft/sp-webpart-base.PropertyPaneToggle'
      - '@microsoft/sp-webpart-base.queryFocusableSelector'
    type: package
    langs:
      - typeScript
  - uid: '@microsoft/sp-webpart-base.assertEqualJsons'
    name: assertEqualJsons
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function assertEqualJsons(act: any, exp: any)'
      parameters:
        - id: act
          type:
            - any
          description: ''
        - id: exp
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-webpart-base.assertEqualJsons'
    name: assertEqualJsons
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function assertEqualJsons(act: any, exp: any)'
      parameters:
        - id: act
          type:
            - any
          description: ''
        - id: exp
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-webpart-base.assertEqualJsons'
    name: assertEqualJsons
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function assertEqualJsons(act: any, exp: any)'
      parameters:
        - id: act
          type:
            - any
          description: ''
        - id: exp
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-webpart-base.deepFreeze'
    name: deepFreeze
    children: []
    type: function
    langs:
      - typeScript
    summary: 'To make obj fully immutable, freeze each object in obj.'
    syntax:
      content: 'function deepFreeze(obj: Object)'
      parameters:
        - id: obj
          type:
            - Object
          description: ''
      return:
        type:
          - Object | undefined
  - uid: '@microsoft/sp-webpart-base.executeAndReThrow'
    name: executeAndReThrow
    children: []
    type: function
    langs:
      - typeScript
    summary: Execute the passed in delegate and re-throw a custom error.
    syntax:
      content: >-
        function executeAndReThrow(method: () => void, errorToThrow: SPError,
        logSource?: _ILogSource)
      parameters:
        - id: method
          type:
            - () => void
          description: to execute.
        - id: errorToThrow
          type:
            - SPError
          description: ''
        - id: logSource
          type:
            - _ILogSource
          description: ''
          optional: true
  - uid: '@microsoft/sp-webpart-base.executeWithoutFailing'
    name: executeWithoutFailing
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Execute the passed in delegate with a guarantee that no exception will
      leak out.

      Do not use this normally. Only in error handling scenarios where you would
      like

      to be defesive.
    syntax:
      content: >-
        function executeWithoutFailing(method: () => void, logSource?:
        _ILogSource)
      parameters:
        - id: method
          type:
            - () => void
          description: to execute.
        - id: logSource
          type:
            - _ILogSource
          description: ''
          optional: true
  - uid: '@microsoft/sp-webpart-base.getFirstFocusableChild'
    name: getFirstFocusableChild
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFirstFocusableChild(elem: HTMLElement, ignoreTabIndex:
        boolean)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: ignoreTabIndex
          type:
            - boolean
          description: ''
      return:
        type:
          - HTMLElement | undefined
  - uid: '@microsoft/sp-webpart-base.getFocusableChildren'
    name: getFocusableChildren
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFocusableChildren(elem: HTMLElement, ignoreTabIndex:
        boolean)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: ignoreTabIndex
          type:
            - boolean
          description: ''
      return:
        type:
          - 'HTMLElement[]'
  - uid: '@microsoft/sp-webpart-base.getFocusableDescendants'
    name: getFocusableDescendants
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFocusableDescendants(elem: HTMLElement, ignoreTabIndex:
        boolean)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: ignoreTabIndex
          type:
            - boolean
          description: ''
      return:
        type:
          - 'HTMLElement[]'
  - uid: '@microsoft/sp-webpart-base.getFocusableParent'
    name: getFocusableParent
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFocusableParent(elem: HTMLElement, topElement: HTMLElement)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: topElement
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - HTMLElement
  - uid: '@microsoft/sp-webpart-base.getFocusableSiblings'
    name: getFocusableSiblings
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getFocusableSiblings(elem: HTMLElement, topElement:
        HTMLElement)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: topElement
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - 'HTMLElement[]'
  - uid: '@microsoft/sp-webpart-base.getNextFocusableElement'
    name: getNextFocusableElement
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getNextFocusableElement(elem: HTMLElement, topElement:
        HTMLElement)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: topElement
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - HTMLElement
  - uid: '@microsoft/sp-webpart-base.getPrevFocusableElement'
    name: getPrevFocusableElement
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPrevFocusableElement(elem: HTMLElement, topElement:
        HTMLElement)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: topElement
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - HTMLElement
  - uid: '@microsoft/sp-webpart-base.isElementFocusable'
    name: isElementFocusable
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isElementFocusable(elem: HTMLElement, ignoreTabIndex: boolean)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: ignoreTabIndex
          type:
            - boolean
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isElementFocusableChildOf'
    name: isElementFocusableChildOf
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isElementFocusableChildOf(elem: HTMLElement, ancestor:
        HTMLElement)
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: ancestor
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isEnter'
    name: isEnter
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isEnter(e: KeyboardEvent | ReactKeyboardEvent)'
      parameters:
        - id: e
          type:
            - KeyboardEvent | ReactKeyboardEvent
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isEscape'
    name: isEscape
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isEscape(e: KeyboardEvent | ReactKeyboardEvent)'
      parameters:
        - id: e
          type:
            - KeyboardEvent | ReactKeyboardEvent
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isKey'
    name: isKey
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function isKey(keyCode: number, e: KeyboardEvent | ReactKeyboardEvent,
        allowAlt: boolean, allowCtrl: boolean, allowShift: boolean)
      parameters:
        - id: keyCode
          type:
            - number
          description: ''
        - id: e
          type:
            - KeyboardEvent | ReactKeyboardEvent
          description: ''
        - id: allowAlt
          type:
            - boolean
          description: ''
        - id: allowCtrl
          type:
            - boolean
          description: ''
        - id: allowShift
          type:
            - boolean
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isShiftTab'
    name: isShiftTab
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isShiftTab(e: KeyboardEvent | ReactKeyboardEvent)'
      parameters:
        - id: e
          type:
            - KeyboardEvent | ReactKeyboardEvent
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.isTab'
    name: isTab
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isTab(e: KeyboardEvent | ReactKeyboardEvent)'
      parameters:
        - id: e
          type:
            - KeyboardEvent | ReactKeyboardEvent
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.navigateInside'
    name: navigateInside
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function navigateInside(elem: HTMLElement)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.navigateOutOf'
    name: navigateOutOf
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function navigateOutOf(elem: HTMLElement, topElement: HTMLElement)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
        - id: topElement
          type:
            - HTMLElement
          description: ''
  - uid: '@microsoft/sp-webpart-base.navigateTo'
    name: navigateTo
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function navigateTo(elem: HTMLElement)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - boolean
  - uid: '@microsoft/sp-webpart-base.PropertyPaneButton'
    name: PropertyPaneButton
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Button on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneButton(targetProperty: string, properties:
        IPropertyPaneButtonProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the Button is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneButtonProps'
          description: |
            Strongly typed Button properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneButtonProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneCheckbox'
    name: PropertyPaneCheckbox
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Checkbox on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneCheckbox(targetProperty: string, properties:
        IPropertyPaneCheckboxProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the checkbox is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneCheckboxProps'
          description: |
            Strongly typed Checkbox properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneCheckboxProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneChoiceGroup'
    name: PropertyPaneChoiceGroup
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Choice Group on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneChoiceGroup(targetProperty: string, properties:
        IPropertyPaneChoiceGroupProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the choice group is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneChoiceGroupProps'
          description: |
            Strongly typed Choice Group properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneChoiceGroupProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneCustomField'
    name: PropertyPaneCustomField
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a custom field on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneCustomField(properties:
        IPropertyPaneCustomFieldProps)
      parameters:
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps'
          description: |
            Strongly typed Custom field properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneCustomFieldProps>
    isPreview: true
    remarks: >-
      The purpose of the custom field is to help the web part developer to add a
      custom control to

      the PropertyPane. The PropertyPane supports a host of inbuilt field types.
      While

      this list meets the demands of most web parts, but there are exceptional
      cases

      when web parts have special needs and need a special control. The custom
      field

      helps fill that gap.
  - uid: '@microsoft/sp-webpart-base.PropertyPaneDropdown'
    name: PropertyPaneDropdown
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Dropdown on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneDropdown(targetProperty: string, properties:
        IPropertyPaneDropdownProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the dropdown is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneDropdownProps'
          description: |
            Strongly typed Dropdown properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneDropdownProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneHorizontalRule'
    name: PropertyPaneHorizontalRule
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Horizontal Rule on the PropertyPane.
    syntax:
      content: function PropertyPaneHorizontalRule()
      parameters: []
      return:
        type:
          - '@@microsoft/sp-webpart-base.IPropertyPaneField<void>'
  - uid: '@microsoft/sp-webpart-base.PropertyPaneLabel'
    name: PropertyPaneLabel
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Label on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneLabel(targetProperty: string, properties:
        IPropertyPaneLabelProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the label is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneLabelProps'
          description: |
            Strongly typed Label properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneLabelProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneLink'
    name: PropertyPaneLink
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Link on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneLink(targetProperty: string, properties:
        IPropertyPaneLinkProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the Link is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneLinkProps'
          description: |
            Strongly typed Link properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneLinkProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneSlider'
    name: PropertyPaneSlider
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Slider on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneSlider(targetProperty: string, properties:
        IPropertyPaneSliderProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the slider is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneSliderProps'
          description: |
            Strongly typed Slider properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneSliderProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneTextField'
    name: PropertyPaneTextField
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a TextField on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneTextField(targetProperty: string, properties:
        IPropertyPaneTextFieldProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the textfield is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneTextFieldProps'
          description: |
            Strongly typed TextField properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneTextFieldProps>
  - uid: '@microsoft/sp-webpart-base.PropertyPaneToggle'
    name: PropertyPaneToggle
    children: []
    type: function
    langs:
      - typeScript
    summary: Helper method to create a Toggle on the PropertyPane.
    syntax:
      content: >-
        function PropertyPaneToggle(targetProperty: string, properties:
        IPropertyPaneToggleProps)
      parameters:
        - id: targetProperty
          type:
            - string
          description: Target property the toggle is associated to.
        - id: properties
          type:
            - '@@microsoft/sp-webpart-base.IPropertyPaneToggleProps'
          description: |
            Strongly typed Toggle properties.
      return:
        type:
          - >-
            @@microsoft/sp-webpart-base.IPropertyPaneField<@@microsoft/sp-webpart-base.IPropertyPaneToggleProps>
  - uid: '@microsoft/sp-webpart-base.queryFocusableSelector'
    name: queryFocusableSelector
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function queryFocusableSelector(elem: HTMLElement)'
      parameters:
        - id: elem
          type:
            - HTMLElement
          description: ''
      return:
        type:
          - NodeList
