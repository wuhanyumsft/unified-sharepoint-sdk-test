### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-webpart-base.IWebPartData'
    name: IWebPartData
    fullName: IWebPartData
    children:
      - '@microsoft/sp-webpart-base.IWebPartData.dataVersion'
      - '@microsoft/sp-webpart-base.IWebPartData.description'
      - '@microsoft/sp-webpart-base.IWebPartData.id'
      - '@microsoft/sp-webpart-base.IWebPartData.instanceId'
      - '@microsoft/sp-webpart-base.IWebPartData.properties'
      - '@microsoft/sp-webpart-base.IWebPartData.serverProcessedContent'
      - '@microsoft/sp-webpart-base.IWebPartData.title'
    langs:
      - typeScript
    type: interface
    summary: >-
      This structure represents the serialized state of a web part. When the
      serialize() API is called on

      a web part, the output should be this structure. The structure of the
      'properties' field is owned by the

      web part and is specific to the web part. Each web part can decide the set
      of properties it wants to

      serialize.
    package: '@microsoft/sp-webpart-base'
  - uid: '@microsoft/sp-webpart-base.IWebPartData.dataVersion'
    name: dataVersion
    fullName: dataVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part data version
    syntax:
      content: string dataVersion
      return:
        type:
          - string
    remarks: >-
      Note that data version is different from the version field in the
      manifest.

      The manifest version is used to control the versioning of the web part
      code, while data version is used to

      control the versioning of the serialized data of the web part. Refer to
      dataVersion field of your web part

      for more information.


      Usage: versioning and evolving the serialized data of the web part

      Required: yes

      Type: string

      Supported values: MAJOR.MINOR

      Example: "1.0"
  - uid: '@microsoft/sp-webpart-base.IWebPartData.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part description
    syntax:
      content: string description
      return:
        type:
          - string
    remarks: |-
      Usage: display the description of the web part.
      Required: no
      Type: string
      Supported values: string with the description.
      Example: "Text"
  - uid: '@microsoft/sp-webpart-base.IWebPartData.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Universally unique web part Type id.
    syntax:
      content: string id
      return:
        type:
          - string
    remarks: |-
      Usage: uniquely identify a web part.
      Required: yes
      Type: GUID
      Supported values: any GUID
      Example: "dbef608d-3ad5-4f8f-b139-d916f2f0a294"
  - uid: '@microsoft/sp-webpart-base.IWebPartData.instanceId'
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Universally unique instance id of the web part. A web part can have
      multiple instances on a page.

      This id is expected to be universally unique across time and page
      boundaries.
    syntax:
      content: string instanceId
      return:
        type:
          - string
    remarks: >-
      how used: used by the framework to uniquely identify an instance of a web
      part.

      mandatory: yes

      type: string

      supported values: a unique string. Could be GUID or other uniquely
      identifiable formats.

      example: ["dbef608d-3ad5-4f8f-b139-d916f2f0a294"]

      experimental: yes
  - uid: '@microsoft/sp-webpart-base.IWebPartData.properties'
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Web part specific properties. The individual web part owns the definition
      of these properties.
    syntax:
      content: any properties
      return:
        type:
          - any
    remarks: >-
      Usage: used by the web part to manage its internal metadata and config
      data. The framework code never
                touches these properties.
      Required: yes

      Type: any

      Supported values: any JSON stringifiable object hierarchy.

      Example: { 'value': 'text value' }
  - uid: '@microsoft/sp-webpart-base.IWebPartData.serverProcessedContent'
    name: serverProcessedContent
    fullName: serverProcessedContent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Definition: The collections of data that can be processed by server side
      services like search index and link fixup

      Required: no
    syntax:
      content: ISerializedServerProcessedData serverProcessedContent
      return:
        type:
          - '@@microsoft/sp-webpart-base.ISerializedServerProcessedData'
  - uid: '@microsoft/sp-webpart-base.IWebPartData.title'
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: Web part title
    syntax:
      content: string title
      return:
        type:
          - string
    remarks: >-
      Usage: display the name of the web part in the toolbox, web part gallery
      and the page.

      Required: yes

      Type: string

      Supported values: string less than 100 characters

      Example: "Text"
