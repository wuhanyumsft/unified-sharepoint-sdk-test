### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-client-preview.Global'
    package: '@microsoft/sp-client-preview'
    name: Global
    children:
      - '@microsoft/sp-client-preview.deepFreeze'
      - '@microsoft/sp-client-preview.deepFreeze'
      - '@microsoft/sp-client-preview.enableCORS'
      - '@microsoft/sp-client-preview.executeAndReThrow'
      - '@microsoft/sp-client-preview.executeWithoutFailing'
      - '@microsoft/sp-client-preview.getPage'
      - '@microsoft/sp-client-preview.getPublic'
      - '@microsoft/sp-client-preview.getWebParts'
      - '@microsoft/sp-client-preview.publishPage'
    type: package
    langs:
      - typeScript
  - uid: '@microsoft/sp-client-preview.deepFreeze'
    name: deepFreeze
    children: []
    type: function
    langs:
      - typeScript
    summary: 'To make obj fully immutable, freeze each object in obj.'
    syntax:
      content: 'function deepFreeze(obj: Object)'
      parameters:
        - id: obj
          type:
            - Object
          description: ''
      return:
        type:
          - Object
  - uid: '@microsoft/sp-client-preview.deepFreeze'
    name: deepFreeze
    children: []
    type: function
    langs:
      - typeScript
    summary: 'To make obj fully immutable, freeze each object in obj.'
    syntax:
      content: 'function deepFreeze(obj: Object)'
      parameters:
        - id: obj
          type:
            - Object
          description: ''
      return:
        type:
          - Object
  - uid: '@microsoft/sp-client-preview.enableCORS'
    name: enableCORS
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableCORS(req: any, res: any)'
      parameters:
        - id: req
          type:
            - any
          description: ''
        - id: res
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-client-preview.executeAndReThrow'
    name: executeAndReThrow
    children: []
    type: function
    langs:
      - typeScript
    summary: Execute the passed in delegate and re-throw a custom error.
    syntax:
      content: >-
        function executeAndReThrow(method: () => void, errorToThrow: SPError,
        logSource?: _ILogSource)
      parameters:
        - id: method
          type:
            - () => void
          description: to execute.
        - id: errorToThrow
          type:
            - SPError
          description: ''
        - id: logSource
          type:
            - _ILogSource
          description: ''
          optional: true
  - uid: '@microsoft/sp-client-preview.executeWithoutFailing'
    name: executeWithoutFailing
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Execute the passed in delegate with a guarantee that no exception will
      leak out.

      Do not use this normally. Only in error handling scenarios where you would
      like

      to be defesive.
    syntax:
      content: >-
        function executeWithoutFailing(method: () => void, logSource:
        _ILogSource)
      parameters:
        - id: method
          type:
            - () => void
          description: to execute
        - id: logSource
          type:
            - _ILogSource
          description: ''
  - uid: '@microsoft/sp-client-preview.getPage'
    name: getPage
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPage(req: any, res: any)'
      parameters:
        - id: req
          type:
            - any
          description: ''
        - id: res
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-client-preview.getPublic'
    name: getPublic
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPublic(req: any, res: any)'
      parameters:
        - id: req
          type:
            - any
          description: ''
        - id: res
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-client-preview.getWebParts'
    name: getWebParts
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getWebParts(req: any, res: any)'
      parameters:
        - id: req
          type:
            - any
          description: ''
        - id: res
          type:
            - any
          description: ''
  - uid: '@microsoft/sp-client-preview.publishPage'
    name: publishPage
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publishPage(req: any, res: any)'
      parameters:
        - id: req
          type:
            - any
          description: ''
        - id: res
          type:
            - any
          description: ''
